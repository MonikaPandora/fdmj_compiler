define i64 @main() {
C13:
%r176 = call i64* @malloc(i64 88)
%r177 = ptrtoint i64* %r176 to i64
%r178 = add i64 %r177, 8
%r179 = sub i64 %r178, 8
%r180 = inttoptr i64 %r179 to i64*
store i64 10, i64* %r180, align 8
%r181 = inttoptr i64 %r178 to i64*
store i64 2, i64* %r181, align 8
%r182 = add i64 %r178, 8
%r183 = inttoptr i64 %r182 to i64*
store i64 0, i64* %r183, align 8
%r184 = add i64 %r178, 16
%r185 = inttoptr i64 %r184 to i64*
store i64 2, i64* %r185, align 8
%r186 = add i64 %r178, 24
%r187 = inttoptr i64 %r186 to i64*
store i64 3, i64* %r187, align 8
%r188 = add i64 %r178, 32
%r189 = inttoptr i64 %r188 to i64*
store i64 6, i64* %r189, align 8
%r190 = add i64 %r178, 40
%r191 = inttoptr i64 %r190 to i64*
store i64 2, i64* %r191, align 8
%r192 = add i64 %r178, 48
%r193 = inttoptr i64 %r192 to i64*
store i64 5, i64* %r193, align 8
%r194 = add i64 %r178, 56
%r195 = inttoptr i64 %r194 to i64*
store i64 4, i64* %r195, align 8
%r196 = add i64 %r178, 64
%r197 = inttoptr i64 %r196 to i64*
store i64 2, i64* %r197, align 8
%r198 = add i64 %r178, 72
%r199 = inttoptr i64 %r198 to i64*
store i64 8, i64* %r199, align 8
%r200 = add i64 1, 0
%r201 = add i64 1, 0
%r202 = sub i64 %r178, 8
%r203 = inttoptr i64 %r202 to i64*
%r204 = load i64, i64* %r203, align 8
%r205 = call i64* @malloc(i64 168)
%r206 = ptrtoint i64* %r205 to i64
%r207 = inttoptr i64 %r206 to i64*
store i64 20, i64* %r207, align 8
%r208 = add i64 %r206, 8
%r209 = add i64 %r208, 0
%r210 = add i64 %r209, 0
%r211 = inttoptr i64 %r210 to i64*
store i64 1, i64* %r211, align 8
br label %L0
L0:
%r212 = phi i64 [%r227, %L10], [%r200, %C13]
%r213 = phi i64 [%r226, %L10], [%r201, %C13]
%r214 = icmp slt i64 %r212, %r204
br i1 %r214, label %L11, label %L1
L1:
call void @putint(i64 %r213)
call void @putch(i64 10)
ret i64 0
L11:
%r215 = mul i64 %r212, 8
%r216 = add i64 %r209, %r215
%r217 = inttoptr i64 %r216 to i64*
store i64 1, i64* %r217, align 8
%r218 = add i64 0, 0
br label %L2
L2:
%r219 = phi i64 [%r241, %L7], [%r218, %L11]
%r220 = icmp slt i64 %r219, %r212
br i1 %r220, label %L8, label %L3
L3:
%r221 = mul i64 %r212, 8
%r222 = add i64 %r209, %r221
%r223 = inttoptr i64 %r222 to i64*
%r224 = load i64, i64* %r223, align 8
%r225 = icmp sgt i64 %r224, %r213
br i1 %r225, label %L9, label %L10
L10:
%r226 = phi i64 [%r231, %L9], [%r213, %L3]
%r227 = add i64 %r212, 1
br label %L0
L8:
%r232 = mul i64 %r219, 8
%r233 = add i64 %r178, %r232
%r234 = inttoptr i64 %r233 to i64*
%r235 = load i64, i64* %r234, align 8
%r236 = mul i64 %r212, 8
%r237 = add i64 %r178, %r236
%r238 = inttoptr i64 %r237 to i64*
%r239 = load i64, i64* %r238, align 8
%r240 = icmp slt i64 %r235, %r239
br i1 %r240, label %L6, label %L7
L7:
%r241 = add i64 %r219, 1
br label %L2
L6:
%r242 = mul i64 %r219, 8
%r243 = add i64 %r209, %r242
%r244 = inttoptr i64 %r243 to i64*
%r245 = load i64, i64* %r244, align 8
%r246 = add i64 %r245, 1
%r247 = mul i64 %r212, 8
%r248 = add i64 %r209, %r247
%r249 = inttoptr i64 %r248 to i64*
%r250 = load i64, i64* %r249, align 8
%r251 = icmp sgt i64 %r246, %r250
br i1 %r251, label %L4, label %L5
L5:
br label %L7
L4:
%r252 = mul i64 %r212, 8
%r253 = add i64 %r209, %r252
%r254 = inttoptr i64 %r253 to i64*
%r255 = mul i64 %r219, 8
%r256 = add i64 %r209, %r255
%r257 = inttoptr i64 %r256 to i64*
%r258 = load i64, i64* %r257, align 8
%r259 = add i64 %r258, 1
store i64 %r259, i64* %r254, align 8
br label %L5
L9:
%r228 = mul i64 %r212, 8
%r229 = add i64 %r209, %r228
%r230 = inttoptr i64 %r229 to i64*
%r231 = load i64, i64* %r230, align 8
br label %L10
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)

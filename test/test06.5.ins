
------For function ----- main

------Basic Block Graph---------
C1 (0): 
------~Final traced LLVM instructions ---------
define i64 @main() {
C1:
%r100 = add i64 2, 0
call void @putint(i64 %r100)
call void @putch(i64 10)
%r111 = call i64* @malloc(i64 40)
%r104 = ptrtoint i64* %r111 to i64
%r112 = inttoptr i64 %r104 to i64*
store i64 4, i64* %r112, align 8
%r104 = add i64 %r104, 8
%r101 = add i64 %r104, 0
%r114 = sub i64 %r101, 8
%r115 = inttoptr i64 %r114 to i64*
%r113 = load i64, i64* %r115, align 8
call void @putint(i64 %r113)
call void @putch(i64 10)
%r116 = call i64* @malloc(i64 32)
%r105 = ptrtoint i64* %r116 to i64
%r117 = call i64* @malloc(i64 32)
%r110 = ptrtoint i64* %r117 to i64
%r106 = add i64 %r110, 8
%r118 = sub i64 %r106, -8
%r119 = inttoptr i64 %r118 to i64*
store i64 3, i64* %r119, align 8
%r120 = inttoptr i64 %r106 to i64*
store double 1.100000, i64* %r120, align 8
%r121 = add i64 %r106, 8
%r122 = inttoptr i64 %r121 to i64*
store double 2.200000, i64* %r122, align 8
%r123 = add i64 %r106, 16
%r124 = inttoptr i64 %r123 to i64*
store double 3.300000, i64* %r124, align 8
%r125 = add i64 %r105, 24
%r126 = inttoptr i64 %r125 to i64*
store i64 %r106, i64* %r126, align 8
%r127 = call i64* @malloc(i64 32)
%r109 = ptrtoint i64* %r127 to i64
%r107 = add i64 %r109, 8
%r128 = sub i64 %r107, -8
%r129 = inttoptr i64 %r128 to i64*
store i64 3, i64* %r129, align 8
%r130 = inttoptr i64 %r107 to i64*
store i64 1, i64* %r130, align 8
%r131 = add i64 %r107, 8
%r132 = inttoptr i64 %r131 to i64*
store i64 2, i64* %r132, align 8
%r133 = add i64 %r107, 16
%r134 = inttoptr i64 %r133 to i64*
store i64 3, i64* %r134, align 8
%r135 = add i64 %r105, 16
%r136 = inttoptr i64 %r135 to i64*
store i64 %r107, i64* %r136, align 8
%r137 = add i64 %r105, 8
%r138 = inttoptr i64 %r137 to i64*
store double 1.100000, i64* %r138, align 8
%r139 = inttoptr i64 %r105 to i64*
store i64 1, i64* %r139, align 8
%r103 = add i64 %r105, 0
%r141 = inttoptr i64 %r103 to i64*
%r140 = load i64, i64* %r141, align 8
call void @putint(i64 %r140)
call void @putch(i64 10)
%r145 = add i64 %r103, 16
%r146 = inttoptr i64 %r145 to i64*
%r144 = load i64, i64* %r146, align 8
%r143 = add i64 %r144, 8
%r147 = inttoptr i64 %r143 to i64*
%r142 = load i64, i64* %r147, align 8
call void @putint(i64 %r142)
call void @putch(i64 10)
%r148 = call i64* @malloc(i64 48)
%r108 = ptrtoint i64* %r148 to i64
%r149 = inttoptr i64 %r108 to i64*
store i64 5, i64* %r149, align 8
%r108 = add i64 %r108, 8
%r102 = add i64 %r108, 0
%r151 = sub i64 %r102, 8
%r152 = inttoptr i64 %r151 to i64*
%r150 = load i64, i64* %r152, align 8
call void @putint(i64 %r150)
call void @putch(i64 10)
%r154 = add i64 %r103, 8
%r155 = inttoptr i64 %r154 to i64*
%s153 = load double, i64* %r155, align 8
call void @putfloat(double %s153)
call void @putch(i64 10)
%r159 = add i64 %r103, 24
%r160 = inttoptr i64 %r159 to i64*
%r158 = load i64, i64* %r160, align 8
%r157 = add i64 %r158, 8
%r161 = inttoptr i64 %r157 to i64*
%s156 = load double, i64* %r161, align 8
call void @putfloat(double %s156)
call void @putch(i64 10)
ret i64 0
}

------Flow Graph------
[         C1:; d: s: ]  (0): 1 
[%r100 = add i64 2, 0; d: 100; s: ]  (1): 2 
[call void @putint(i64 %r100); d: s: 100]  (2): 3 
[call void @putch(i64 10); d: s: ]  (3): 4 
[%r111 = call i64* @malloc(i64 40); d: 111; s: ]  (4): 5 
[%r104 = ptrtoint i64* %r111 to i64; d: 104; s: 111]  (5): 6 
[%r112 = inttoptr i64 %r104 to i64*; d: 112; s: 104]  (6): 7 
[store i64 4, i64* %r112, align 8; d: s: 112]  (7): 8 
[%r104 = add i64 %r104, 8; d: 104; s: 104]  (8): 9 
[%r101 = add i64 %r104, 0; d: 101; s: 104]  (9): 10 
[%r114 = sub i64 %r101, 8; d: 114; s: 101]  (10): 11 
[%r115 = inttoptr i64 %r114 to i64*; d: 115; s: 114]  (11): 12 
[%r113 = load i64, i64* %r115, align 8; d: 113; s: 115]  (12): 13 
[call void @putint(i64 %r113); d: s: 113]  (13): 14 
[call void @putch(i64 10); d: s: ]  (14): 15 
[%r116 = call i64* @malloc(i64 32); d: 116; s: ]  (15): 16 
[%r105 = ptrtoint i64* %r116 to i64; d: 105; s: 116]  (16): 17 
[%r117 = call i64* @malloc(i64 32); d: 117; s: ]  (17): 18 
[%r110 = ptrtoint i64* %r117 to i64; d: 110; s: 117]  (18): 19 
[%r106 = add i64 %r110, 8; d: 106; s: 110]  (19): 20 
[%r118 = sub i64 %r106, -8; d: 118; s: 106]  (20): 21 
[%r119 = inttoptr i64 %r118 to i64*; d: 119; s: 118]  (21): 22 
[store i64 3, i64* %r119, align 8; d: s: 119]  (22): 23 
[%r120 = inttoptr i64 %r106 to i64*; d: 120; s: 106]  (23): 24 
[store double 1.100000, i64* %r120, align 8; d: s: 120]  (24): 25 
[%r121 = add i64 %r106, 8; d: 121; s: 106]  (25): 26 
[%r122 = inttoptr i64 %r121 to i64*; d: 122; s: 121]  (26): 27 
[store double 2.200000, i64* %r122, align 8; d: s: 122]  (27): 28 
[%r123 = add i64 %r106, 16; d: 123; s: 106]  (28): 29 
[%r124 = inttoptr i64 %r123 to i64*; d: 124; s: 123]  (29): 30 
[store double 3.300000, i64* %r124, align 8; d: s: 124]  (30): 31 
[%r125 = add i64 %r105, 24; d: 125; s: 105]  (31): 32 
[%r126 = inttoptr i64 %r125 to i64*; d: 126; s: 125]  (32): 33 
[store i64 %r106, i64* %r126, align 8; d: s: 106, 126]  (33): 34 
[%r127 = call i64* @malloc(i64 32); d: 127; s: ]  (34): 35 
[%r109 = ptrtoint i64* %r127 to i64; d: 109; s: 127]  (35): 36 
[%r107 = add i64 %r109, 8; d: 107; s: 109]  (36): 37 
[%r128 = sub i64 %r107, -8; d: 128; s: 107]  (37): 38 
[%r129 = inttoptr i64 %r128 to i64*; d: 129; s: 128]  (38): 39 
[store i64 3, i64* %r129, align 8; d: s: 129]  (39): 40 
[%r130 = inttoptr i64 %r107 to i64*; d: 130; s: 107]  (40): 41 
[store i64 1, i64* %r130, align 8; d: s: 130]  (41): 42 
[%r131 = add i64 %r107, 8; d: 131; s: 107]  (42): 43 
[%r132 = inttoptr i64 %r131 to i64*; d: 132; s: 131]  (43): 44 
[store i64 2, i64* %r132, align 8; d: s: 132]  (44): 45 
[%r133 = add i64 %r107, 16; d: 133; s: 107]  (45): 46 
[%r134 = inttoptr i64 %r133 to i64*; d: 134; s: 133]  (46): 47 
[store i64 3, i64* %r134, align 8; d: s: 134]  (47): 48 
[%r135 = add i64 %r105, 16; d: 135; s: 105]  (48): 49 
[%r136 = inttoptr i64 %r135 to i64*; d: 136; s: 135]  (49): 50 
[store i64 %r107, i64* %r136, align 8; d: s: 107, 136]  (50): 51 
[%r137 = add i64 %r105, 8; d: 137; s: 105]  (51): 52 
[%r138 = inttoptr i64 %r137 to i64*; d: 138; s: 137]  (52): 53 
[store double 1.100000, i64* %r138, align 8; d: s: 138]  (53): 54 
[%r139 = inttoptr i64 %r105 to i64*; d: 139; s: 105]  (54): 55 
[store i64 1, i64* %r139, align 8; d: s: 139]  (55): 56 
[%r103 = add i64 %r105, 0; d: 103; s: 105]  (56): 57 
[%r141 = inttoptr i64 %r103 to i64*; d: 141; s: 103]  (57): 58 
[%r140 = load i64, i64* %r141, align 8; d: 140; s: 141]  (58): 59 
[call void @putint(i64 %r140); d: s: 140]  (59): 60 
[call void @putch(i64 10); d: s: ]  (60): 61 
[%r145 = add i64 %r103, 16; d: 145; s: 103]  (61): 62 
[%r146 = inttoptr i64 %r145 to i64*; d: 146; s: 145]  (62): 63 
[%r144 = load i64, i64* %r146, align 8; d: 144; s: 146]  (63): 64 
[%r143 = add i64 %r144, 8; d: 143; s: 144]  (64): 65 
[%r147 = inttoptr i64 %r143 to i64*; d: 147; s: 143]  (65): 66 
[%r142 = load i64, i64* %r147, align 8; d: 142; s: 147]  (66): 67 
[call void @putint(i64 %r142); d: s: 142]  (67): 68 
[call void @putch(i64 10); d: s: ]  (68): 69 
[%r148 = call i64* @malloc(i64 48); d: 148; s: ]  (69): 70 
[%r108 = ptrtoint i64* %r148 to i64; d: 108; s: 148]  (70): 71 
[%r149 = inttoptr i64 %r108 to i64*; d: 149; s: 108]  (71): 72 
[store i64 5, i64* %r149, align 8; d: s: 149]  (72): 73 
[%r108 = add i64 %r108, 8; d: 108; s: 108]  (73): 74 
[%r102 = add i64 %r108, 0; d: 102; s: 108]  (74): 75 
[%r151 = sub i64 %r102, 8; d: 151; s: 102]  (75): 76 
[%r152 = inttoptr i64 %r151 to i64*; d: 152; s: 151]  (76): 77 
[%r150 = load i64, i64* %r152, align 8; d: 150; s: 152]  (77): 78 
[call void @putint(i64 %r150); d: s: 150]  (78): 79 
[call void @putch(i64 10); d: s: ]  (79): 80 
[%r154 = add i64 %r103, 8; d: 154; s: 103]  (80): 81 
[%r155 = inttoptr i64 %r154 to i64*; d: 155; s: 154]  (81): 82 
[%s153 = load double, i64* %r155, align 8; d: 153; s: 155]  (82): 83 
[call void @putfloat(double %s153); d: s: 153]  (83): 84 
[call void @putch(i64 10); d: s: ]  (84): 85 
[%r159 = add i64 %r103, 24; d: 159; s: 103]  (85): 86 
[%r160 = inttoptr i64 %r159 to i64*; d: 160; s: 159]  (86): 87 
[%r158 = load i64, i64* %r160, align 8; d: 158; s: 160]  (87): 88 
[%r157 = add i64 %r158, 8; d: 157; s: 158]  (88): 89 
[%r161 = inttoptr i64 %r157 to i64*; d: 161; s: 157]  (89): 90 
[%s156 = load double, i64* %r161, align 8; d: 156; s: 161]  (90): 91 
[call void @putfloat(double %s156); d: s: 156]  (91): 92 
[call void @putch(i64 10); d: s: ]  (92): 93 
[   ret i64 0; d: s: ]  (93): 

/* ------Liveness Graph------*/
Number of iterations=39
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=100, 
use=
In=
Out=100, 
----------------------
 (2): 3 
def=
use=100, 
In=100, 
Out=
----------------------
 (3): 4 
def=
use=
In=
Out=
----------------------
 (4): 5 
def=111, 
use=
In=
Out=111, 
----------------------
 (5): 6 
def=104, 
use=111, 
In=111, 
Out=104, 
----------------------
 (6): 7 
def=112, 
use=104, 
In=104, 
Out=112, 104, 
----------------------
 (7): 8 
def=
use=112, 
In=104, 112, 
Out=104, 
----------------------
 (8): 9 
def=104, 
use=104, 
In=104, 
Out=104, 
----------------------
 (9): 10 
def=101, 
use=104, 
In=104, 
Out=101, 
----------------------
 (10): 11 
def=114, 
use=101, 
In=101, 
Out=114, 
----------------------
 (11): 12 
def=115, 
use=114, 
In=114, 
Out=115, 
----------------------
 (12): 13 
def=113, 
use=115, 
In=115, 
Out=113, 
----------------------
 (13): 14 
def=
use=113, 
In=113, 
Out=
----------------------
 (14): 15 
def=
use=
In=
Out=
----------------------
 (15): 16 
def=116, 
use=
In=
Out=116, 
----------------------
 (16): 17 
def=105, 
use=116, 
In=116, 
Out=105, 
----------------------
 (17): 18 
def=117, 
use=
In=105, 
Out=117, 105, 
----------------------
 (18): 19 
def=110, 
use=117, 
In=105, 117, 
Out=110, 105, 
----------------------
 (19): 20 
def=106, 
use=110, 
In=105, 110, 
Out=106, 105, 
----------------------
 (20): 21 
def=118, 
use=106, 
In=105, 106, 
Out=118, 106, 105, 
----------------------
 (21): 22 
def=119, 
use=118, 
In=105, 106, 118, 
Out=119, 105, 106, 
----------------------
 (22): 23 
def=
use=119, 
In=106, 105, 119, 
Out=106, 105, 
----------------------
 (23): 24 
def=120, 
use=106, 
In=105, 106, 
Out=120, 105, 106, 
----------------------
 (24): 25 
def=
use=120, 
In=106, 105, 120, 
Out=106, 105, 
----------------------
 (25): 26 
def=121, 
use=106, 
In=105, 106, 
Out=121, 106, 105, 
----------------------
 (26): 27 
def=122, 
use=121, 
In=105, 106, 121, 
Out=122, 105, 106, 
----------------------
 (27): 28 
def=
use=122, 
In=106, 105, 122, 
Out=106, 105, 
----------------------
 (28): 29 
def=123, 
use=106, 
In=105, 106, 
Out=123, 105, 106, 
----------------------
 (29): 30 
def=124, 
use=123, 
In=106, 105, 123, 
Out=124, 106, 105, 
----------------------
 (30): 31 
def=
use=124, 
In=105, 106, 124, 
Out=105, 106, 
----------------------
 (31): 32 
def=125, 
use=105, 
In=106, 105, 
Out=125, 105, 106, 
----------------------
 (32): 33 
def=126, 
use=125, 
In=106, 105, 125, 
Out=126, 106, 105, 
----------------------
 (33): 34 
def=
use=106, 126, 
In=105, 106, 126, 
Out=105, 
----------------------
 (34): 35 
def=127, 
use=
In=105, 
Out=127, 105, 
----------------------
 (35): 36 
def=109, 
use=127, 
In=105, 127, 
Out=109, 105, 
----------------------
 (36): 37 
def=107, 
use=109, 
In=105, 109, 
Out=107, 105, 
----------------------
 (37): 38 
def=128, 
use=107, 
In=105, 107, 
Out=128, 107, 105, 
----------------------
 (38): 39 
def=129, 
use=128, 
In=105, 107, 128, 
Out=129, 105, 107, 
----------------------
 (39): 40 
def=
use=129, 
In=107, 105, 129, 
Out=107, 105, 
----------------------
 (40): 41 
def=130, 
use=107, 
In=105, 107, 
Out=130, 105, 107, 
----------------------
 (41): 42 
def=
use=130, 
In=107, 105, 130, 
Out=107, 105, 
----------------------
 (42): 43 
def=131, 
use=107, 
In=105, 107, 
Out=131, 107, 105, 
----------------------
 (43): 44 
def=132, 
use=131, 
In=105, 107, 131, 
Out=132, 105, 107, 
----------------------
 (44): 45 
def=
use=132, 
In=107, 105, 132, 
Out=107, 105, 
----------------------
 (45): 46 
def=133, 
use=107, 
In=105, 107, 
Out=133, 105, 107, 
----------------------
 (46): 47 
def=134, 
use=133, 
In=107, 105, 133, 
Out=134, 107, 105, 
----------------------
 (47): 48 
def=
use=134, 
In=105, 107, 134, 
Out=105, 107, 
----------------------
 (48): 49 
def=135, 
use=105, 
In=107, 105, 
Out=135, 105, 107, 
----------------------
 (49): 50 
def=136, 
use=135, 
In=107, 105, 135, 
Out=136, 107, 105, 
----------------------
 (50): 51 
def=
use=107, 136, 
In=105, 107, 136, 
Out=105, 
----------------------
 (51): 52 
def=137, 
use=105, 
In=105, 
Out=137, 105, 
----------------------
 (52): 53 
def=138, 
use=137, 
In=105, 137, 
Out=138, 105, 
----------------------
 (53): 54 
def=
use=138, 
In=105, 138, 
Out=105, 
----------------------
 (54): 55 
def=139, 
use=105, 
In=105, 
Out=139, 105, 
----------------------
 (55): 56 
def=
use=139, 
In=105, 139, 
Out=105, 
----------------------
 (56): 57 
def=103, 
use=105, 
In=105, 
Out=103, 
----------------------
 (57): 58 
def=141, 
use=103, 
In=103, 
Out=141, 103, 
----------------------
 (58): 59 
def=140, 
use=141, 
In=103, 141, 
Out=140, 103, 
----------------------
 (59): 60 
def=
use=140, 
In=103, 140, 
Out=103, 
----------------------
 (60): 61 
def=
use=
In=103, 
Out=103, 
----------------------
 (61): 62 
def=145, 
use=103, 
In=103, 
Out=145, 103, 
----------------------
 (62): 63 
def=146, 
use=145, 
In=103, 145, 
Out=146, 103, 
----------------------
 (63): 64 
def=144, 
use=146, 
In=103, 146, 
Out=144, 103, 
----------------------
 (64): 65 
def=143, 
use=144, 
In=103, 144, 
Out=143, 103, 
----------------------
 (65): 66 
def=147, 
use=143, 
In=103, 143, 
Out=147, 103, 
----------------------
 (66): 67 
def=142, 
use=147, 
In=103, 147, 
Out=142, 103, 
----------------------
 (67): 68 
def=
use=142, 
In=103, 142, 
Out=103, 
----------------------
 (68): 69 
def=
use=
In=103, 
Out=103, 
----------------------
 (69): 70 
def=148, 
use=
In=103, 
Out=148, 103, 
----------------------
 (70): 71 
def=108, 
use=148, 
In=103, 148, 
Out=108, 103, 
----------------------
 (71): 72 
def=149, 
use=108, 
In=103, 108, 
Out=149, 103, 108, 
----------------------
 (72): 73 
def=
use=149, 
In=108, 103, 149, 
Out=108, 103, 
----------------------
 (73): 74 
def=108, 
use=108, 
In=103, 108, 
Out=108, 103, 
----------------------
 (74): 75 
def=102, 
use=108, 
In=103, 108, 
Out=102, 103, 
----------------------
 (75): 76 
def=151, 
use=102, 
In=103, 102, 
Out=151, 103, 
----------------------
 (76): 77 
def=152, 
use=151, 
In=103, 151, 
Out=152, 103, 
----------------------
 (77): 78 
def=150, 
use=152, 
In=103, 152, 
Out=150, 103, 
----------------------
 (78): 79 
def=
use=150, 
In=103, 150, 
Out=103, 
----------------------
 (79): 80 
def=
use=
In=103, 
Out=103, 
----------------------
 (80): 81 
def=154, 
use=103, 
In=103, 
Out=154, 103, 
----------------------
 (81): 82 
def=155, 
use=154, 
In=103, 154, 
Out=155, 103, 
----------------------
 (82): 83 
def=153, 
use=155, 
In=103, 155, 
Out=153, 103, 
----------------------
 (83): 84 
def=
use=153, 
In=103, 153, 
Out=103, 
----------------------
 (84): 85 
def=
use=
In=103, 
Out=103, 
----------------------
 (85): 86 
def=159, 
use=103, 
In=103, 
Out=159, 
----------------------
 (86): 87 
def=160, 
use=159, 
In=159, 
Out=160, 
----------------------
 (87): 88 
def=158, 
use=160, 
In=160, 
Out=158, 
----------------------
 (88): 89 
def=157, 
use=158, 
In=158, 
Out=157, 
----------------------
 (89): 90 
def=161, 
use=157, 
In=157, 
Out=161, 
----------------------
 (90): 91 
def=156, 
use=161, 
In=161, 
Out=156, 
----------------------
 (91): 92 
def=
use=156, 
In=156, 
Out=
----------------------
 (92): 93 
def=
use=
In=
Out=
----------------------
 (93): 
def=
use=
In=
Out=


------For function ----- main

------Basic Block Graph---------
C1 (0): 
------~Final traced AS instructions ---------
define i64 @main() {
C1:
%100 = add i64 2, 0
call void @putint(i64 %100)
call void @putch(i64 10)
%111 = call i64* @malloc(i64 40)
%104 = ptrtoint i64* %111 to i64
%112 = inttoptr i64 %104 to i64*
store i64 4, i64* %112, align 8
%104 = add i64 %104, 8
%101 = add i64 %104, 0
%114 = sub i64 %101, -8
%115 = inttoptr i64 %114 to i64*
%113 = load i64, i64* %115, align 8
call void @putint(i64 %113)
call void @putch(i64 10)
%116 = call i64* @malloc(i64 32)
%105 = ptrtoint i64* %116 to i64
%117 = call i64* @malloc(i64 32)
%110 = ptrtoint i64* %117 to i64
%106 = add i64 %110, 8
%118 = sub i64 %106, -8
%119 = inttoptr i64 %118 to i64*
store i64 3, i64* %119, align 8
%120 = inttoptr i64 %106 to i64*
store double 1.100000, i64* %120, align 8
%121 = add i64 %106, 8
%122 = inttoptr i64 %121 to i64*
store double 2.200000, i64* %122, align 8
%123 = add i64 %106, 16
%124 = inttoptr i64 %123 to i64*
store double 3.300000, i64* %124, align 8
%125 = add i64 %105, 24
%126 = inttoptr i64 %125 to i64*
store i64 %106, i64* %126, align 8
%127 = call i64* @malloc(i64 32)
%109 = ptrtoint i64* %127 to i64
%107 = add i64 %109, 8
%128 = sub i64 %107, -8
%129 = inttoptr i64 %128 to i64*
store i64 3, i64* %129, align 8
%130 = inttoptr i64 %107 to i64*
store i64 1, i64* %130, align 8
%131 = add i64 %107, 8
%132 = inttoptr i64 %131 to i64*
store i64 2, i64* %132, align 8
%133 = add i64 %107, 16
%134 = inttoptr i64 %133 to i64*
store i64 3, i64* %134, align 8
%135 = add i64 %105, 16
%136 = inttoptr i64 %135 to i64*
store i64 %107, i64* %136, align 8
%137 = add i64 %105, 8
%138 = inttoptr i64 %137 to i64*
store double 1.100000, i64* %138, align 8
%139 = inttoptr i64 %105 to i64*
store i64 1, i64* %139, align 8
%103 = add i64 %105, 0
%141 = inttoptr i64 %103 to i64*
%140 = load i64, i64* %141, align 8
call void @putint(i64 %140)
call void @putch(i64 10)
%145 = add i64 %103, 16
%146 = inttoptr i64 %145 to i64*
%144 = load i64, i64* %146, align 8
%143 = add i64 %144, 8
%147 = inttoptr i64 %143 to i64*
%142 = load i64, i64* %147, align 8
call void @putint(i64 %142)
call void @putch(i64 10)
%148 = call i64* @malloc(i64 48)
%108 = ptrtoint i64* %148 to i64
%149 = inttoptr i64 %108 to i64*
store i64 5, i64* %149, align 8
%108 = add i64 %108, 8
%102 = add i64 %108, 0
%151 = sub i64 %102, -8
%152 = inttoptr i64 %151 to i64*
%150 = load i64, i64* %152, align 8
call void @putint(i64 %150)
call void @putch(i64 10)
%154 = add i64 %103, 8
%155 = inttoptr i64 %154 to i64*
%153 = load double, i64* %155, align 8
call void @putfloat(double %153)
call void @putch(i64 10)
%159 = add i64 %103, 24
%160 = inttoptr i64 %159 to i64*
%158 = load i64, i64* %160, align 8
%157 = add i64 %158, 8
%161 = inttoptr i64 %157 to i64*
%156 = load double, i64* %161, align 8
call void @putfloat(double %156)
call void @putch(i64 10)
ret i64 0
C0:
ret i64 -1
}


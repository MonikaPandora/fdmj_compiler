
------For function ----- main

------Basic Block Graph---------
C1 (0): 
------~Final traced AS instructions ---------
define i64 @main() {
C1:
%100 = add i64 0, 0
%106 = call i64* @malloc(i64 72)
%105 = ptrtoint i64* %106 to i64
%101 = add i64 %105, 8
%107 = sub i64 %101, -8
%108 = inttoptr i64 %107 to i64*
store i64 8, i64* %108, align 8
%109 = inttoptr i64 %101 to i64*
store i64 6, i64* %109, align 8
%110 = add i64 %101, 8
%111 = inttoptr i64 %110 to i64*
store i64 3, i64* %111, align 8
%112 = add i64 %101, 16
%113 = inttoptr i64 %112 to i64*
store i64 0, i64* %113, align 8
%114 = add i64 %101, 24
%115 = inttoptr i64 %114 to i64*
store i64 5, i64* %115, align 8
%116 = add i64 %101, 32
%117 = inttoptr i64 %116 to i64*
store i64 9, i64* %117, align 8
%118 = add i64 %101, 40
%119 = inttoptr i64 %118 to i64*
store i64 1, i64* %119, align 8
%120 = add i64 %101, 48
%121 = inttoptr i64 %120 to i64*
store i64 2, i64* %121, align 8
%122 = add i64 %101, 56
%123 = inttoptr i64 %122 to i64*
store i64 1, i64* %123, align 8
%102 = fadd double 0.300000, 0.0
%124 = call i64* @malloc(i64 56)
%104 = ptrtoint i64* %124 to i64
%103 = add i64 %104, 8
%125 = sub i64 %103, -8
%126 = inttoptr i64 %125 to i64*
store i64 6, i64* %126, align 8
%127 = inttoptr i64 %103 to i64*
store double 1.300000, i64* %127, align 8
%128 = add i64 %103, 8
%129 = inttoptr i64 %128 to i64*
store double 0.300000, i64* %129, align 8
%130 = add i64 %103, 16
%131 = inttoptr i64 %130 to i64*
store double 0.300000, i64* %131, align 8
%132 = add i64 %103, 24
%133 = inttoptr i64 %132 to i64*
store double 0.000000, i64* %133, align 8
%134 = add i64 %103, 32
%135 = inttoptr i64 %134 to i64*
store double 0.100000, i64* %135, align 8
%136 = add i64 %103, 40
%137 = inttoptr i64 %136 to i64*
store double 666.000000, i64* %137, align 8
ret i64 0
C0:
ret i64 -1
}


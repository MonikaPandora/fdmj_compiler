define i64 @main() {
C1:
%r162 = add i64 2, 0
call void @putint(i64 %r162)
call void @putch(i64 10)
%r163 = call i64* @malloc(i64 40)
%r164 = ptrtoint i64* %r163 to i64
%r165 = inttoptr i64 %r164 to i64*
store i64 4, i64* %r165, align 8
%r166 = add i64 %r164, 8
%r167 = add i64 %r166, 0
%r168 = sub i64 %r167, 8
%r169 = inttoptr i64 %r168 to i64*
%r170 = load i64, i64* %r169, align 8
call void @putint(i64 %r170)
call void @putch(i64 10)
%r171 = call i64* @malloc(i64 32)
%r172 = ptrtoint i64* %r171 to i64
%r173 = call i64* @malloc(i64 32)
%r174 = ptrtoint i64* %r173 to i64
%r175 = add i64 %r174, 8
%r176 = sub i64 %r175, -8
%r177 = inttoptr i64 %r176 to i64*
store i64 3, i64* %r177, align 8
%r178 = inttoptr i64 %r175 to i64*
store double 1.100000, i64* %r178, align 8
%r179 = add i64 %r175, 8
%r180 = inttoptr i64 %r179 to i64*
store double 2.200000, i64* %r180, align 8
%r181 = add i64 %r175, 16
%r182 = inttoptr i64 %r181 to i64*
store double 3.300000, i64* %r182, align 8
%r183 = add i64 %r172, 24
%r184 = inttoptr i64 %r183 to i64*
store i64 %r175, i64* %r184, align 8
%r185 = call i64* @malloc(i64 32)
%r186 = ptrtoint i64* %r185 to i64
%r187 = add i64 %r186, 8
%r188 = sub i64 %r187, -8
%r189 = inttoptr i64 %r188 to i64*
store i64 3, i64* %r189, align 8
%r190 = inttoptr i64 %r187 to i64*
store i64 1, i64* %r190, align 8
%r191 = add i64 %r187, 8
%r192 = inttoptr i64 %r191 to i64*
store i64 2, i64* %r192, align 8
%r193 = add i64 %r187, 16
%r194 = inttoptr i64 %r193 to i64*
store i64 3, i64* %r194, align 8
%r195 = add i64 %r172, 16
%r196 = inttoptr i64 %r195 to i64*
store i64 %r187, i64* %r196, align 8
%r197 = add i64 %r172, 8
%r198 = inttoptr i64 %r197 to i64*
store double 1.100000, i64* %r198, align 8
%r199 = inttoptr i64 %r172 to i64*
store i64 1, i64* %r199, align 8
%r200 = add i64 %r172, 0
%r201 = inttoptr i64 %r200 to i64*
%r202 = load i64, i64* %r201, align 8
call void @putint(i64 %r202)
call void @putch(i64 10)
%r203 = add i64 %r200, 16
%r204 = inttoptr i64 %r203 to i64*
%r205 = load i64, i64* %r204, align 8
%r206 = add i64 %r205, 8
%r207 = inttoptr i64 %r206 to i64*
%r208 = load i64, i64* %r207, align 8
call void @putint(i64 %r208)
call void @putch(i64 10)
%r209 = call i64* @malloc(i64 48)
%r210 = ptrtoint i64* %r209 to i64
%r211 = inttoptr i64 %r210 to i64*
store i64 5, i64* %r211, align 8
%r212 = add i64 %r210, 8
%r213 = add i64 %r212, 0
%r214 = sub i64 %r213, 8
%r215 = inttoptr i64 %r214 to i64*
%r216 = load i64, i64* %r215, align 8
call void @putint(i64 %r216)
call void @putch(i64 10)
%r217 = add i64 %r200, 8
%r218 = inttoptr i64 %r217 to i64*
%s219 = load double, i64* %r218, align 8
call void @putfloat(double %s219)
call void @putch(i64 10)
%r220 = add i64 %r200, 24
%r221 = inttoptr i64 %r220 to i64*
%r222 = load i64, i64* %r221, align 8
%r223 = add i64 %r222, 8
%r224 = inttoptr i64 %r223 to i64*
%s225 = load double, i64* %r224, align 8
call void @putfloat(double %s225)
call void @putch(i64 10)
ret i64 0
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)

define i64 @main() {
C5:
%r110 = add i64 13, 0
%r111 = call i64* @malloc(i64 8)
%r112 = ptrtoint i64* %r111 to i64
%r113 = inttoptr i64 %r112 to i64*
%r114 = ptrtoint i64* @fib$f to i64
store i64 %r114, i64* %r113, align 8
%r115 = add i64 %r112, 0
%r116 = inttoptr i64 %r115 to i64*
%r117 = load i64, i64* %r116, align 8
%r118 = inttoptr i64 %r117 to i64*
%r119 = call i64 %r118(i64 %r115, i64 %r110)
call void @putint(i64 %r119)
call void @putch(i64 10)
ret i64 0
}

define i64 @fib$f(i64 %r99, i64 %r100) {
C8:
%r132 = icmp eq i64 %r100, 0
br i1 %r132, label %L1, label %L0
L0:
%r133 = icmp eq i64 %r100, 1
br i1 %r133, label %L1, label %L2
L2:
%r134 = inttoptr i64 %r99 to i64*
%r135 = load i64, i64* %r134, align 8
%r136 = inttoptr i64 %r135 to i64*
%r137 = sub i64 %r100, 1
%r138 = call i64 %r136(i64 %r99, i64 %r137)
%r139 = add i64 %r138, 0
%r140 = inttoptr i64 %r99 to i64*
%r141 = load i64, i64* %r140, align 8
%r142 = inttoptr i64 %r141 to i64*
%r143 = sub i64 %r100, 2
%r144 = call i64 %r142(i64 %r99, i64 %r143)
%r145 = add i64 %r139, %r144
ret i64 %r145
L1:
ret i64 %r100
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)


------For function ----- main

------Basic Block Graph---------
C1 (0): 
------~Final traced AS instructions ---------
define i64 @main() {
C1:
%103 = call i64* @malloc(i64 16)
%101 = ptrtoint i64* %103 to i64
%104 = inttoptr i64 %101 to i64*
%105 = ptrtoint i64* @c2$m2 to i64
store i64 %105, i64* %104, align 8
%106 = inttoptr i64 %101 to i64*
%107 = ptrtoint i64* @c2$m to i64
store i64 %107, i64* %106, align 8
%100 = add i64 %101, 0
%109 = inttoptr i64 %100 to i64*
%108 = load i64, i64* %109, align 8
%110 = inttoptr i64 %108 to i64*
%102 = call i64 %110(i64 %100)
call void @putint(i64 %102)
call void @putch(i64 10)
ret i64 0
C0:
ret i64 -1
}


------For function ----- c2$m2

------Basic Block Graph---------
C3 (0): 
------~Final traced AS instructions ---------
define i64 @c2$m2(i64 %99) {
C3:
ret i64 400
C2:
ret i64 -1
}


------For function ----- c2$m

------Basic Block Graph---------
C5 (0): 
------~Final traced AS instructions ---------
define i64 @c2$m(i64 %99) {
C5:
ret i64 300
C4:
ret i64 -1
}


------For function ----- c1$m

------Basic Block Graph---------
C7 (0): 
------~Final traced AS instructions ---------
define i64 @c1$m(i64 %99) {
C7:
ret i64 200
C6:
ret i64 -1
}


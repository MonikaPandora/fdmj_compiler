
------For function ----- main

------Basic Block Graph---------
C7 (0): 1 
L0 (1): 2 3 
L1 (2): 
L5 (3): 4 6 
L3 (4): 5 
L4 (5): 1 
L2 (6): 5 
------~Final traced LLVM instructions ---------
define i64 @main() {
C7:
%r116 = call i64* @malloc(i64 16)
%r115 = ptrtoint i64* %r116 to i64
%r100 = add i64 %r115, 8
%r117 = sub i64 %r100, 8
%r118 = inttoptr i64 %r117 to i64*
store i64 1, i64* %r118, align 8
%r119 = inttoptr i64 %r100 to i64*
store i64 0, i64* %r119, align 8
// int[] a={0};

%r101 = add i64 0, 0
// int i=0;

%s114 = call double @getfloat()
%r106 = fptosi double %s114 to i64
%r120 = add i64 %r106, 1
%r107 = mul i64 %r120, 8
%r121 = call i64* @malloc(i64 %r107)
%r105 = ptrtoint i64* %r121 to i64
%r122 = inttoptr i64 %r105 to i64*
store i64 %r106, i64* %r122, align 8
%r105 = add i64 %r105, 8
%r100 = add i64 %r105, 0
// a=new int[getnum()];

%r123 = sub i64 %r100, 8
%r124 = inttoptr i64 %r123 to i64*
%r102 = load i64, i64* %r124, align 8
// l=length(a);

%r125 = call i64* @malloc(i64 16)
%r108 = ptrtoint i64* %r125 to i64
%r126 = inttoptr i64 %r108 to i64*
store i64 2, i64* %r126, align 8
%r127 = inttoptr i64 %r108 to i64*
%r128 = ptrtoint i64* @c1$m1 to i64
store i64 %r128, i64* %r127, align 8
%r103 = add i64 %r108, 0
%r129 = call i64* @malloc(i64 16)
%r109 = ptrtoint i64* %r129 to i64
%r130 = inttoptr i64 %r109 to i64*
store i64 2, i64* %r130, align 8
%r131 = inttoptr i64 %r109 to i64*
%r132 = ptrtoint i64* @c2$m1 to i64
store i64 %r132, i64* %r131, align 8
%r104 = add i64 %r109, 0
br label %L0
L0:
%r133 = icmp slt i64 %r101, %r102
br i1 %r133, label %L5, label %L1
L1:
%r134 = inttoptr i64 %r100 to i64*
call void @putarray(i64 %r102, i64* %r134)
ret i64 %r102
L5:
%r137 = sdiv i64 %r101, 2
%r136 = mul i64 %r137, 2
%r135 = icmp eq i64 %r136, %r101
br i1 %r135, label %L2, label %L3
L3:
%r138 = mul i64 %r101, 8
%r112 = add i64 %r100, %r138
%r140 = inttoptr i64 %r104 to i64*
%r139 = load i64, i64* %r140, align 8
%r141 = inttoptr i64 %r139 to i64*
%r110 = call i64 %r141(i64 %r104, i64 %r101)
%r142 = inttoptr i64 %r112 to i64*
store i64 %r110, i64* %r142, align 8
br label %L4
L4:
%r101 = add i64 %r101, 1
br label %L0
L2:
%r143 = mul i64 %r101, 8
%r113 = add i64 %r100, %r143
%r145 = inttoptr i64 %r103 to i64*
%r144 = load i64, i64* %r145, align 8
%r146 = inttoptr i64 %r144 to i64*
%r111 = call i64 %r146(i64 %r103, i64 %r101)
%r147 = inttoptr i64 %r113 to i64*
store i64 %r111, i64* %r147, align 8
br label %L4
}

------Flow Graph------
[         C7:; d: s: ]  (0): 1 
[%r116 = call i64* @malloc(i64 16); d: 116; s: ]  (1): 2 
[%r115 = ptrtoint i64* %r116 to i64; d: 115; s: 116]  (2): 3 
[%r100 = add i64 %r115, 8; d: 100; s: 115]  (3): 4 
[%r117 = sub i64 %r100, 8; d: 117; s: 100]  (4): 5 
[%r118 = inttoptr i64 %r117 to i64*; d: 118; s: 117]  (5): 6 
[store i64 1, i64* %r118, align 8; d: s: 118]  (6): 7 
[%r119 = inttoptr i64 %r100 to i64*; d: 119; s: 100]  (7): 8 
[store i64 0, i64* %r119, align 8; d: s: 119]  (8): 9 
[%r101 = add i64 0, 0; d: 101; s: ]  (9): 10 
[%s114 = call double @getfloat(); d: 114; s: ]  (10): 11 
[%r106 = fptosi double %s114 to i64; d: 106; s: 114]  (11): 12 
[%r120 = add i64 %r106, 1; d: 120; s: 106]  (12): 13 
[%r107 = mul i64 %r120, 8; d: 107; s: 120]  (13): 14 
[%r121 = call i64* @malloc(i64 %r107); d: 121; s: 107]  (14): 15 
[%r105 = ptrtoint i64* %r121 to i64; d: 105; s: 121]  (15): 16 
[%r122 = inttoptr i64 %r105 to i64*; d: 122; s: 105]  (16): 17 
[store i64 %r106, i64* %r122, align 8; d: s: 106, 122]  (17): 18 
[%r105 = add i64 %r105, 8; d: 105; s: 105]  (18): 19 
[%r100 = add i64 %r105, 0; d: 100; s: 105]  (19): 20 
[%r123 = sub i64 %r100, 8; d: 123; s: 100]  (20): 21 
[%r124 = inttoptr i64 %r123 to i64*; d: 124; s: 123]  (21): 22 
[%r102 = load i64, i64* %r124, align 8; d: 102; s: 124]  (22): 23 
[%r125 = call i64* @malloc(i64 16); d: 125; s: ]  (23): 24 
[%r108 = ptrtoint i64* %r125 to i64; d: 108; s: 125]  (24): 25 
[%r126 = inttoptr i64 %r108 to i64*; d: 126; s: 108]  (25): 26 
[store i64 2, i64* %r126, align 8; d: s: 126]  (26): 27 
[%r127 = inttoptr i64 %r108 to i64*; d: 127; s: 108]  (27): 28 
[%r128 = ptrtoint i64* @c1$m1 to i64; d: 128; s: ]  (28): 29 
[store i64 %r128, i64* %r127, align 8; d: s: 128, 127]  (29): 30 
[%r103 = add i64 %r108, 0; d: 103; s: 108]  (30): 31 
[%r129 = call i64* @malloc(i64 16); d: 129; s: ]  (31): 32 
[%r109 = ptrtoint i64* %r129 to i64; d: 109; s: 129]  (32): 33 
[%r130 = inttoptr i64 %r109 to i64*; d: 130; s: 109]  (33): 34 
[store i64 2, i64* %r130, align 8; d: s: 130]  (34): 35 
[%r131 = inttoptr i64 %r109 to i64*; d: 131; s: 109]  (35): 36 
[%r132 = ptrtoint i64* @c2$m1 to i64; d: 132; s: ]  (36): 37 
[store i64 %r132, i64* %r131, align 8; d: s: 132, 131]  (37): 38 
[%r104 = add i64 %r109, 0; d: 104; s: 109]  (38): 39 
[br label %L0; d: s: ]  (39): 40 
[         L0:; d: s: ]  (40): 41 
[%r133 = icmp slt i64 %r101, %r102; d: 133; s: 101, 102]  (41): 42 
[br i1 %r133, label %L5, label %L1; d: s: 133]  (42): 43 47 
[         L1:; d: s: ]  (43): 44 
[%r134 = inttoptr i64 %r100 to i64*; d: 134; s: 100]  (44): 45 
[call void @putarray(i64 %r102, i64* %r134); d: s: 102, 134]  (45): 46 
[ret i64 %r102; d: s: 102]  (46): 47 
[         L5:; d: s: ]  (47): 48 
[%r137 = sdiv i64 %r101, 2; d: 137; s: 101]  (48): 49 
[%r136 = mul i64 %r137, 2; d: 136; s: 137]  (49): 50 
[%r135 = icmp eq i64 %r136, %r101; d: 135; s: 136, 101]  (50): 51 
[br i1 %r135, label %L2, label %L3; d: s: 135]  (51): 52 65 
[         L3:; d: s: ]  (52): 53 
[%r138 = mul i64 %r101, 8; d: 138; s: 101]  (53): 54 
[%r112 = add i64 %r100, %r138; d: 112; s: 100, 138]  (54): 55 
[%r140 = inttoptr i64 %r104 to i64*; d: 140; s: 104]  (55): 56 
[%r139 = load i64, i64* %r140, align 8; d: 139; s: 140]  (56): 57 
[%r141 = inttoptr i64 %r139 to i64*; d: 141; s: 139]  (57): 58 
[%r110 = call i64 %r141(i64 %r104, i64 %r101); d: 110; s: 141, 104, 101]  (58): 59 
[%r142 = inttoptr i64 %r112 to i64*; d: 142; s: 112]  (59): 60 
[store i64 %r110, i64* %r142, align 8; d: s: 110, 142]  (60): 61 
[br label %L4; d: s: ]  (61): 62 
[         L4:; d: s: ]  (62): 63 
[%r101 = add i64 %r101, 1; d: 101; s: 101]  (63): 64 
[br label %L0; d: s: ]  (64): 40 
[         L2:; d: s: ]  (65): 66 
[%r143 = mul i64 %r101, 8; d: 143; s: 101]  (66): 67 
[%r113 = add i64 %r100, %r143; d: 113; s: 100, 143]  (67): 68 
[%r145 = inttoptr i64 %r103 to i64*; d: 145; s: 103]  (68): 69 
[%r144 = load i64, i64* %r145, align 8; d: 144; s: 145]  (69): 70 
[%r146 = inttoptr i64 %r144 to i64*; d: 146; s: 144]  (70): 71 
[%r111 = call i64 %r146(i64 %r103, i64 %r101); d: 111; s: 146, 103, 101]  (71): 72 
[%r147 = inttoptr i64 %r113 to i64*; d: 147; s: 113]  (72): 73 
[store i64 %r111, i64* %r147, align 8; d: s: 111, 147]  (73): 74 
[br label %L4; d: s: ]  (74): 62 

/* ------Liveness Graph------*/
Number of iterations=65
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=116, 
use=
In=
Out=116, 
----------------------
 (2): 3 
def=115, 
use=116, 
In=116, 
Out=115, 
----------------------
 (3): 4 
def=100, 
use=115, 
In=115, 
Out=100, 
----------------------
 (4): 5 
def=117, 
use=100, 
In=100, 
Out=117, 100, 
----------------------
 (5): 6 
def=118, 
use=117, 
In=100, 117, 
Out=118, 100, 
----------------------
 (6): 7 
def=
use=118, 
In=100, 118, 
Out=100, 
----------------------
 (7): 8 
def=119, 
use=100, 
In=100, 
Out=119, 
----------------------
 (8): 9 
def=
use=119, 
In=119, 
Out=
----------------------
 (9): 10 
def=101, 
use=
In=
Out=101, 
----------------------
 (10): 11 
def=114, 
use=
In=101, 
Out=114, 101, 
----------------------
 (11): 12 
def=106, 
use=114, 
In=101, 114, 
Out=106, 101, 
----------------------
 (12): 13 
def=120, 
use=106, 
In=101, 106, 
Out=120, 106, 101, 
----------------------
 (13): 14 
def=107, 
use=120, 
In=101, 106, 120, 
Out=107, 101, 106, 
----------------------
 (14): 15 
def=121, 
use=107, 
In=106, 101, 107, 
Out=121, 106, 101, 
----------------------
 (15): 16 
def=105, 
use=121, 
In=101, 106, 121, 
Out=105, 101, 106, 
----------------------
 (16): 17 
def=122, 
use=105, 
In=106, 101, 105, 
Out=122, 106, 101, 105, 
----------------------
 (17): 18 
def=
use=106, 122, 
In=105, 101, 106, 122, 
Out=105, 101, 
----------------------
 (18): 19 
def=105, 
use=105, 
In=101, 105, 
Out=105, 101, 
----------------------
 (19): 20 
def=100, 
use=105, 
In=101, 105, 
Out=100, 101, 
----------------------
 (20): 21 
def=123, 
use=100, 
In=101, 100, 
Out=123, 101, 100, 
----------------------
 (21): 22 
def=124, 
use=123, 
In=100, 101, 123, 
Out=124, 100, 101, 
----------------------
 (22): 23 
def=102, 
use=124, 
In=101, 100, 124, 
Out=102, 101, 100, 
----------------------
 (23): 24 
def=125, 
use=
In=100, 101, 102, 
Out=125, 100, 101, 102, 
----------------------
 (24): 25 
def=108, 
use=125, 
In=102, 101, 100, 125, 
Out=108, 102, 101, 100, 
----------------------
 (25): 26 
def=126, 
use=108, 
In=100, 101, 102, 108, 
Out=126, 100, 101, 102, 108, 
----------------------
 (26): 27 
def=
use=126, 
In=108, 102, 101, 100, 126, 
Out=108, 102, 101, 100, 
----------------------
 (27): 28 
def=127, 
use=108, 
In=100, 101, 102, 108, 
Out=108, 100, 101, 102, 127, 
----------------------
 (28): 29 
def=128, 
use=
In=127, 102, 101, 100, 108, 
Out=127, 128, 102, 101, 100, 108, 
----------------------
 (29): 30 
def=
use=128, 127, 
In=108, 100, 101, 102, 128, 127, 
Out=108, 100, 101, 102, 
----------------------
 (30): 31 
def=103, 
use=108, 
In=102, 101, 100, 108, 
Out=102, 101, 103, 100, 
----------------------
 (31): 32 
def=129, 
use=
In=100, 103, 101, 102, 
Out=129, 100, 103, 101, 102, 
----------------------
 (32): 33 
def=109, 
use=129, 
In=102, 101, 103, 100, 129, 
Out=109, 102, 101, 103, 100, 
----------------------
 (33): 34 
def=130, 
use=109, 
In=100, 103, 101, 102, 109, 
Out=130, 100, 103, 101, 102, 109, 
----------------------
 (34): 35 
def=
use=130, 
In=109, 102, 101, 103, 100, 130, 
Out=109, 102, 101, 103, 100, 
----------------------
 (35): 36 
def=131, 
use=109, 
In=100, 103, 101, 102, 109, 
Out=109, 100, 103, 101, 102, 131, 
----------------------
 (36): 37 
def=132, 
use=
In=131, 102, 101, 103, 100, 109, 
Out=131, 132, 102, 101, 103, 100, 109, 
----------------------
 (37): 38 
def=
use=132, 131, 
In=109, 100, 103, 101, 102, 132, 131, 
Out=109, 100, 103, 101, 102, 
----------------------
 (38): 39 
def=104, 
use=109, 
In=102, 101, 103, 100, 109, 
Out=102, 101, 104, 103, 100, 
----------------------
 (39): 40 
def=
use=
In=100, 103, 104, 101, 102, 
Out=100, 103, 104, 101, 102, 
----------------------
 (40): 41 
def=
use=
In=102, 101, 104, 103, 100, 
Out=102, 101, 104, 103, 100, 
----------------------
 (41): 42 
def=133, 
use=101, 102, 
In=100, 103, 104, 101, 102, 
Out=133, 100, 101, 103, 104, 102, 
----------------------
 (42): 43 47 
def=
use=133, 
In=102, 104, 103, 101, 100, 133, 
Out=102, 104, 103, 101, 100, 
----------------------
 (43): 44 
def=
use=
In=100, 101, 103, 104, 102, 
Out=100, 101, 103, 104, 102, 
----------------------
 (44): 45 
def=134, 
use=100, 
In=102, 104, 103, 101, 100, 
Out=134, 102, 104, 103, 100, 101, 
----------------------
 (45): 46 
def=
use=102, 134, 
In=101, 100, 103, 104, 102, 134, 
Out=102, 101, 100, 103, 104, 
----------------------
 (46): 47 
def=
use=102, 
In=104, 103, 100, 101, 102, 
Out=104, 103, 102, 100, 101, 
----------------------
 (47): 48 
def=
use=
In=101, 100, 102, 103, 104, 
Out=101, 100, 102, 103, 104, 
----------------------
 (48): 49 
def=137, 
use=101, 
In=104, 103, 102, 100, 101, 
Out=137, 104, 103, 102, 100, 101, 
----------------------
 (49): 50 
def=136, 
use=137, 
In=101, 100, 102, 103, 104, 137, 
Out=101, 136, 100, 102, 103, 104, 
----------------------
 (50): 51 
def=135, 
use=136, 101, 
In=104, 103, 102, 100, 136, 101, 
Out=135, 101, 104, 103, 102, 100, 
----------------------
 (51): 52 65 
def=
use=135, 
In=100, 102, 103, 104, 101, 135, 
Out=100, 102, 103, 104, 101, 
----------------------
 (52): 53 
def=
use=
In=101, 104, 103, 102, 100, 
Out=101, 104, 103, 102, 100, 
----------------------
 (53): 54 
def=138, 
use=101, 
In=100, 102, 103, 104, 101, 
Out=138, 100, 101, 102, 103, 104, 
----------------------
 (54): 55 
def=112, 
use=100, 138, 
In=104, 103, 102, 101, 100, 138, 
Out=104, 112, 100, 103, 102, 101, 
----------------------
 (55): 56 
def=140, 
use=104, 
In=101, 102, 103, 100, 112, 104, 
Out=140, 101, 104, 102, 103, 100, 112, 
----------------------
 (56): 57 
def=139, 
use=140, 
In=112, 100, 103, 102, 104, 101, 140, 
Out=139, 112, 100, 103, 102, 104, 101, 
----------------------
 (57): 58 
def=141, 
use=139, 
In=101, 104, 102, 103, 100, 112, 139, 
Out=101, 104, 141, 102, 103, 100, 112, 
----------------------
 (58): 59 
def=110, 
use=141, 104, 101, 
In=112, 100, 103, 102, 141, 104, 101, 
Out=112, 101, 100, 103, 104, 102, 110, 
----------------------
 (59): 60 
def=142, 
use=112, 
In=110, 102, 104, 103, 100, 101, 112, 
Out=142, 110, 102, 104, 103, 100, 101, 
----------------------
 (60): 61 
def=
use=110, 142, 
In=101, 100, 103, 104, 102, 110, 142, 
Out=101, 100, 103, 104, 102, 
----------------------
 (61): 62 
def=
use=
In=102, 104, 103, 100, 101, 
Out=102, 104, 103, 100, 101, 
----------------------
 (62): 63 
def=
use=
In=101, 100, 103, 104, 102, 
Out=101, 100, 103, 104, 102, 
----------------------
 (63): 64 
def=101, 
use=101, 
In=102, 104, 103, 100, 101, 
Out=102, 101, 104, 103, 100, 
----------------------
 (64): 40 
def=
use=
In=100, 103, 104, 101, 102, 
Out=100, 103, 104, 101, 102, 
----------------------
 (65): 66 
def=
use=
In=101, 103, 104, 102, 100, 
Out=101, 103, 104, 102, 100, 
----------------------
 (66): 67 
def=143, 
use=101, 
In=100, 102, 104, 103, 101, 
Out=143, 100, 101, 102, 104, 103, 
----------------------
 (67): 68 
def=113, 
use=100, 143, 
In=103, 104, 102, 101, 100, 143, 
Out=103, 113, 100, 104, 102, 101, 
----------------------
 (68): 69 
def=145, 
use=103, 
In=101, 102, 104, 100, 113, 103, 
Out=145, 101, 103, 102, 104, 100, 113, 
----------------------
 (69): 70 
def=144, 
use=145, 
In=113, 100, 104, 102, 103, 101, 145, 
Out=144, 113, 100, 104, 102, 103, 101, 
----------------------
 (70): 71 
def=146, 
use=144, 
In=101, 103, 102, 104, 100, 113, 144, 
Out=101, 103, 146, 102, 104, 100, 113, 
----------------------
 (71): 72 
def=111, 
use=146, 103, 101, 
In=113, 100, 104, 102, 146, 103, 101, 
Out=113, 101, 100, 103, 104, 102, 111, 
----------------------
 (72): 73 
def=147, 
use=113, 
In=111, 102, 104, 103, 100, 101, 113, 
Out=147, 111, 102, 104, 103, 100, 101, 
----------------------
 (73): 74 
def=
use=111, 147, 
In=101, 100, 103, 104, 102, 111, 147, 
Out=101, 100, 103, 104, 102, 
----------------------
 (74): 62 
def=
use=
In=102, 104, 103, 100, 101, 
Out=102, 104, 103, 100, 101, 

------For function ----- c2$m1

------Basic Block Graph---------
C10 (0): 
------~Final traced LLVM instructions ---------
define i64 @c2$m1(i64 %r99, i64 %r100) {
C10:
%r202 = inttoptr i64 %r99 to i64*
%r201 = load i64, i64* %r202, align 8
%r200 = add i64 %r201, %r100
ret i64 %r200
}

------Flow Graph------
[        C10:; d: s: ]  (0): 1 
[%r202 = inttoptr i64 %r99 to i64*; d: 202; s: 99]  (1): 2 
[%r201 = load i64, i64* %r202, align 8; d: 201; s: 202]  (2): 3 
[%r200 = add i64 %r201, %r100; d: 200; s: 201, 100]  (3): 4 
[ret i64 %r200; d: s: 200]  (4): 

/* ------Liveness Graph------*/
Number of iterations=73
----------------------
 (0): 1 
def=
use=
In=99, 100, 
Out=99, 100, 
----------------------
 (1): 2 
def=202, 
use=99, 
In=100, 99, 
Out=202, 100, 
----------------------
 (2): 3 
def=201, 
use=202, 
In=100, 202, 
Out=100, 201, 
----------------------
 (3): 4 
def=200, 
use=201, 100, 
In=201, 100, 
Out=200, 
----------------------
 (4): 
def=
use=200, 
In=200, 
Out=

------For function ----- c1$m1

------Basic Block Graph---------
C13 (0): 
------~Final traced LLVM instructions ---------
define i64 @c1$m1(i64 %r99, i64 %r100) {
C13:
%r207 = inttoptr i64 %r99 to i64*
%r206 = load i64, i64* %r207, align 8
ret i64 %r206
}

------Flow Graph------
[        C13:; d: s: ]  (0): 1 
[%r207 = inttoptr i64 %r99 to i64*; d: 207; s: 99]  (1): 2 
[%r206 = load i64, i64* %r207, align 8; d: 206; s: 207]  (2): 3 
[ret i64 %r206; d: s: 206]  (3): 

/* ------Liveness Graph------*/
Number of iterations=77
----------------------
 (0): 1 
def=
use=
In=99, 
Out=99, 
----------------------
 (1): 2 
def=207, 
use=99, 
In=99, 
Out=207, 
----------------------
 (2): 3 
def=206, 
use=207, 
In=207, 
Out=206, 
----------------------
 (3): 
def=
use=206, 
In=206, 
Out=

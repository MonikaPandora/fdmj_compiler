
------For function ----- main

------Basic Block Graph---------
C1 (0): 
------~Final traced LLVM instructions ---------
define i64 @main() {
C1:
%r101 = add i64 233, 0
%r115 = call i64* @malloc(i64 16)
%r114 = ptrtoint i64* %r115 to i64
%r103 = add i64 %r114, 8
%r116 = sub i64 %r103, 8
%r117 = inttoptr i64 %r116 to i64*
store i64 1, i64* %r117, align 8
%r118 = inttoptr i64 %r103 to i64*
store i64 1975, i64* %r118, align 8
%r119 = call i64* @malloc(i64 32)
%r113 = ptrtoint i64* %r119 to i64
%r104 = add i64 %r113, 8
%r120 = sub i64 %r104, 8
%r121 = inttoptr i64 %r120 to i64*
store i64 3, i64* %r121, align 8
%r122 = inttoptr i64 %r104 to i64*
store i64 1905, i64* %r122, align 8
%r123 = add i64 %r104, 8
%r124 = inttoptr i64 %r123 to i64*
store i64 5, i64* %r124, align 8
%r125 = add i64 %r104, 16
%r126 = inttoptr i64 %r125 to i64*
store i64 27, i64* %r126, align 8
%s105 = fadd double 1.000000, 0.0
%r127 = call i64* @malloc(i64 16)
%r112 = ptrtoint i64* %r127 to i64
%r107 = add i64 %r112, 8
%r128 = sub i64 %r107, 8
%r129 = inttoptr i64 %r128 to i64*
store i64 1, i64* %r129, align 8
%r130 = inttoptr i64 %r107 to i64*
store double 19.750000, i64* %r130, align 8
%r131 = call i64* @malloc(i64 32)
%r111 = ptrtoint i64* %r131 to i64
%r108 = add i64 %r111, 8
%r132 = sub i64 %r108, 8
%r133 = inttoptr i64 %r132 to i64*
store i64 3, i64* %r133, align 8
%r134 = inttoptr i64 %r108 to i64*
store double 19.500000, i64* %r134, align 8
%r135 = add i64 %r108, 8
%r136 = inttoptr i64 %r135 to i64*
store double 5.500000, i64* %r136, align 8
%r137 = add i64 %r108, 16
%r138 = inttoptr i64 %r137 to i64*
store double 2.700000, i64* %r138, align 8
%r139 = call i64* @malloc(i64 32)
%r110 = ptrtoint i64* %r139 to i64
%r102 = add i64 %r110, 8
%r140 = sub i64 %r102, 8
%r141 = inttoptr i64 %r140 to i64*
store i64 3, i64* %r141, align 8
%r142 = inttoptr i64 %r102 to i64*
store i64 2024, i64* %r142, align 8
%r143 = add i64 %r102, 8
%r144 = inttoptr i64 %r143 to i64*
store i64 5, i64* %r144, align 8
%r145 = add i64 %r102, 16
%r146 = inttoptr i64 %r145 to i64*
store i64 22, i64* %r146, align 8
ret i64 0
}

------Flow Graph------
[         C1:; d: s: ]  (0): 1 
[%r101 = add i64 233, 0; d: 101; s: ]  (1): 2 
[%r115 = call i64* @malloc(i64 16); d: 115; s: ]  (2): 3 
[%r114 = ptrtoint i64* %r115 to i64; d: 114; s: 115]  (3): 4 
[%r103 = add i64 %r114, 8; d: 103; s: 114]  (4): 5 
[%r116 = sub i64 %r103, 8; d: 116; s: 103]  (5): 6 
[%r117 = inttoptr i64 %r116 to i64*; d: 117; s: 116]  (6): 7 
[store i64 1, i64* %r117, align 8; d: s: 117]  (7): 8 
[%r118 = inttoptr i64 %r103 to i64*; d: 118; s: 103]  (8): 9 
[store i64 1975, i64* %r118, align 8; d: s: 118]  (9): 10 
[%r119 = call i64* @malloc(i64 32); d: 119; s: ]  (10): 11 
[%r113 = ptrtoint i64* %r119 to i64; d: 113; s: 119]  (11): 12 
[%r104 = add i64 %r113, 8; d: 104; s: 113]  (12): 13 
[%r120 = sub i64 %r104, 8; d: 120; s: 104]  (13): 14 
[%r121 = inttoptr i64 %r120 to i64*; d: 121; s: 120]  (14): 15 
[store i64 3, i64* %r121, align 8; d: s: 121]  (15): 16 
[%r122 = inttoptr i64 %r104 to i64*; d: 122; s: 104]  (16): 17 
[store i64 1905, i64* %r122, align 8; d: s: 122]  (17): 18 
[%r123 = add i64 %r104, 8; d: 123; s: 104]  (18): 19 
[%r124 = inttoptr i64 %r123 to i64*; d: 124; s: 123]  (19): 20 
[store i64 5, i64* %r124, align 8; d: s: 124]  (20): 21 
[%r125 = add i64 %r104, 16; d: 125; s: 104]  (21): 22 
[%r126 = inttoptr i64 %r125 to i64*; d: 126; s: 125]  (22): 23 
[store i64 27, i64* %r126, align 8; d: s: 126]  (23): 24 
[%s105 = fadd double 1.000000, 0.0; d: 105; s: ]  (24): 25 
[%r127 = call i64* @malloc(i64 16); d: 127; s: ]  (25): 26 
[%r112 = ptrtoint i64* %r127 to i64; d: 112; s: 127]  (26): 27 
[%r107 = add i64 %r112, 8; d: 107; s: 112]  (27): 28 
[%r128 = sub i64 %r107, 8; d: 128; s: 107]  (28): 29 
[%r129 = inttoptr i64 %r128 to i64*; d: 129; s: 128]  (29): 30 
[store i64 1, i64* %r129, align 8; d: s: 129]  (30): 31 
[%r130 = inttoptr i64 %r107 to i64*; d: 130; s: 107]  (31): 32 
[store double 19.750000, i64* %r130, align 8; d: s: 130]  (32): 33 
[%r131 = call i64* @malloc(i64 32); d: 131; s: ]  (33): 34 
[%r111 = ptrtoint i64* %r131 to i64; d: 111; s: 131]  (34): 35 
[%r108 = add i64 %r111, 8; d: 108; s: 111]  (35): 36 
[%r132 = sub i64 %r108, 8; d: 132; s: 108]  (36): 37 
[%r133 = inttoptr i64 %r132 to i64*; d: 133; s: 132]  (37): 38 
[store i64 3, i64* %r133, align 8; d: s: 133]  (38): 39 
[%r134 = inttoptr i64 %r108 to i64*; d: 134; s: 108]  (39): 40 
[store double 19.500000, i64* %r134, align 8; d: s: 134]  (40): 41 
[%r135 = add i64 %r108, 8; d: 135; s: 108]  (41): 42 
[%r136 = inttoptr i64 %r135 to i64*; d: 136; s: 135]  (42): 43 
[store double 5.500000, i64* %r136, align 8; d: s: 136]  (43): 44 
[%r137 = add i64 %r108, 16; d: 137; s: 108]  (44): 45 
[%r138 = inttoptr i64 %r137 to i64*; d: 138; s: 137]  (45): 46 
[store double 2.700000, i64* %r138, align 8; d: s: 138]  (46): 47 
[%r139 = call i64* @malloc(i64 32); d: 139; s: ]  (47): 48 
[%r110 = ptrtoint i64* %r139 to i64; d: 110; s: 139]  (48): 49 
[%r102 = add i64 %r110, 8; d: 102; s: 110]  (49): 50 
[%r140 = sub i64 %r102, 8; d: 140; s: 102]  (50): 51 
[%r141 = inttoptr i64 %r140 to i64*; d: 141; s: 140]  (51): 52 
[store i64 3, i64* %r141, align 8; d: s: 141]  (52): 53 
[%r142 = inttoptr i64 %r102 to i64*; d: 142; s: 102]  (53): 54 
[store i64 2024, i64* %r142, align 8; d: s: 142]  (54): 55 
[%r143 = add i64 %r102, 8; d: 143; s: 102]  (55): 56 
[%r144 = inttoptr i64 %r143 to i64*; d: 144; s: 143]  (56): 57 
[store i64 5, i64* %r144, align 8; d: s: 144]  (57): 58 
[%r145 = add i64 %r102, 16; d: 145; s: 102]  (58): 59 
[%r146 = inttoptr i64 %r145 to i64*; d: 146; s: 145]  (59): 60 
[store i64 22, i64* %r146, align 8; d: s: 146]  (60): 61 
[   ret i64 0; d: s: ]  (61): 

/* ------Liveness Graph------*/
Number of iterations=7
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=101, 
use=
In=
Out=
----------------------
 (2): 3 
def=115, 
use=
In=
Out=115, 
----------------------
 (3): 4 
def=114, 
use=115, 
In=115, 
Out=114, 
----------------------
 (4): 5 
def=103, 
use=114, 
In=114, 
Out=103, 
----------------------
 (5): 6 
def=116, 
use=103, 
In=103, 
Out=116, 103, 
----------------------
 (6): 7 
def=117, 
use=116, 
In=103, 116, 
Out=117, 103, 
----------------------
 (7): 8 
def=
use=117, 
In=103, 117, 
Out=103, 
----------------------
 (8): 9 
def=118, 
use=103, 
In=103, 
Out=118, 
----------------------
 (9): 10 
def=
use=118, 
In=118, 
Out=
----------------------
 (10): 11 
def=119, 
use=
In=
Out=119, 
----------------------
 (11): 12 
def=113, 
use=119, 
In=119, 
Out=113, 
----------------------
 (12): 13 
def=104, 
use=113, 
In=113, 
Out=104, 
----------------------
 (13): 14 
def=120, 
use=104, 
In=104, 
Out=120, 104, 
----------------------
 (14): 15 
def=121, 
use=120, 
In=104, 120, 
Out=121, 104, 
----------------------
 (15): 16 
def=
use=121, 
In=104, 121, 
Out=104, 
----------------------
 (16): 17 
def=122, 
use=104, 
In=104, 
Out=122, 104, 
----------------------
 (17): 18 
def=
use=122, 
In=104, 122, 
Out=104, 
----------------------
 (18): 19 
def=123, 
use=104, 
In=104, 
Out=123, 104, 
----------------------
 (19): 20 
def=124, 
use=123, 
In=104, 123, 
Out=124, 104, 
----------------------
 (20): 21 
def=
use=124, 
In=104, 124, 
Out=104, 
----------------------
 (21): 22 
def=125, 
use=104, 
In=104, 
Out=125, 
----------------------
 (22): 23 
def=126, 
use=125, 
In=125, 
Out=126, 
----------------------
 (23): 24 
def=
use=126, 
In=126, 
Out=
----------------------
 (24): 25 
def=105, 
use=
In=
Out=
----------------------
 (25): 26 
def=127, 
use=
In=
Out=127, 
----------------------
 (26): 27 
def=112, 
use=127, 
In=127, 
Out=112, 
----------------------
 (27): 28 
def=107, 
use=112, 
In=112, 
Out=107, 
----------------------
 (28): 29 
def=128, 
use=107, 
In=107, 
Out=128, 107, 
----------------------
 (29): 30 
def=129, 
use=128, 
In=107, 128, 
Out=129, 107, 
----------------------
 (30): 31 
def=
use=129, 
In=107, 129, 
Out=107, 
----------------------
 (31): 32 
def=130, 
use=107, 
In=107, 
Out=130, 
----------------------
 (32): 33 
def=
use=130, 
In=130, 
Out=
----------------------
 (33): 34 
def=131, 
use=
In=
Out=131, 
----------------------
 (34): 35 
def=111, 
use=131, 
In=131, 
Out=111, 
----------------------
 (35): 36 
def=108, 
use=111, 
In=111, 
Out=108, 
----------------------
 (36): 37 
def=132, 
use=108, 
In=108, 
Out=132, 108, 
----------------------
 (37): 38 
def=133, 
use=132, 
In=108, 132, 
Out=133, 108, 
----------------------
 (38): 39 
def=
use=133, 
In=108, 133, 
Out=108, 
----------------------
 (39): 40 
def=134, 
use=108, 
In=108, 
Out=134, 108, 
----------------------
 (40): 41 
def=
use=134, 
In=108, 134, 
Out=108, 
----------------------
 (41): 42 
def=135, 
use=108, 
In=108, 
Out=135, 108, 
----------------------
 (42): 43 
def=136, 
use=135, 
In=108, 135, 
Out=136, 108, 
----------------------
 (43): 44 
def=
use=136, 
In=108, 136, 
Out=108, 
----------------------
 (44): 45 
def=137, 
use=108, 
In=108, 
Out=137, 
----------------------
 (45): 46 
def=138, 
use=137, 
In=137, 
Out=138, 
----------------------
 (46): 47 
def=
use=138, 
In=138, 
Out=
----------------------
 (47): 48 
def=139, 
use=
In=
Out=139, 
----------------------
 (48): 49 
def=110, 
use=139, 
In=139, 
Out=110, 
----------------------
 (49): 50 
def=102, 
use=110, 
In=110, 
Out=102, 
----------------------
 (50): 51 
def=140, 
use=102, 
In=102, 
Out=140, 102, 
----------------------
 (51): 52 
def=141, 
use=140, 
In=102, 140, 
Out=141, 102, 
----------------------
 (52): 53 
def=
use=141, 
In=102, 141, 
Out=102, 
----------------------
 (53): 54 
def=142, 
use=102, 
In=102, 
Out=142, 102, 
----------------------
 (54): 55 
def=
use=142, 
In=102, 142, 
Out=102, 
----------------------
 (55): 56 
def=143, 
use=102, 
In=102, 
Out=143, 102, 
----------------------
 (56): 57 
def=144, 
use=143, 
In=102, 143, 
Out=144, 102, 
----------------------
 (57): 58 
def=
use=144, 
In=102, 144, 
Out=102, 
----------------------
 (58): 59 
def=145, 
use=102, 
In=102, 
Out=145, 
----------------------
 (59): 60 
def=146, 
use=145, 
In=145, 
Out=146, 
----------------------
 (60): 61 
def=
use=146, 
In=146, 
Out=
----------------------
 (61): 
def=
use=
In=
Out=

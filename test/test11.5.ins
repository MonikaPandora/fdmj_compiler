
------For function ----- main

------Basic Block Graph---------
C13 (0): 
------~Final traced LLVM instructions ---------
define i64 @main() {
C13:
%r104 = call i64* @malloc(i64 24)
%r101 = ptrtoint i64* %r104 to i64
%r105 = add i64 %r101, 8
%r106 = inttoptr i64 %r105 to i64*
store i64 0, i64* %r106, align 8
%r107 = call i64* @malloc(i64 56)
%r103 = ptrtoint i64* %r107 to i64
%r102 = add i64 %r103, 8
%r108 = sub i64 %r102, -8
%r109 = inttoptr i64 %r108 to i64*
store i64 6, i64* %r109, align 8
%r110 = inttoptr i64 %r102 to i64*
store i64 0, i64* %r110, align 8
%r111 = add i64 %r102, 8
%r112 = inttoptr i64 %r111 to i64*
store i64 0, i64* %r112, align 8
%r113 = add i64 %r102, 16
%r114 = inttoptr i64 %r113 to i64*
store i64 0, i64* %r114, align 8
%r115 = add i64 %r102, 24
%r116 = inttoptr i64 %r115 to i64*
store i64 0, i64* %r116, align 8
%r117 = add i64 %r102, 32
%r118 = inttoptr i64 %r117 to i64*
store i64 0, i64* %r118, align 8
%r119 = add i64 %r102, 40
%r120 = inttoptr i64 %r119 to i64*
store i64 0, i64* %r120, align 8
%r121 = inttoptr i64 %r101 to i64*
store i64 %r102, i64* %r121, align 8
%r122 = inttoptr i64 %r101 to i64*
%r123 = ptrtoint i64* @c$dfs to i64
store i64 %r123, i64* %r122, align 8
%r100 = add i64 %r101, 0
%r125 = inttoptr i64 %r100 to i64*
%r124 = load i64, i64* %r125, align 8
%r126 = inttoptr i64 %r124 to i64*
%r128 = add i64 8, 0
%r129 = add i64 3, 0
%r127 = call i64 %r126(i64 %r100, i64 %r128, i64 %r129)
ret i64 0
}

------Flow Graph------
[        C13:; d: s: ]  (0): 1 
[%r104 = call i64* @malloc(i64 24); d: 104; s: ]  (1): 2 
[%r101 = ptrtoint i64* %r104 to i64; d: 101; s: 104]  (2): 3 
[%r105 = add i64 %r101, 8; d: 105; s: 101]  (3): 4 
[%r106 = inttoptr i64 %r105 to i64*; d: 106; s: 105]  (4): 5 
[store i64 0, i64* %r106, align 8; d: s: 106]  (5): 6 
[%r107 = call i64* @malloc(i64 56); d: 107; s: ]  (6): 7 
[%r103 = ptrtoint i64* %r107 to i64; d: 103; s: 107]  (7): 8 
[%r102 = add i64 %r103, 8; d: 102; s: 103]  (8): 9 
[%r108 = sub i64 %r102, -8; d: 108; s: 102]  (9): 10 
[%r109 = inttoptr i64 %r108 to i64*; d: 109; s: 108]  (10): 11 
[store i64 6, i64* %r109, align 8; d: s: 109]  (11): 12 
[%r110 = inttoptr i64 %r102 to i64*; d: 110; s: 102]  (12): 13 
[store i64 0, i64* %r110, align 8; d: s: 110]  (13): 14 
[%r111 = add i64 %r102, 8; d: 111; s: 102]  (14): 15 
[%r112 = inttoptr i64 %r111 to i64*; d: 112; s: 111]  (15): 16 
[store i64 0, i64* %r112, align 8; d: s: 112]  (16): 17 
[%r113 = add i64 %r102, 16; d: 113; s: 102]  (17): 18 
[%r114 = inttoptr i64 %r113 to i64*; d: 114; s: 113]  (18): 19 
[store i64 0, i64* %r114, align 8; d: s: 114]  (19): 20 
[%r115 = add i64 %r102, 24; d: 115; s: 102]  (20): 21 
[%r116 = inttoptr i64 %r115 to i64*; d: 116; s: 115]  (21): 22 
[store i64 0, i64* %r116, align 8; d: s: 116]  (22): 23 
[%r117 = add i64 %r102, 32; d: 117; s: 102]  (23): 24 
[%r118 = inttoptr i64 %r117 to i64*; d: 118; s: 117]  (24): 25 
[store i64 0, i64* %r118, align 8; d: s: 118]  (25): 26 
[%r119 = add i64 %r102, 40; d: 119; s: 102]  (26): 27 
[%r120 = inttoptr i64 %r119 to i64*; d: 120; s: 119]  (27): 28 
[store i64 0, i64* %r120, align 8; d: s: 120]  (28): 29 
[%r121 = inttoptr i64 %r101 to i64*; d: 121; s: 101]  (29): 30 
[store i64 %r102, i64* %r121, align 8; d: s: 102, 121]  (30): 31 
[%r122 = inttoptr i64 %r101 to i64*; d: 122; s: 101]  (31): 32 
[%r123 = ptrtoint i64* @c$dfs to i64; d: 123; s: ]  (32): 33 
[store i64 %r123, i64* %r122, align 8; d: s: 123, 122]  (33): 34 
[%r100 = add i64 %r101, 0; d: 100; s: 101]  (34): 35 
[%r125 = inttoptr i64 %r100 to i64*; d: 125; s: 100]  (35): 36 
[%r124 = load i64, i64* %r125, align 8; d: 124; s: 125]  (36): 37 
[%r126 = inttoptr i64 %r124 to i64*; d: 126; s: 124]  (37): 38 
[%r128 = add i64 8, 0; d: 128; s: ]  (38): 39 
[%r129 = add i64 3, 0; d: 129; s: ]  (39): 40 
[%r127 = call i64 %r126(i64 %r100, i64 %r128, i64 %r129); d: 127; s: 126, 100, 128, 129]  (40): 41 
[   ret i64 0; d: s: ]  (41): 

/* ------Liveness Graph------*/
Number of iterations=53
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=104, 
use=
In=
Out=104, 
----------------------
 (2): 3 
def=101, 
use=104, 
In=104, 
Out=101, 
----------------------
 (3): 4 
def=105, 
use=101, 
In=101, 
Out=105, 101, 
----------------------
 (4): 5 
def=106, 
use=105, 
In=101, 105, 
Out=106, 101, 
----------------------
 (5): 6 
def=
use=106, 
In=101, 106, 
Out=101, 
----------------------
 (6): 7 
def=107, 
use=
In=101, 
Out=107, 101, 
----------------------
 (7): 8 
def=103, 
use=107, 
In=101, 107, 
Out=103, 101, 
----------------------
 (8): 9 
def=102, 
use=103, 
In=101, 103, 
Out=102, 101, 
----------------------
 (9): 10 
def=108, 
use=102, 
In=101, 102, 
Out=108, 102, 101, 
----------------------
 (10): 11 
def=109, 
use=108, 
In=101, 102, 108, 
Out=109, 101, 102, 
----------------------
 (11): 12 
def=
use=109, 
In=102, 101, 109, 
Out=102, 101, 
----------------------
 (12): 13 
def=110, 
use=102, 
In=101, 102, 
Out=110, 101, 102, 
----------------------
 (13): 14 
def=
use=110, 
In=102, 101, 110, 
Out=102, 101, 
----------------------
 (14): 15 
def=111, 
use=102, 
In=101, 102, 
Out=111, 102, 101, 
----------------------
 (15): 16 
def=112, 
use=111, 
In=101, 102, 111, 
Out=112, 101, 102, 
----------------------
 (16): 17 
def=
use=112, 
In=102, 101, 112, 
Out=102, 101, 
----------------------
 (17): 18 
def=113, 
use=102, 
In=101, 102, 
Out=113, 102, 101, 
----------------------
 (18): 19 
def=114, 
use=113, 
In=101, 102, 113, 
Out=114, 101, 102, 
----------------------
 (19): 20 
def=
use=114, 
In=102, 101, 114, 
Out=102, 101, 
----------------------
 (20): 21 
def=115, 
use=102, 
In=101, 102, 
Out=115, 102, 101, 
----------------------
 (21): 22 
def=116, 
use=115, 
In=101, 102, 115, 
Out=116, 101, 102, 
----------------------
 (22): 23 
def=
use=116, 
In=102, 101, 116, 
Out=102, 101, 
----------------------
 (23): 24 
def=117, 
use=102, 
In=101, 102, 
Out=117, 102, 101, 
----------------------
 (24): 25 
def=118, 
use=117, 
In=101, 102, 117, 
Out=118, 101, 102, 
----------------------
 (25): 26 
def=
use=118, 
In=102, 101, 118, 
Out=102, 101, 
----------------------
 (26): 27 
def=119, 
use=102, 
In=101, 102, 
Out=119, 101, 102, 
----------------------
 (27): 28 
def=120, 
use=119, 
In=102, 101, 119, 
Out=120, 102, 101, 
----------------------
 (28): 29 
def=
use=120, 
In=101, 102, 120, 
Out=101, 102, 
----------------------
 (29): 30 
def=121, 
use=101, 
In=102, 101, 
Out=121, 102, 101, 
----------------------
 (30): 31 
def=
use=102, 121, 
In=101, 102, 121, 
Out=101, 
----------------------
 (31): 32 
def=122, 
use=101, 
In=101, 
Out=101, 122, 
----------------------
 (32): 33 
def=123, 
use=
In=122, 101, 
Out=122, 123, 101, 
----------------------
 (33): 34 
def=
use=123, 122, 
In=101, 123, 122, 
Out=101, 
----------------------
 (34): 35 
def=100, 
use=101, 
In=101, 
Out=100, 
----------------------
 (35): 36 
def=125, 
use=100, 
In=100, 
Out=125, 100, 
----------------------
 (36): 37 
def=124, 
use=125, 
In=100, 125, 
Out=124, 100, 
----------------------
 (37): 38 
def=126, 
use=124, 
In=100, 124, 
Out=100, 126, 
----------------------
 (38): 39 
def=128, 
use=
In=126, 100, 
Out=126, 100, 128, 
----------------------
 (39): 40 
def=129, 
use=
In=128, 100, 126, 
Out=129, 128, 100, 126, 
----------------------
 (40): 41 
def=127, 
use=126, 100, 128, 129, 
In=126, 100, 128, 129, 
Out=
----------------------
 (41): 
def=
use=
In=
Out=

------For function ----- c$dfs

------Basic Block Graph---------
C16 (0): 1 6 
L5 (1): 2 11 
L6 (2): 3 11 
L8 (3): 4 
L9 (4): 5 12 
L10 (5): 
L0 (6): 7 1 
L4 (7): 8 
L1 (8): 9 10 
L2 (9): 
L3 (10): 8 
L7 (11): 
L11 (12): 4 
------~Final traced LLVM instructions ---------
define i64 @c$dfs(i64 %r99, i64 %r100, i64 %r101) {
C16:
%r102 = add i64 0, 0
%r160 = icmp eq i64 %r100, 0
br i1 %r160, label %L0, label %L5
L5:
%r161 = icmp sle i64 %r100, 0
br i1 %r161, label %L7, label %L6
L6:
%r162 = icmp eq i64 %r101, 0
br i1 %r162, label %L7, label %L8
L8:
%r163 = add i64 %r99, 8
%r164 = inttoptr i64 %r163 to i64*
%r167 = add i64 %r99, 8
%r168 = inttoptr i64 %r167 to i64*
%r166 = load i64, i64* %r168, align 8
%r165 = add i64 %r166, 1
store i64 %r165, i64* %r164, align 8
%r102 = add i64 1, 0
br label %L9
L9:
%r169 = icmp sle i64 %r102, %r100
br i1 %r169, label %L11, label %L10
L10:
%r170 = add i64 %r99, 8
%r171 = inttoptr i64 %r170 to i64*
%r174 = add i64 %r99, 8
%r175 = inttoptr i64 %r174 to i64*
%r173 = load i64, i64* %r175, align 8
%r172 = sub i64 %r173, 1
store i64 %r172, i64* %r171, align 8
ret i64 0
L0:
%r176 = icmp ne i64 %r101, 0
br i1 %r176, label %L5, label %L4
L4:
br label %L1
L1:
%r179 = add i64 %r99, 8
%r180 = inttoptr i64 %r179 to i64*
%r178 = load i64, i64* %r180, align 8
%r177 = icmp slt i64 %r102, %r178
br i1 %r177, label %L3, label %L2
L2:
call void @putch(i64 10)
ret i64 0
L3:
%r184 = inttoptr i64 %r99 to i64*
%r183 = load i64, i64* %r184, align 8
%r185 = mul i64 %r102, 8
%r182 = add i64 %r183, %r185
%r186 = inttoptr i64 %r182 to i64*
%r181 = load i64, i64* %r186, align 8
call void @putint(i64 %r181)
call void @putch(i64 32)
%r102 = add i64 %r102, 1
br label %L1
L7:
ret i64 0
L11:
%r189 = inttoptr i64 %r99 to i64*
%r188 = load i64, i64* %r189, align 8
%r193 = add i64 %r99, 8
%r194 = inttoptr i64 %r193 to i64*
%r192 = load i64, i64* %r194, align 8
%r191 = sub i64 %r192, 1
%r190 = mul i64 %r191, 8
%r187 = add i64 %r188, %r190
%r195 = inttoptr i64 %r187 to i64*
store i64 %r102, i64* %r195, align 8
%r197 = inttoptr i64 %r99 to i64*
%r196 = load i64, i64* %r197, align 8
%r198 = inttoptr i64 %r196 to i64*
%r200 = sub i64 %r100, %r102
%r201 = sub i64 %r101, 1
%r199 = call i64 %r198(i64 %r99, i64 %r200, i64 %r201)
%r102 = add i64 %r102, 1
br label %L9
}

------Flow Graph------
[        C16:; d: s: ]  (0): 1 
[%r102 = add i64 0, 0; d: 102; s: ]  (1): 2 
[%r160 = icmp eq i64 %r100, 0; d: 160; s: 100]  (2): 3 
[br i1 %r160, label %L0, label %L5; d: s: 160]  (3): 4 32 
[         L5:; d: s: ]  (4): 5 
[%r161 = icmp sle i64 %r100, 0; d: 161; s: 100]  (5): 6 
[br i1 %r161, label %L7, label %L6; d: s: 161]  (6): 7 57 
[         L6:; d: s: ]  (7): 8 
[%r162 = icmp eq i64 %r101, 0; d: 162; s: 101]  (8): 9 
[br i1 %r162, label %L7, label %L8; d: s: 162]  (9): 10 57 
[         L8:; d: s: ]  (10): 11 
[%r163 = add i64 %r99, 8; d: 163; s: 99]  (11): 12 
[%r164 = inttoptr i64 %r163 to i64*; d: 164; s: 163]  (12): 13 
[%r167 = add i64 %r99, 8; d: 167; s: 99]  (13): 14 
[%r168 = inttoptr i64 %r167 to i64*; d: 168; s: 167]  (14): 15 
[%r166 = load i64, i64* %r168, align 8; d: 166; s: 168]  (15): 16 
[%r165 = add i64 %r166, 1; d: 165; s: 166]  (16): 17 
[store i64 %r165, i64* %r164, align 8; d: s: 165, 164]  (17): 18 
[%r102 = add i64 1, 0; d: 102; s: ]  (18): 19 
[br label %L9; d: s: ]  (19): 20 
[         L9:; d: s: ]  (20): 21 
[%r169 = icmp sle i64 %r102, %r100; d: 169; s: 102, 100]  (21): 22 
[br i1 %r169, label %L11, label %L10; d: s: 169]  (22): 23 59 
[        L10:; d: s: ]  (23): 24 
[%r170 = add i64 %r99, 8; d: 170; s: 99]  (24): 25 
[%r171 = inttoptr i64 %r170 to i64*; d: 171; s: 170]  (25): 26 
[%r174 = add i64 %r99, 8; d: 174; s: 99]  (26): 27 
[%r175 = inttoptr i64 %r174 to i64*; d: 175; s: 174]  (27): 28 
[%r173 = load i64, i64* %r175, align 8; d: 173; s: 175]  (28): 29 
[%r172 = sub i64 %r173, 1; d: 172; s: 173]  (29): 30 
[store i64 %r172, i64* %r171, align 8; d: s: 172, 171]  (30): 31 
[   ret i64 0; d: s: ]  (31): 32 
[         L0:; d: s: ]  (32): 33 
[%r176 = icmp ne i64 %r101, 0; d: 176; s: 101]  (33): 34 
[br i1 %r176, label %L5, label %L4; d: s: 176]  (34): 35 4 
[         L4:; d: s: ]  (35): 36 
[br label %L1; d: s: ]  (36): 37 
[         L1:; d: s: ]  (37): 38 
[%r179 = add i64 %r99, 8; d: 179; s: 99]  (38): 39 
[%r180 = inttoptr i64 %r179 to i64*; d: 180; s: 179]  (39): 40 
[%r178 = load i64, i64* %r180, align 8; d: 178; s: 180]  (40): 41 
[%r177 = icmp slt i64 %r102, %r178; d: 177; s: 102, 178]  (41): 42 
[br i1 %r177, label %L3, label %L2; d: s: 177]  (42): 43 46 
[         L2:; d: s: ]  (43): 44 
[call void @putch(i64 10); d: s: ]  (44): 45 
[   ret i64 0; d: s: ]  (45): 46 
[         L3:; d: s: ]  (46): 47 
[%r184 = inttoptr i64 %r99 to i64*; d: 184; s: 99]  (47): 48 
[%r183 = load i64, i64* %r184, align 8; d: 183; s: 184]  (48): 49 
[%r185 = mul i64 %r102, 8; d: 185; s: 102]  (49): 50 
[%r182 = add i64 %r183, %r185; d: 182; s: 183, 185]  (50): 51 
[%r186 = inttoptr i64 %r182 to i64*; d: 186; s: 182]  (51): 52 
[%r181 = load i64, i64* %r186, align 8; d: 181; s: 186]  (52): 53 
[call void @putint(i64 %r181); d: s: 181]  (53): 54 
[call void @putch(i64 32); d: s: ]  (54): 55 
[%r102 = add i64 %r102, 1; d: 102; s: 102]  (55): 56 
[br label %L1; d: s: ]  (56): 37 
[         L7:; d: s: ]  (57): 58 
[   ret i64 0; d: s: ]  (58): 59 
[        L11:; d: s: ]  (59): 60 
[%r189 = inttoptr i64 %r99 to i64*; d: 189; s: 99]  (60): 61 
[%r188 = load i64, i64* %r189, align 8; d: 188; s: 189]  (61): 62 
[%r193 = add i64 %r99, 8; d: 193; s: 99]  (62): 63 
[%r194 = inttoptr i64 %r193 to i64*; d: 194; s: 193]  (63): 64 
[%r192 = load i64, i64* %r194, align 8; d: 192; s: 194]  (64): 65 
[%r191 = sub i64 %r192, 1; d: 191; s: 192]  (65): 66 
[%r190 = mul i64 %r191, 8; d: 190; s: 191]  (66): 67 
[%r187 = add i64 %r188, %r190; d: 187; s: 188, 190]  (67): 68 
[%r195 = inttoptr i64 %r187 to i64*; d: 195; s: 187]  (68): 69 
[store i64 %r102, i64* %r195, align 8; d: s: 102, 195]  (69): 70 
[%r197 = inttoptr i64 %r99 to i64*; d: 197; s: 99]  (70): 71 
[%r196 = load i64, i64* %r197, align 8; d: 196; s: 197]  (71): 72 
[%r198 = inttoptr i64 %r196 to i64*; d: 198; s: 196]  (72): 73 
[%r200 = sub i64 %r100, %r102; d: 200; s: 100, 102]  (73): 74 
[%r201 = sub i64 %r101, 1; d: 201; s: 101]  (74): 75 
[%r199 = call i64 %r198(i64 %r99, i64 %r200, i64 %r201); d: 199; s: 198, 99, 200, 201]  (75): 76 
[%r102 = add i64 %r102, 1; d: 102; s: 102]  (76): 77 
[br label %L9; d: s: ]  (77): 20 

/* ------Liveness Graph------*/
Number of iterations=101
----------------------
 (0): 1 
def=
use=
In=99, 101, 100, 
Out=99, 101, 100, 
----------------------
 (1): 2 
def=102, 
use=
In=100, 101, 99, 
Out=100, 101, 102, 99, 
----------------------
 (2): 3 
def=160, 
use=100, 
In=99, 102, 101, 100, 
Out=160, 100, 99, 102, 101, 
----------------------
 (3): 4 32 
def=
use=160, 
In=101, 102, 99, 100, 160, 
Out=101, 102, 99, 100, 
----------------------
 (4): 5 
def=
use=
In=100, 99, 102, 101, 
Out=100, 99, 102, 101, 
----------------------
 (5): 6 
def=161, 
use=100, 
In=101, 102, 99, 100, 
Out=161, 101, 102, 100, 99, 
----------------------
 (6): 7 57 
def=
use=161, 
In=99, 100, 102, 101, 161, 
Out=99, 100, 102, 101, 
----------------------
 (7): 8 
def=
use=
In=101, 102, 100, 99, 
Out=101, 102, 100, 99, 
----------------------
 (8): 9 
def=162, 
use=101, 
In=99, 100, 102, 101, 
Out=162, 99, 100, 101, 102, 
----------------------
 (9): 10 57 
def=
use=162, 
In=102, 101, 100, 99, 162, 
Out=102, 101, 100, 99, 
----------------------
 (10): 11 
def=
use=
In=99, 100, 101, 
Out=99, 100, 101, 
----------------------
 (11): 12 
def=163, 
use=99, 
In=101, 100, 99, 
Out=163, 101, 100, 99, 
----------------------
 (12): 13 
def=164, 
use=163, 
In=99, 100, 101, 163, 
Out=99, 164, 100, 101, 
----------------------
 (13): 14 
def=167, 
use=99, 
In=101, 100, 164, 99, 
Out=167, 99, 101, 100, 164, 
----------------------
 (14): 15 
def=168, 
use=167, 
In=164, 100, 101, 99, 167, 
Out=168, 164, 100, 101, 99, 
----------------------
 (15): 16 
def=166, 
use=168, 
In=99, 101, 100, 164, 168, 
Out=166, 99, 101, 100, 164, 
----------------------
 (16): 17 
def=165, 
use=166, 
In=164, 100, 101, 99, 166, 
Out=164, 165, 100, 101, 99, 
----------------------
 (17): 18 
def=
use=165, 164, 
In=99, 101, 100, 165, 164, 
Out=99, 101, 100, 
----------------------
 (18): 19 
def=102, 
use=
In=100, 101, 99, 
Out=100, 102, 101, 99, 
----------------------
 (19): 20 
def=
use=
In=99, 101, 102, 100, 
Out=99, 101, 102, 100, 
----------------------
 (20): 21 
def=
use=
In=100, 102, 101, 99, 
Out=100, 102, 101, 99, 
----------------------
 (21): 22 
def=169, 
use=102, 100, 
In=99, 101, 102, 100, 
Out=169, 99, 102, 100, 101, 
----------------------
 (22): 23 59 
def=
use=169, 
In=101, 100, 102, 99, 169, 
Out=101, 100, 102, 99, 
----------------------
 (23): 24 
def=
use=
In=99, 102, 100, 101, 
Out=99, 102, 100, 101, 
----------------------
 (24): 25 
def=170, 
use=99, 
In=101, 100, 102, 99, 
Out=170, 101, 100, 102, 99, 
----------------------
 (25): 26 
def=171, 
use=170, 
In=99, 102, 100, 101, 170, 
Out=99, 171, 102, 100, 101, 
----------------------
 (26): 27 
def=174, 
use=99, 
In=101, 100, 102, 171, 99, 
Out=174, 101, 100, 102, 99, 171, 
----------------------
 (27): 28 
def=175, 
use=174, 
In=171, 99, 102, 100, 101, 174, 
Out=175, 171, 99, 102, 100, 101, 
----------------------
 (28): 29 
def=173, 
use=175, 
In=101, 100, 102, 99, 171, 175, 
Out=173, 101, 100, 102, 99, 171, 
----------------------
 (29): 30 
def=172, 
use=173, 
In=171, 99, 102, 100, 101, 173, 
Out=171, 172, 99, 102, 100, 101, 
----------------------
 (30): 31 
def=
use=172, 171, 
In=101, 100, 102, 99, 172, 171, 
Out=101, 100, 102, 99, 
----------------------
 (31): 32 
def=
use=
In=99, 102, 100, 101, 
Out=99, 102, 100, 101, 
----------------------
 (32): 33 
def=
use=
In=101, 100, 102, 99, 
Out=101, 100, 102, 99, 
----------------------
 (33): 34 
def=176, 
use=101, 
In=99, 102, 100, 101, 
Out=176, 99, 102, 100, 101, 
----------------------
 (34): 35 4 
def=
use=176, 
In=101, 100, 102, 99, 176, 
Out=101, 100, 102, 99, 
----------------------
 (35): 36 
def=
use=
In=99, 102, 
Out=99, 102, 
----------------------
 (36): 37 
def=
use=
In=102, 99, 
Out=102, 99, 
----------------------
 (37): 38 
def=
use=
In=99, 102, 
Out=99, 102, 
----------------------
 (38): 39 
def=179, 
use=99, 
In=102, 99, 
Out=179, 102, 99, 
----------------------
 (39): 40 
def=180, 
use=179, 
In=99, 102, 179, 
Out=180, 99, 102, 
----------------------
 (40): 41 
def=178, 
use=180, 
In=102, 99, 180, 
Out=178, 102, 99, 
----------------------
 (41): 42 
def=177, 
use=102, 178, 
In=99, 102, 178, 
Out=177, 102, 99, 
----------------------
 (42): 43 46 
def=
use=177, 
In=99, 102, 177, 
Out=99, 102, 
----------------------
 (43): 44 
def=
use=
In=102, 99, 
Out=102, 99, 
----------------------
 (44): 45 
def=
use=
In=99, 102, 
Out=99, 102, 
----------------------
 (45): 46 
def=
use=
In=102, 99, 
Out=102, 99, 
----------------------
 (46): 47 
def=
use=
In=99, 102, 
Out=99, 102, 
----------------------
 (47): 48 
def=184, 
use=99, 
In=102, 99, 
Out=184, 99, 102, 
----------------------
 (48): 49 
def=183, 
use=184, 
In=102, 99, 184, 
Out=102, 99, 183, 
----------------------
 (49): 50 
def=185, 
use=102, 
In=183, 99, 102, 
Out=185, 183, 99, 102, 
----------------------
 (50): 51 
def=182, 
use=183, 185, 
In=102, 99, 183, 185, 
Out=182, 102, 99, 
----------------------
 (51): 52 
def=186, 
use=182, 
In=99, 102, 182, 
Out=186, 99, 102, 
----------------------
 (52): 53 
def=181, 
use=186, 
In=102, 99, 186, 
Out=181, 102, 99, 
----------------------
 (53): 54 
def=
use=181, 
In=99, 102, 181, 
Out=99, 102, 
----------------------
 (54): 55 
def=
use=
In=102, 99, 
Out=102, 99, 
----------------------
 (55): 56 
def=102, 
use=102, 
In=99, 102, 
Out=99, 102, 
----------------------
 (56): 37 
def=
use=
In=102, 99, 
Out=102, 99, 
----------------------
 (57): 58 
def=
use=
In=99, 101, 100, 102, 
Out=99, 101, 100, 102, 
----------------------
 (58): 59 
def=
use=
In=102, 100, 101, 99, 
Out=102, 100, 101, 99, 
----------------------
 (59): 60 
def=
use=
In=99, 101, 100, 102, 
Out=99, 101, 100, 102, 
----------------------
 (60): 61 
def=189, 
use=99, 
In=102, 100, 101, 99, 
Out=189, 102, 100, 101, 99, 
----------------------
 (61): 62 
def=188, 
use=189, 
In=99, 101, 100, 102, 189, 
Out=99, 101, 100, 102, 188, 
----------------------
 (62): 63 
def=193, 
use=99, 
In=188, 102, 100, 101, 99, 
Out=193, 188, 102, 100, 101, 99, 
----------------------
 (63): 64 
def=194, 
use=193, 
In=99, 101, 100, 102, 188, 193, 
Out=194, 99, 101, 100, 102, 188, 
----------------------
 (64): 65 
def=192, 
use=194, 
In=188, 102, 100, 101, 99, 194, 
Out=192, 188, 102, 100, 101, 99, 
----------------------
 (65): 66 
def=191, 
use=192, 
In=99, 101, 100, 102, 188, 192, 
Out=191, 99, 101, 100, 102, 188, 
----------------------
 (66): 67 
def=190, 
use=191, 
In=188, 102, 100, 101, 99, 191, 
Out=190, 188, 102, 100, 101, 99, 
----------------------
 (67): 68 
def=187, 
use=188, 190, 
In=99, 101, 100, 102, 188, 190, 
Out=187, 99, 101, 100, 102, 
----------------------
 (68): 69 
def=195, 
use=187, 
In=102, 100, 101, 99, 187, 
Out=195, 102, 100, 101, 99, 
----------------------
 (69): 70 
def=
use=102, 195, 
In=99, 101, 100, 102, 195, 
Out=99, 101, 100, 102, 
----------------------
 (70): 71 
def=197, 
use=99, 
In=102, 100, 101, 99, 
Out=197, 102, 100, 99, 101, 
----------------------
 (71): 72 
def=196, 
use=197, 
In=101, 99, 100, 102, 197, 
Out=196, 101, 99, 100, 102, 
----------------------
 (72): 73 
def=198, 
use=196, 
In=102, 100, 99, 101, 196, 
Out=102, 100, 99, 198, 101, 
----------------------
 (73): 74 
def=200, 
use=100, 102, 
In=101, 198, 99, 100, 102, 
Out=101, 102, 100, 198, 99, 200, 
----------------------
 (74): 75 
def=201, 
use=101, 
In=200, 99, 198, 100, 102, 101, 
Out=201, 200, 99, 198, 100, 101, 102, 
----------------------
 (75): 76 
def=199, 
use=198, 99, 200, 201, 
In=102, 101, 100, 198, 99, 200, 201, 
Out=102, 99, 101, 100, 
----------------------
 (76): 77 
def=102, 
use=102, 
In=100, 101, 99, 102, 
Out=100, 102, 101, 99, 
----------------------
 (77): 20 
def=
use=
In=99, 101, 102, 100, 
Out=99, 101, 102, 100, 

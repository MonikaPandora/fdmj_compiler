
------For function ----- main

------Basic Block Graph---------
C4 (0): 
------~Final traced LLVM instructions ---------
define i64 @main() {
C4:
%r103 = call i64* @malloc(i64 8)
%r100 = ptrtoint i64* %r103 to i64
%r104 = inttoptr i64 %r100 to i64*
%r105 = ptrtoint i64* @c$m to i64
store i64 %r105, i64* %r104, align 8
%r101 = add i64 %r100, 0
%r107 = inttoptr i64 %r101 to i64*
%r106 = load i64, i64* %r107, align 8
%r108 = inttoptr i64 %r106 to i64*
%r109 = add i64 1, 0
%s102 = call double %r108(i64 %r101, i64 %r109)
%r110 = fptosi double %s102 to i64
ret i64 %r110
}

------Flow Graph------
[         C4:; d: s: ]  (0): 1 
[%r103 = call i64* @malloc(i64 8); d: 103; s: ]  (1): 2 
[%r100 = ptrtoint i64* %r103 to i64; d: 100; s: 103]  (2): 3 
[%r104 = inttoptr i64 %r100 to i64*; d: 104; s: 100]  (3): 4 
[%r105 = ptrtoint i64* @c$m to i64; d: 105; s: ]  (4): 5 
[store i64 %r105, i64* %r104, align 8; d: s: 105, 104]  (5): 6 
[%r101 = add i64 %r100, 0; d: 101; s: 100]  (6): 7 
[%r107 = inttoptr i64 %r101 to i64*; d: 107; s: 101]  (7): 8 
[%r106 = load i64, i64* %r107, align 8; d: 106; s: 107]  (8): 9 
[%r108 = inttoptr i64 %r106 to i64*; d: 108; s: 106]  (9): 10 
[%r109 = add i64 1, 0; d: 109; s: ]  (10): 11 
[%s102 = call double %r108(i64 %r101, i64 %r109); d: 102; s: 108, 101, 109]  (11): 12 
[%r110 = fptosi double %s102 to i64; d: 110; s: 102]  (12): 13 
[ret i64 %r110; d: s: 110]  (13): 

/* ------Liveness Graph------*/
Number of iterations=9
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=103, 
use=
In=
Out=103, 
----------------------
 (2): 3 
def=100, 
use=103, 
In=103, 
Out=100, 
----------------------
 (3): 4 
def=104, 
use=100, 
In=100, 
Out=100, 104, 
----------------------
 (4): 5 
def=105, 
use=
In=104, 100, 
Out=104, 105, 100, 
----------------------
 (5): 6 
def=
use=105, 104, 
In=100, 105, 104, 
Out=100, 
----------------------
 (6): 7 
def=101, 
use=100, 
In=100, 
Out=101, 
----------------------
 (7): 8 
def=107, 
use=101, 
In=101, 
Out=107, 101, 
----------------------
 (8): 9 
def=106, 
use=107, 
In=101, 107, 
Out=106, 101, 
----------------------
 (9): 10 
def=108, 
use=106, 
In=101, 106, 
Out=108, 101, 
----------------------
 (10): 11 
def=109, 
use=
In=101, 108, 
Out=109, 101, 108, 
----------------------
 (11): 12 
def=102, 
use=108, 101, 109, 
In=108, 101, 109, 
Out=102, 
----------------------
 (12): 13 
def=110, 
use=102, 
In=102, 
Out=110, 
----------------------
 (13): 
def=
use=110, 
In=110, 
Out=

------For function ----- c1$m1

------Basic Block Graph---------
C7 (0): 1 3 
L1 (1): 2 
L2 (2): 
L0 (3): 2 
------~Final traced LLVM instructions ---------
define i64 @c1$m1(i64 %r99, double %s100, i64 %r101) {
C7:
%s123 = sitofp i64 %r101 to double
%r122 = fcmp ogt double %s100, %s123
br i1 %r122, label %L0, label %L1
L1:
%r103 = add i64 0, 0
br label %L2
L2:
%r102 = add i64 %r103, 0
%r124 = call i64* @malloc(i64 8)
%r104 = ptrtoint i64* %r124 to i64
%r125 = inttoptr i64 %r104 to i64*
%r126 = ptrtoint i64* @c$m to i64
store i64 %r126, i64* %r125, align 8
%r105 = add i64 %r104, 0
%r128 = inttoptr i64 %r105 to i64*
%r127 = load i64, i64* %r128, align 8
%r129 = inttoptr i64 %r127 to i64*
%r130 = add i64 1, 0
%s106 = call double %r129(i64 %r105, i64 %r130)
%r131 = fptosi double %s106 to i64
ret i64 %r131
L0:
%r103 = add i64 1, 0
br label %L2
}

------Flow Graph------
[         C7:; d: s: ]  (0): 1 
[%s123 = sitofp i64 %r101 to double; d: 123; s: 101]  (1): 2 
[%r122 = fcmp ogt double %s100, %s123; d: 122; s: 100, 123]  (2): 3 
[br i1 %r122, label %L0, label %L1; d: s: 122]  (3): 4 22 
[         L1:; d: s: ]  (4): 5 
[%r103 = add i64 0, 0; d: 103; s: ]  (5): 6 
[br label %L2; d: s: ]  (6): 7 
[         L2:; d: s: ]  (7): 8 
[%r102 = add i64 %r103, 0; d: 102; s: 103]  (8): 9 
[%r124 = call i64* @malloc(i64 8); d: 124; s: ]  (9): 10 
[%r104 = ptrtoint i64* %r124 to i64; d: 104; s: 124]  (10): 11 
[%r125 = inttoptr i64 %r104 to i64*; d: 125; s: 104]  (11): 12 
[%r126 = ptrtoint i64* @c$m to i64; d: 126; s: ]  (12): 13 
[store i64 %r126, i64* %r125, align 8; d: s: 126, 125]  (13): 14 
[%r105 = add i64 %r104, 0; d: 105; s: 104]  (14): 15 
[%r128 = inttoptr i64 %r105 to i64*; d: 128; s: 105]  (15): 16 
[%r127 = load i64, i64* %r128, align 8; d: 127; s: 128]  (16): 17 
[%r129 = inttoptr i64 %r127 to i64*; d: 129; s: 127]  (17): 18 
[%r130 = add i64 1, 0; d: 130; s: ]  (18): 19 
[%s106 = call double %r129(i64 %r105, i64 %r130); d: 106; s: 129, 105, 130]  (19): 20 
[%r131 = fptosi double %s106 to i64; d: 131; s: 106]  (20): 21 
[ret i64 %r131; d: s: 131]  (21): 22 
[         L0:; d: s: ]  (22): 23 
[%r103 = add i64 1, 0; d: 103; s: ]  (23): 24 
[br label %L2; d: s: ]  (24): 7 

/* ------Liveness Graph------*/
Number of iterations=18
----------------------
 (0): 1 
def=
use=
In=101, 100, 
Out=101, 100, 
----------------------
 (1): 2 
def=123, 
use=101, 
In=100, 101, 
Out=123, 100, 
----------------------
 (2): 3 
def=122, 
use=100, 123, 
In=100, 123, 
Out=122, 
----------------------
 (3): 4 22 
def=
use=122, 
In=122, 
Out=
----------------------
 (4): 5 
def=
use=
In=
Out=
----------------------
 (5): 6 
def=103, 
use=
In=
Out=103, 
----------------------
 (6): 7 
def=
use=
In=103, 
Out=103, 
----------------------
 (7): 8 
def=
use=
In=103, 
Out=103, 
----------------------
 (8): 9 
def=102, 
use=103, 
In=103, 
Out=
----------------------
 (9): 10 
def=124, 
use=
In=
Out=124, 
----------------------
 (10): 11 
def=104, 
use=124, 
In=124, 
Out=104, 
----------------------
 (11): 12 
def=125, 
use=104, 
In=104, 
Out=104, 125, 
----------------------
 (12): 13 
def=126, 
use=
In=125, 104, 
Out=125, 126, 104, 
----------------------
 (13): 14 
def=
use=126, 125, 
In=104, 126, 125, 
Out=104, 
----------------------
 (14): 15 
def=105, 
use=104, 
In=104, 
Out=105, 
----------------------
 (15): 16 
def=128, 
use=105, 
In=105, 
Out=128, 105, 
----------------------
 (16): 17 
def=127, 
use=128, 
In=105, 128, 
Out=127, 105, 
----------------------
 (17): 18 
def=129, 
use=127, 
In=105, 127, 
Out=129, 105, 
----------------------
 (18): 19 
def=130, 
use=
In=105, 129, 
Out=130, 105, 129, 
----------------------
 (19): 20 
def=106, 
use=129, 105, 130, 
In=129, 105, 130, 
Out=106, 
----------------------
 (20): 21 
def=131, 
use=106, 
In=106, 
Out=131, 
----------------------
 (21): 22 
def=
use=131, 
In=131, 
Out=
----------------------
 (22): 23 
def=
use=
In=
Out=
----------------------
 (23): 24 
def=103, 
use=
In=
Out=103, 
----------------------
 (24): 7 
def=
use=
In=103, 
Out=103, 

------For function ----- c$m

------Basic Block Graph---------
C10 (0): 
------~Final traced LLVM instructions ---------
define double @c$m(i64 %r99, double %s100) {
C10:
ret double %s100
}

------Flow Graph------
[        C10:; d: s: ]  (0): 1 
[ret double %s100; d: s: 100]  (1): 

/* ------Liveness Graph------*/
Number of iterations=22
----------------------
 (0): 1 
def=
use=
In=100, 
Out=100, 
----------------------
 (1): 
def=
use=100, 
In=100, 
Out=

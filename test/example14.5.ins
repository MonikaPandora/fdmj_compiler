
------For function ----- main

------Basic Block Graph---------
C4 (0): 
------~Final traced AS instructions ---------
define i64 @main() {
C4:
%103 = call i64* @malloc(i64 8)
%100 = ptrtoint i64* %103 to i64
%104 = inttoptr i64 %100 to i64*
%105 = ptrtoint i64* @c$m to i64
store i64 %105, i64* %104, align 8
%101 = add i64 %100, 0
%107 = inttoptr i64 %101 to i64*
%106 = load i64, i64* %107, align 8
%108 = inttoptr i64 %106 to i64*
%109 = add i64 1, 0
%102 = call double %108(i64 %101, i64 %109)
%110 = fptosi double %102 to i64
ret i64 %110
C3:
ret i64 -1
}


------For function ----- c1$m1

------Basic Block Graph---------
C6 (0): 
------~Final traced AS instructions ---------
define i64 @c1$m1(i64 %99, i64 %100, i64 %101) {
C6:
%112 = sitofp i64 %101 to double
%111 = fcmp ogt double %100, %112
br i1 %111, label %L0, label %L1
L1:
%103 = add i64 0, 0
L2:
%102 = fadd double %103, 0.0
%113 = call i64* @malloc(i64 8)
%104 = ptrtoint i64* %113 to i64
%114 = inttoptr i64 %104 to i64*
%115 = ptrtoint i64* @c$m to i64
store i64 %115, i64* %114, align 8
%105 = add i64 %104, 0
%117 = inttoptr i64 %105 to i64*
%116 = load i64, i64* %117, align 8
%118 = inttoptr i64 %116 to i64*
%119 = add i64 1, 0
%106 = call double %118(i64 %105, i64 %119)
%120 = fptosi double %106 to i64
ret i64 %120
L0:
%103 = add i64 1, 0
br label %L2
C5:
ret i64 -1
}


------For function ----- c$m

------Basic Block Graph---------
C8 (0): 
------~Final traced AS instructions ---------
define double @c$m(i64 %99, i64 %100) {
C8:
ret i64 %100
C7:
ret i64 -1
}


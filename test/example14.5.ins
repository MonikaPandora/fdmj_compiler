
------For function ----- main

------Basic Block Graph---------
C4 (0): 
------~Final traced AS instructions ---------
define i64 @main() {
C4:
%103 = call i64* @malloc(i64 8)
%100 = ptrtoint i64* %103 to i64
%104 = inttoptr i64 %100 to i64*
%105 = ptrtoint i64* @c$m to i64
store i64 %105, i64* %104, align 8
%101 = add i64 %100, 0
%106 = inttoptr i64 %101 to i64*
%107 = add i64 1, 0
%102 = call double %106(i64 %101, i64 %107)
%108 = fptosi double %102 to i64
ret i64 %108
C3:
ret i64 -1
}


------For function ----- c1$m1

------Basic Block Graph---------
C6 (0): 
------~Final traced AS instructions ---------
define i64 @c1$m1(i64 %99, i64 %100, i64 %101) {
C6:
%110 = sitofp i64 %101 to double
%109 = fcmp ogt double %100, %110
br i1 %109, label %L0, label %L1
L1:
%103 = add i64 0, 0
L2:
%102 = fadd double %103, 0.0
%111 = call i64* @malloc(i64 8)
%104 = ptrtoint i64* %111 to i64
%112 = inttoptr i64 %104 to i64*
%113 = ptrtoint i64* @c$m to i64
store i64 %113, i64* %112, align 8
%105 = add i64 %104, 0
%114 = inttoptr i64 %105 to i64*
%115 = add i64 1, 0
%106 = call double %114(i64 %105, i64 %115)
%116 = fptosi double %106 to i64
ret i64 %116
L0:
%103 = add i64 1, 0
br label %L2
C5:
ret i64 -1
}


------For function ----- c$m

------Basic Block Graph---------
C8 (0): 
------~Final traced AS instructions ---------
define double @c$m(i64 %99, i64 %100) {
C8:
ret i64 %100
C7:
ret i64 -1
}


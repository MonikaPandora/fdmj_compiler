
------For function ----- main

------Basic Block Graph---------
C11 (0): 1 5 
L4 (1): 2 5 
L6 (2): 3 
L7 (3): 4 6 
L8 (4): 
L5 (5): 
L9 (6): 3 
------~Final traced LLVM instructions ---------
define i64 @main() {
C11:
%r101 = add i64 0, 0
call void @putch(i64 69)
call void @putch(i64 110)
call void @putch(i64 116)
call void @putch(i64 101)
call void @putch(i64 114)
call void @putch(i64 32)
call void @putch(i64 116)
call void @putch(i64 104)
call void @putch(i64 101)
call void @putch(i64 32)
call void @putch(i64 110)
call void @putch(i64 117)
call void @putch(i64 109)
call void @putch(i64 98)
call void @putch(i64 101)
call void @putch(i64 114)
call void @putch(i64 32)
call void @putch(i64 111)
call void @putch(i64 102)
call void @putch(i64 32)
call void @putch(i64 116)
call void @putch(i64 101)
call void @putch(i64 114)
call void @putch(i64 109)
call void @putch(i64 58)
%s105 = call double @getfloat()
%r100 = fptosi double %s105 to i64
%r106 = icmp slt i64 %r100, 0
br i1 %r106, label %L5, label %L4
L4:
%r107 = icmp sgt i64 %r100, 47
br i1 %r107, label %L5, label %L6
L6:
%r108 = call i64* @malloc(i64 8)
%r103 = ptrtoint i64* %r108 to i64
%r109 = inttoptr i64 %r103 to i64*
%r110 = ptrtoint i64* @fib$f to i64
store i64 %r110, i64* %r109, align 8
%r102 = add i64 %r103, 0
br label %L7
L7:
%r111 = icmp slt i64 %r101, %r100
br i1 %r111, label %L9, label %L8
L8:
call void @putch(i64 10)
ret i64 0
L5:
%r112 = add 1, 0
ret i64 %r112
L9:
%r114 = inttoptr i64 %r102 to i64*
%r113 = load i64, i64* %r114, align 8
%r115 = inttoptr i64 %r113 to i64*
%r104 = call i64 %r115(i64 %r102, i64 %r101)
call void @putint(i64 %r104)
%r101 = add i64 %r101, 1
call void @putch(i64 32)
br label %L7
}

------Flow Graph------
[        C11:; d: s: ]  (0): 1 
[%r101 = add i64 0, 0; d: 101; s: ]  (1): 2 
[call void @putch(i64 69); d: s: ]  (2): 3 
[call void @putch(i64 110); d: s: ]  (3): 4 
[call void @putch(i64 116); d: s: ]  (4): 5 
[call void @putch(i64 101); d: s: ]  (5): 6 
[call void @putch(i64 114); d: s: ]  (6): 7 
[call void @putch(i64 32); d: s: ]  (7): 8 
[call void @putch(i64 116); d: s: ]  (8): 9 
[call void @putch(i64 104); d: s: ]  (9): 10 
[call void @putch(i64 101); d: s: ]  (10): 11 
[call void @putch(i64 32); d: s: ]  (11): 12 
[call void @putch(i64 110); d: s: ]  (12): 13 
[call void @putch(i64 117); d: s: ]  (13): 14 
[call void @putch(i64 109); d: s: ]  (14): 15 
[call void @putch(i64 98); d: s: ]  (15): 16 
[call void @putch(i64 101); d: s: ]  (16): 17 
[call void @putch(i64 114); d: s: ]  (17): 18 
[call void @putch(i64 32); d: s: ]  (18): 19 
[call void @putch(i64 111); d: s: ]  (19): 20 
[call void @putch(i64 102); d: s: ]  (20): 21 
[call void @putch(i64 32); d: s: ]  (21): 22 
[call void @putch(i64 116); d: s: ]  (22): 23 
[call void @putch(i64 101); d: s: ]  (23): 24 
[call void @putch(i64 114); d: s: ]  (24): 25 
[call void @putch(i64 109); d: s: ]  (25): 26 
[call void @putch(i64 58); d: s: ]  (26): 27 
[%s105 = call double @getfloat(); d: 105; s: ]  (27): 28 
[%r100 = fptosi double %s105 to i64; d: 100; s: 105]  (28): 29 
[%r106 = icmp slt i64 %r100, 0; d: 106; s: 100]  (29): 30 
[br i1 %r106, label %L5, label %L4; d: s: 106]  (30): 31 48 
[         L4:; d: s: ]  (31): 32 
[%r107 = icmp sgt i64 %r100, 47; d: 107; s: 100]  (32): 33 
[br i1 %r107, label %L5, label %L6; d: s: 107]  (33): 34 48 
[         L6:; d: s: ]  (34): 35 
[%r108 = call i64* @malloc(i64 8); d: 108; s: ]  (35): 36 
[%r103 = ptrtoint i64* %r108 to i64; d: 103; s: 108]  (36): 37 
[%r109 = inttoptr i64 %r103 to i64*; d: 109; s: 103]  (37): 38 
[%r110 = ptrtoint i64* @fib$f to i64; d: 110; s: ]  (38): 39 
[store i64 %r110, i64* %r109, align 8; d: s: 110, 109]  (39): 40 
[%r102 = add i64 %r103, 0; d: 102; s: 103]  (40): 41 
[br label %L7; d: s: ]  (41): 42 
[         L7:; d: s: ]  (42): 43 
[%r111 = icmp slt i64 %r101, %r100; d: 111; s: 101, 100]  (43): 44 
[br i1 %r111, label %L9, label %L8; d: s: 111]  (44): 45 51 
[         L8:; d: s: ]  (45): 46 
[call void @putch(i64 10); d: s: ]  (46): 47 
[   ret i64 0; d: s: ]  (47): 48 
[         L5:; d: s: ]  (48): 49 
[%r112 = add 1, 0; d: 112; s: ]  (49): 50 
[ret i64 %r112; d: s: 112]  (50): 51 
[         L9:; d: s: ]  (51): 52 
[%r114 = inttoptr i64 %r102 to i64*; d: 114; s: 102]  (52): 53 
[%r113 = load i64, i64* %r114, align 8; d: 113; s: 114]  (53): 54 
[%r115 = inttoptr i64 %r113 to i64*; d: 115; s: 113]  (54): 55 
[%r104 = call i64 %r115(i64 %r102, i64 %r101); d: 104; s: 115, 102, 101]  (55): 56 
[call void @putint(i64 %r104); d: s: 104]  (56): 57 
[%r101 = add i64 %r101, 1; d: 101; s: 101]  (57): 58 
[call void @putch(i64 32); d: s: ]  (58): 59 
[br label %L7; d: s: ]  (59): 42 

/* ------Liveness Graph------*/
Number of iterations=75
----------------------
 (0): 1 
def=
use=
In=102, 
Out=102, 
----------------------
 (1): 2 
def=101, 
use=
In=102, 
Out=102, 101, 
----------------------
 (2): 3 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (3): 4 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (4): 5 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (5): 6 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (6): 7 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (7): 8 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (8): 9 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (9): 10 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (10): 11 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (11): 12 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (12): 13 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (13): 14 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (14): 15 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (15): 16 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (16): 17 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (17): 18 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (18): 19 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (19): 20 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (20): 21 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (21): 22 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (22): 23 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (23): 24 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (24): 25 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (25): 26 
def=
use=
In=102, 101, 
Out=102, 101, 
----------------------
 (26): 27 
def=
use=
In=101, 102, 
Out=101, 102, 
----------------------
 (27): 28 
def=105, 
use=
In=102, 101, 
Out=105, 102, 101, 
----------------------
 (28): 29 
def=100, 
use=105, 
In=101, 102, 105, 
Out=100, 101, 102, 
----------------------
 (29): 30 
def=106, 
use=100, 
In=102, 101, 100, 
Out=106, 100, 102, 101, 
----------------------
 (30): 31 48 
def=
use=106, 
In=101, 102, 100, 106, 
Out=101, 102, 100, 
----------------------
 (31): 32 
def=
use=
In=100, 102, 101, 
Out=100, 102, 101, 
----------------------
 (32): 33 
def=107, 
use=100, 
In=101, 102, 100, 
Out=107, 100, 101, 102, 
----------------------
 (33): 34 48 
def=
use=107, 
In=102, 101, 100, 107, 
Out=102, 101, 100, 
----------------------
 (34): 35 
def=
use=
In=100, 101, 
Out=100, 101, 
----------------------
 (35): 36 
def=108, 
use=
In=101, 100, 
Out=108, 101, 100, 
----------------------
 (36): 37 
def=103, 
use=108, 
In=100, 101, 108, 
Out=103, 100, 101, 
----------------------
 (37): 38 
def=109, 
use=103, 
In=101, 100, 103, 
Out=103, 101, 100, 109, 
----------------------
 (38): 39 
def=110, 
use=
In=109, 100, 101, 103, 
Out=109, 110, 100, 101, 103, 
----------------------
 (39): 40 
def=
use=110, 109, 
In=103, 101, 100, 110, 109, 
Out=103, 101, 100, 
----------------------
 (40): 41 
def=102, 
use=103, 
In=100, 101, 103, 
Out=100, 101, 102, 
----------------------
 (41): 42 
def=
use=
In=102, 101, 100, 
Out=102, 101, 100, 
----------------------
 (42): 43 
def=
use=
In=100, 101, 102, 
Out=100, 101, 102, 
----------------------
 (43): 44 
def=111, 
use=101, 100, 
In=102, 101, 100, 
Out=111, 102, 100, 101, 
----------------------
 (44): 45 51 
def=
use=111, 
In=101, 100, 102, 111, 
Out=101, 100, 102, 
----------------------
 (45): 46 
def=
use=
In=102, 100, 101, 
Out=102, 100, 101, 
----------------------
 (46): 47 
def=
use=
In=101, 100, 102, 
Out=101, 100, 102, 
----------------------
 (47): 48 
def=
use=
In=102, 100, 101, 
Out=102, 100, 101, 
----------------------
 (48): 49 
def=
use=
In=101, 100, 102, 
Out=101, 100, 102, 
----------------------
 (49): 50 
def=112, 
use=
In=102, 100, 101, 
Out=112, 102, 100, 101, 
----------------------
 (50): 51 
def=
use=112, 
In=101, 100, 102, 112, 
Out=101, 100, 102, 
----------------------
 (51): 52 
def=
use=
In=102, 100, 101, 
Out=102, 100, 101, 
----------------------
 (52): 53 
def=114, 
use=102, 
In=101, 100, 102, 
Out=114, 101, 102, 100, 
----------------------
 (53): 54 
def=113, 
use=114, 
In=100, 102, 101, 114, 
Out=113, 100, 102, 101, 
----------------------
 (54): 55 
def=115, 
use=113, 
In=101, 102, 100, 113, 
Out=101, 102, 115, 100, 
----------------------
 (55): 56 
def=104, 
use=115, 102, 101, 
In=100, 115, 102, 101, 
Out=104, 102, 100, 101, 
----------------------
 (56): 57 
def=
use=104, 
In=101, 100, 102, 104, 
Out=101, 100, 102, 
----------------------
 (57): 58 
def=101, 
use=101, 
In=102, 100, 101, 
Out=102, 101, 100, 
----------------------
 (58): 59 
def=
use=
In=100, 101, 102, 
Out=100, 101, 102, 
----------------------
 (59): 42 
def=
use=
In=102, 101, 100, 
Out=102, 101, 100, 

------For function ----- fib$f

------Basic Block Graph---------
C14 (0): 1 3 
L0 (1): 2 3 
L2 (2): 
L1 (3): 
------~Final traced LLVM instructions ---------
define i64 @fib$f(i64 %r99, i64 %r100) {
C14:
%r135 = icmp eq i64 %r100, 0
br i1 %r135, label %L1, label %L0
L0:
%r136 = icmp eq i64 %r100, 1
br i1 %r136, label %L1, label %L2
L2:
%r138 = inttoptr i64 %r99 to i64*
%r137 = load i64, i64* %r138, align 8
%r139 = inttoptr i64 %r137 to i64*
%r140 = sub i64 %r100, 1
%r101 = call i64 %r139(i64 %r99, i64 %r140)
%r134 = add i64 %r101, 0
%r142 = inttoptr i64 %r99 to i64*
%r141 = load i64, i64* %r142, align 8
%r143 = inttoptr i64 %r141 to i64*
%r144 = sub i64 %r100, 2
%r102 = call i64 %r143(i64 %r99, i64 %r144)
%r145 = add i64 %r134, %r102
ret i64 %r145
L1:
ret i64 %r100
}

------Flow Graph------
[        C14:; d: s: ]  (0): 1 
[%r135 = icmp eq i64 %r100, 0; d: 135; s: 100]  (1): 2 
[br i1 %r135, label %L1, label %L0; d: s: 135]  (2): 3 20 
[         L0:; d: s: ]  (3): 4 
[%r136 = icmp eq i64 %r100, 1; d: 136; s: 100]  (4): 5 
[br i1 %r136, label %L1, label %L2; d: s: 136]  (5): 6 20 
[         L2:; d: s: ]  (6): 7 
[%r138 = inttoptr i64 %r99 to i64*; d: 138; s: 99]  (7): 8 
[%r137 = load i64, i64* %r138, align 8; d: 137; s: 138]  (8): 9 
[%r139 = inttoptr i64 %r137 to i64*; d: 139; s: 137]  (9): 10 
[%r140 = sub i64 %r100, 1; d: 140; s: 100]  (10): 11 
[%r101 = call i64 %r139(i64 %r99, i64 %r140); d: 101; s: 139, 99, 140]  (11): 12 
[%r134 = add i64 %r101, 0; d: 134; s: 101]  (12): 13 
[%r142 = inttoptr i64 %r99 to i64*; d: 142; s: 99]  (13): 14 
[%r141 = load i64, i64* %r142, align 8; d: 141; s: 142]  (14): 15 
[%r143 = inttoptr i64 %r141 to i64*; d: 143; s: 141]  (15): 16 
[%r144 = sub i64 %r100, 2; d: 144; s: 100]  (16): 17 
[%r102 = call i64 %r143(i64 %r99, i64 %r144); d: 102; s: 143, 99, 144]  (17): 18 
[%r145 = add i64 %r134, %r102; d: 145; s: 134, 102]  (18): 19 
[ret i64 %r145; d: s: 145]  (19): 20 
[         L1:; d: s: ]  (20): 21 
[ret i64 %r100; d: s: 100]  (21): 

/* ------Liveness Graph------*/
Number of iterations=91
----------------------
 (0): 1 
def=
use=
In=100, 99, 
Out=100, 99, 
----------------------
 (1): 2 
def=135, 
use=100, 
In=99, 100, 
Out=135, 100, 99, 
----------------------
 (2): 3 20 
def=
use=135, 
In=99, 100, 135, 
Out=99, 100, 
----------------------
 (3): 4 
def=
use=
In=100, 99, 
Out=100, 99, 
----------------------
 (4): 5 
def=136, 
use=100, 
In=99, 100, 
Out=136, 99, 100, 
----------------------
 (5): 6 20 
def=
use=136, 
In=100, 99, 136, 
Out=100, 99, 
----------------------
 (6): 7 
def=
use=
In=99, 100, 
Out=99, 100, 
----------------------
 (7): 8 
def=138, 
use=99, 
In=100, 99, 
Out=138, 100, 99, 
----------------------
 (8): 9 
def=137, 
use=138, 
In=99, 100, 138, 
Out=137, 99, 100, 
----------------------
 (9): 10 
def=139, 
use=137, 
In=100, 99, 137, 
Out=100, 139, 99, 
----------------------
 (10): 11 
def=140, 
use=100, 
In=99, 139, 100, 
Out=140, 99, 139, 100, 
----------------------
 (11): 12 
def=101, 
use=139, 99, 140, 
In=100, 139, 99, 140, 
Out=101, 100, 99, 
----------------------
 (12): 13 
def=134, 
use=101, 
In=99, 100, 101, 
Out=99, 134, 100, 
----------------------
 (13): 14 
def=142, 
use=99, 
In=100, 134, 99, 
Out=142, 100, 134, 99, 
----------------------
 (14): 15 
def=141, 
use=142, 
In=99, 134, 100, 142, 
Out=141, 99, 134, 100, 
----------------------
 (15): 16 
def=143, 
use=141, 
In=100, 134, 99, 141, 
Out=100, 134, 143, 99, 
----------------------
 (16): 17 
def=144, 
use=100, 
In=99, 143, 134, 100, 
Out=144, 99, 143, 100, 134, 
----------------------
 (17): 18 
def=102, 
use=143, 99, 144, 
In=134, 100, 143, 99, 144, 
Out=102, 134, 100, 
----------------------
 (18): 19 
def=145, 
use=134, 102, 
In=100, 134, 102, 
Out=145, 100, 
----------------------
 (19): 20 
def=
use=145, 
In=100, 145, 
Out=100, 
----------------------
 (20): 21 
def=
use=
In=100, 
Out=100, 
----------------------
 (21): 
def=
use=100, 
In=100, 
Out=

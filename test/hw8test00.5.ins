
------For function ----- main

------Basic Block Graph---------
C7 (0): 
------~Final traced AS instructions ---------
define i64 @main() {
C7:
%115 = call i64* @malloc(i64 16)
%114 = ptrtoint i64* %115 to i64
%100 = add i64 %114, 8
%116 = sub i64 %100, -8
%117 = inttoptr i64 %116 to i64*
store i64 1, i64* %117, align 8
%118 = inttoptr i64 %100 to i64*
store i64 0, i64* %118, align 8
%101 = add i64 0, 0
%106 = call double @getfloat()
%119 = add i64 %106, 1
%107 = mul i64 %119, 8
%120 = call i64* @malloc(i64 %107)
%105 = ptrtoint i64* %120 to i64
%121 = inttoptr i64 %105 to i64*
store i64 %106, i64* %121, align 8
%105 = add i64 %105, 8
%100 = add i64 %105, 0
%122 = sub i64 %100, 8
%123 = inttoptr i64 %122 to i64*
%102 = load i64, i64* %123, align 8
%124 = call i64* @malloc(i64 16)
%108 = ptrtoint i64* %124 to i64
%125 = inttoptr i64 %108 to i64*
store i64 2, i64* %125, align 8
%126 = inttoptr i64 %108 to i64*
%127 = ptrtoint i64* @c1$m1 to i64
store i64 %127, i64* %126, align 8
%103 = add i64 %108, 0
%128 = call i64* @malloc(i64 16)
%109 = ptrtoint i64* %128 to i64
%129 = inttoptr i64 %109 to i64*
store i64 2, i64* %129, align 8
%130 = inttoptr i64 %109 to i64*
%131 = ptrtoint i64* @c2$m1 to i64
store i64 %131, i64* %130, align 8
%104 = add i64 %109, 0
L0:
%132 = icmp slt i64 %101, %102
br i1 %132, label %L5, label %L1
L1:
%133 = inttoptr i64 %100 to i64*
call void @putarray(i64 %102, i64* %133)
ret i64 %102
L5:
%136 = sdiv i64 %101, 2
%135 = mul i64 %136, 2
%134 = icmp eq i64 %135, %101
br i1 %134, label %L2, label %L3
L3:
%137 = mul i64 %101, 8
%112 = add i64 %100, %137
%138 = inttoptr i64 %104 to i64*
%110 = call i64 %138(i64 %104, i64 %101)
%139 = inttoptr i64 %112 to i64*
store i64 %110, i64* %139, align 8
L4:
%101 = add i64 %101, 1
br label %L0
L2:
%140 = mul i64 %101, 8
%113 = add i64 %100, %140
%141 = inttoptr i64 %103 to i64*
%111 = call i64 %141(i64 %103, i64 %101)
%142 = inttoptr i64 %113 to i64*
store i64 %111, i64* %142, align 8
br label %L4
C6:
ret i64 -1
}


------For function ----- c2$m1

------Basic Block Graph---------
C9 (0): 
------~Final traced AS instructions ---------
define i64 @c2$m1(i64 %99, i64 %100) {
C9:
%187 = inttoptr i64 %99 to i64*
%186 = load i64, i64* %187, align 8
%185 = add i64 %186, %100
ret i64 %185
C8:
ret i64 -1
}


------For function ----- c1$m1

------Basic Block Graph---------
C11 (0): 
------~Final traced AS instructions ---------
define i64 @c1$m1(i64 %99, i64 %100) {
C11:
%189 = inttoptr i64 %99 to i64*
%188 = load i64, i64* %189, align 8
ret i64 %188
C10:
ret i64 -1
}


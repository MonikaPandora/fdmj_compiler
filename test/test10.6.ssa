define i64 @main() {
C4:
%r124 = add i64 0, 0
%r125 = call i64* @malloc(i64 128)
%r126 = ptrtoint i64* %r125 to i64
%r127 = inttoptr i64 %r126 to i64*
store i64 15, i64* %r127, align 8
%r128 = add i64 %r126, 8
%r129 = add i64 %r128, 0
%r130 = add i64 %r129, 0
%r131 = inttoptr i64 %r130 to i64*
store i64 1, i64* %r131, align 8
br label %L0
L0:
%r132 = phi i64 [%r137, %L2], [%r124, %C4]
%r133 = icmp slt i64 %r132, 10
br i1 %r133, label %L2, label %L1
L1:
%r134 = add i64 %r129, 80
%r135 = inttoptr i64 %r134 to i64*
%r136 = load i64, i64* %r135, align 8
call void @putint(i64 %r136)
call void @putch(i64 10)
ret i64 0
L2:
%r137 = add i64 %r132, 1
%r138 = mul i64 %r137, 8
%r139 = add i64 %r129, %r138
%r140 = inttoptr i64 %r139 to i64*
%r141 = sub i64 %r137, 1
%r142 = mul i64 %r141, 8
%r143 = add i64 %r129, %r142
%r144 = inttoptr i64 %r143 to i64*
%r145 = load i64, i64* %r144, align 8
%r146 = mul i64 4, %r137
%r147 = sub i64 %r146, 2
%r148 = mul i64 %r145, %r147
%r149 = add i64 %r137, 1
%r150 = sdiv i64 %r148, %r149
store i64 %r150, i64* %r140, align 8
br label %L0
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)

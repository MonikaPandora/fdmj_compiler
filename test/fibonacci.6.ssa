define i64 @main() {
C11:
%r116 = add i64 0, 0
call void @putch(i64 69)
call void @putch(i64 110)
call void @putch(i64 116)
call void @putch(i64 101)
call void @putch(i64 114)
call void @putch(i64 32)
call void @putch(i64 116)
call void @putch(i64 104)
call void @putch(i64 101)
call void @putch(i64 32)
call void @putch(i64 110)
call void @putch(i64 117)
call void @putch(i64 109)
call void @putch(i64 98)
call void @putch(i64 101)
call void @putch(i64 114)
call void @putch(i64 32)
call void @putch(i64 111)
call void @putch(i64 102)
call void @putch(i64 32)
call void @putch(i64 116)
call void @putch(i64 101)
call void @putch(i64 114)
call void @putch(i64 109)
call void @putch(i64 58)
%s117 = call double @getfloat()
%r118 = fptosi double %s117 to i64
%r119 = icmp slt i64 %r118, 0
br i1 %r119, label %L5, label %L4
L4:
%r120 = icmp sgt i64 %r118, 47
br i1 %r120, label %L5, label %L6
L6:
%r121 = call i64* @malloc(i64 8)
%r122 = ptrtoint i64* %r121 to i64
%r123 = inttoptr i64 %r122 to i64*
%r124 = ptrtoint i64* @fib$f to i64
store i64 %r124, i64* %r123, align 8
%r125 = add i64 %r122, 0
br label %L7
L7:
%r126 = phi i64 [%r132, %L9], [%r116, %L6]
%r127 = icmp slt i64 %r126, %r118
br i1 %r127, label %L9, label %L8
L8:
call void @putch(i64 10)
ret i64 0
L5:
%r133 = add 1, 0
ret i64 %r133
L9:
%r128 = inttoptr i64 %r125 to i64*
%r129 = load i64, i64* %r128, align 8
%r130 = inttoptr i64 %r129 to i64*
%r131 = call i64 %r130(i64 %r125, i64 %r126)
call void @putint(i64 %r131)
%r132 = add i64 %r126, 1
call void @putch(i64 32)
br label %L7
}

define i64 @fib$f(i64 %r99, i64 %r100) {
C14:
%r146 = icmp eq i64 %r100, 0
br i1 %r146, label %L1, label %L0
L0:
%r147 = icmp eq i64 %r100, 1
br i1 %r147, label %L1, label %L2
L2:
%r148 = inttoptr i64 %r99 to i64*
%r149 = load i64, i64* %r148, align 8
%r150 = inttoptr i64 %r149 to i64*
%r151 = sub i64 %r100, 1
%r152 = call i64 %r150(i64 %r99, i64 %r151)
%r153 = add i64 %r152, 0
%r154 = inttoptr i64 %r99 to i64*
%r155 = load i64, i64* %r154, align 8
%r156 = inttoptr i64 %r155 to i64*
%r157 = sub i64 %r100, 2
%r158 = call i64 %r156(i64 %r99, i64 %r157)
%r159 = add i64 %r153, %r158
ret i64 %r159
L1:
ret i64 %r100
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)

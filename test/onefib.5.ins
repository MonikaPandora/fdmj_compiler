
------For function ----- main

------Basic Block Graph---------
C5 (0): 
------~Final traced LLVM instructions ---------
define i64 @main() {
C5:
%r100 = add i64 13, 0
%r104 = call i64* @malloc(i64 8)
%r101 = ptrtoint i64* %r104 to i64
%r105 = inttoptr i64 %r101 to i64*
%r106 = ptrtoint i64* @fib$f to i64
store i64 %r106, i64* %r105, align 8
%r102 = add i64 %r101, 0
%r108 = inttoptr i64 %r102 to i64*
%r107 = load i64, i64* %r108, align 8
%r109 = inttoptr i64 %r107 to i64*
%r103 = call i64 %r109(i64 %r102, i64 %r100)
call void @putint(i64 %r103)
call void @putch(i64 10)
ret i64 0
}

------Flow Graph------
[         C5:; d: s: ]  (0): 1 
[%r100 = add i64 13, 0; d: 100; s: ]  (1): 2 
[%r104 = call i64* @malloc(i64 8); d: 104; s: ]  (2): 3 
[%r101 = ptrtoint i64* %r104 to i64; d: 101; s: 104]  (3): 4 
[%r105 = inttoptr i64 %r101 to i64*; d: 105; s: 101]  (4): 5 
[%r106 = ptrtoint i64* @fib$f to i64; d: 106; s: ]  (5): 6 
[store i64 %r106, i64* %r105, align 8; d: s: 106, 105]  (6): 7 
[%r102 = add i64 %r101, 0; d: 102; s: 101]  (7): 8 
[%r108 = inttoptr i64 %r102 to i64*; d: 108; s: 102]  (8): 9 
[%r107 = load i64, i64* %r108, align 8; d: 107; s: 108]  (9): 10 
[%r109 = inttoptr i64 %r107 to i64*; d: 109; s: 107]  (10): 11 
[%r103 = call i64 %r109(i64 %r102, i64 %r100); d: 103; s: 109, 102, 100]  (11): 12 
[call void @putint(i64 %r103); d: s: 103]  (12): 13 
[call void @putch(i64 10); d: s: ]  (13): 14 
[   ret i64 0; d: s: ]  (14): 

/* ------Liveness Graph------*/
Number of iterations=21
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=100, 
use=
In=
Out=100, 
----------------------
 (2): 3 
def=104, 
use=
In=100, 
Out=104, 100, 
----------------------
 (3): 4 
def=101, 
use=104, 
In=100, 104, 
Out=101, 100, 
----------------------
 (4): 5 
def=105, 
use=101, 
In=100, 101, 
Out=101, 100, 105, 
----------------------
 (5): 6 
def=106, 
use=
In=105, 100, 101, 
Out=105, 106, 100, 101, 
----------------------
 (6): 7 
def=
use=106, 105, 
In=101, 100, 106, 105, 
Out=101, 100, 
----------------------
 (7): 8 
def=102, 
use=101, 
In=100, 101, 
Out=102, 100, 
----------------------
 (8): 9 
def=108, 
use=102, 
In=100, 102, 
Out=108, 100, 102, 
----------------------
 (9): 10 
def=107, 
use=108, 
In=102, 100, 108, 
Out=107, 102, 100, 
----------------------
 (10): 11 
def=109, 
use=107, 
In=100, 102, 107, 
Out=100, 102, 109, 
----------------------
 (11): 12 
def=103, 
use=109, 102, 100, 
In=109, 102, 100, 
Out=103, 
----------------------
 (12): 13 
def=
use=103, 
In=103, 
Out=
----------------------
 (13): 14 
def=
use=
In=
Out=
----------------------
 (14): 
def=
use=
In=
Out=

------For function ----- fib$f

------Basic Block Graph---------
C8 (0): 1 3 
L0 (1): 2 3 
L2 (2): 
L1 (3): 
------~Final traced LLVM instructions ---------
define i64 @fib$f(i64 %r99, i64 %r100) {
C8:
%r121 = icmp eq i64 %r100, 0
br i1 %r121, label %L1, label %L0
L0:
%r122 = icmp eq i64 %r100, 1
br i1 %r122, label %L1, label %L2
L2:
%r124 = inttoptr i64 %r99 to i64*
%r123 = load i64, i64* %r124, align 8
%r125 = inttoptr i64 %r123 to i64*
%r126 = sub i64 %r100, 1
%r101 = call i64 %r125(i64 %r99, i64 %r126)
%r120 = add i64 %r101, 0
%r128 = inttoptr i64 %r99 to i64*
%r127 = load i64, i64* %r128, align 8
%r129 = inttoptr i64 %r127 to i64*
%r130 = sub i64 %r100, 2
%r102 = call i64 %r129(i64 %r99, i64 %r130)
%r131 = add i64 %r120, %r102
ret i64 %r131
L1:
ret i64 %r100
}

------Flow Graph------
[         C8:; d: s: ]  (0): 1 
[%r121 = icmp eq i64 %r100, 0; d: 121; s: 100]  (1): 2 
[br i1 %r121, label %L1, label %L0; d: s: 121]  (2): 3 20 
[         L0:; d: s: ]  (3): 4 
[%r122 = icmp eq i64 %r100, 1; d: 122; s: 100]  (4): 5 
[br i1 %r122, label %L1, label %L2; d: s: 122]  (5): 6 20 
[         L2:; d: s: ]  (6): 7 
[%r124 = inttoptr i64 %r99 to i64*; d: 124; s: 99]  (7): 8 
[%r123 = load i64, i64* %r124, align 8; d: 123; s: 124]  (8): 9 
[%r125 = inttoptr i64 %r123 to i64*; d: 125; s: 123]  (9): 10 
[%r126 = sub i64 %r100, 1; d: 126; s: 100]  (10): 11 
[%r101 = call i64 %r125(i64 %r99, i64 %r126); d: 101; s: 125, 99, 126]  (11): 12 
[%r120 = add i64 %r101, 0; d: 120; s: 101]  (12): 13 
[%r128 = inttoptr i64 %r99 to i64*; d: 128; s: 99]  (13): 14 
[%r127 = load i64, i64* %r128, align 8; d: 127; s: 128]  (14): 15 
[%r129 = inttoptr i64 %r127 to i64*; d: 129; s: 127]  (15): 16 
[%r130 = sub i64 %r100, 2; d: 130; s: 100]  (16): 17 
[%r102 = call i64 %r129(i64 %r99, i64 %r130); d: 102; s: 129, 99, 130]  (17): 18 
[%r131 = add i64 %r120, %r102; d: 131; s: 120, 102]  (18): 19 
[ret i64 %r131; d: s: 131]  (19): 20 
[         L1:; d: s: ]  (20): 21 
[ret i64 %r100; d: s: 100]  (21): 

/* ------Liveness Graph------*/
Number of iterations=37
----------------------
 (0): 1 
def=
use=
In=100, 99, 
Out=100, 99, 
----------------------
 (1): 2 
def=121, 
use=100, 
In=99, 100, 
Out=121, 100, 99, 
----------------------
 (2): 3 20 
def=
use=121, 
In=99, 100, 121, 
Out=99, 100, 
----------------------
 (3): 4 
def=
use=
In=100, 99, 
Out=100, 99, 
----------------------
 (4): 5 
def=122, 
use=100, 
In=99, 100, 
Out=122, 99, 100, 
----------------------
 (5): 6 20 
def=
use=122, 
In=100, 99, 122, 
Out=100, 99, 
----------------------
 (6): 7 
def=
use=
In=99, 100, 
Out=99, 100, 
----------------------
 (7): 8 
def=124, 
use=99, 
In=100, 99, 
Out=124, 100, 99, 
----------------------
 (8): 9 
def=123, 
use=124, 
In=99, 100, 124, 
Out=123, 99, 100, 
----------------------
 (9): 10 
def=125, 
use=123, 
In=100, 99, 123, 
Out=100, 125, 99, 
----------------------
 (10): 11 
def=126, 
use=100, 
In=99, 125, 100, 
Out=126, 99, 125, 100, 
----------------------
 (11): 12 
def=101, 
use=125, 99, 126, 
In=100, 125, 99, 126, 
Out=101, 100, 99, 
----------------------
 (12): 13 
def=120, 
use=101, 
In=99, 100, 101, 
Out=99, 120, 100, 
----------------------
 (13): 14 
def=128, 
use=99, 
In=100, 120, 99, 
Out=128, 100, 120, 99, 
----------------------
 (14): 15 
def=127, 
use=128, 
In=99, 120, 100, 128, 
Out=127, 99, 120, 100, 
----------------------
 (15): 16 
def=129, 
use=127, 
In=100, 120, 99, 127, 
Out=100, 120, 129, 99, 
----------------------
 (16): 17 
def=130, 
use=100, 
In=99, 129, 120, 100, 
Out=130, 99, 129, 100, 120, 
----------------------
 (17): 18 
def=102, 
use=129, 99, 130, 
In=120, 100, 129, 99, 130, 
Out=102, 120, 100, 
----------------------
 (18): 19 
def=131, 
use=120, 102, 
In=100, 120, 102, 
Out=131, 100, 
----------------------
 (19): 20 
def=
use=131, 
In=100, 131, 
Out=100, 
----------------------
 (20): 21 
def=
use=
In=100, 
Out=100, 
----------------------
 (21): 
def=
use=100, 
In=100, 
Out=

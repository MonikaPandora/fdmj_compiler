define i64 @main() {
C7:
%r148 = call i64* @malloc(i64 16)
%r149 = ptrtoint i64* %r148 to i64
%r150 = add i64 %r149, 8
%r151 = sub i64 %r150, 8
%r152 = inttoptr i64 %r151 to i64*
store i64 1, i64* %r152, align 8
%r153 = inttoptr i64 %r150 to i64*
store i64 0, i64* %r153, align 8
%r154 = add i64 0, 0
%s155 = call double @getfloat()
%r156 = fptosi double %s155 to i64
%r157 = add i64 %r156, 1
%r158 = mul i64 %r157, 8
%r159 = call i64* @malloc(i64 %r158)
%r160 = ptrtoint i64* %r159 to i64
%r161 = inttoptr i64 %r160 to i64*
store i64 %r156, i64* %r161, align 8
%r162 = add i64 %r160, 8
%r163 = add i64 %r162, 0
%r164 = sub i64 %r163, 8
%r165 = inttoptr i64 %r164 to i64*
%r166 = load i64, i64* %r165, align 8
%r167 = call i64* @malloc(i64 16)
%r168 = ptrtoint i64* %r167 to i64
%r169 = inttoptr i64 %r168 to i64*
store i64 2, i64* %r169, align 8
%r170 = inttoptr i64 %r168 to i64*
%r171 = ptrtoint i64* @c1$m1 to i64
store i64 %r171, i64* %r170, align 8
%r172 = add i64 %r168, 0
%r173 = call i64* @malloc(i64 16)
%r174 = ptrtoint i64* %r173 to i64
%r175 = inttoptr i64 %r174 to i64*
store i64 2, i64* %r175, align 8
%r176 = inttoptr i64 %r174 to i64*
%r177 = ptrtoint i64* @c2$m1 to i64
store i64 %r177, i64* %r176, align 8
%r178 = add i64 %r174, 0
br label %L0
L0:
%r179 = phi i64 [%r192, %L4], [%r154, %C7]
%r180 = icmp slt i64 %r179, %r166
br i1 %r180, label %L5, label %L1
L1:
%r181 = inttoptr i64 %r163 to i64*
call void @putarray(i64 %r166, i64* %r181)
ret i64 %r166
L5:
%r182 = sdiv i64 %r179, 2
%r183 = mul i64 %r182, 2
%r184 = icmp eq i64 %r183, %r179
br i1 %r184, label %L2, label %L3
L3:
%r185 = mul i64 %r179, 8
%r186 = add i64 %r163, %r185
%r187 = inttoptr i64 %r178 to i64*
%r188 = load i64, i64* %r187, align 8
%r189 = inttoptr i64 %r188 to i64*
%r190 = call i64 %r189(i64 %r178, i64 %r179)
%r191 = inttoptr i64 %r186 to i64*
store i64 %r190, i64* %r191, align 8
br label %L4
L4:
%r192 = add i64 %r179, 1
br label %L0
L2:
%r193 = mul i64 %r179, 8
%r194 = add i64 %r163, %r193
%r195 = inttoptr i64 %r172 to i64*
%r196 = load i64, i64* %r195, align 8
%r197 = inttoptr i64 %r196 to i64*
%r198 = call i64 %r197(i64 %r172, i64 %r179)
%r199 = inttoptr i64 %r194 to i64*
store i64 %r198, i64* %r199, align 8
br label %L4
}

define i64 @c2$m1(i64 %r99, i64 %r100) {
C10:
%r203 = inttoptr i64 %r99 to i64*
%r204 = load i64, i64* %r203, align 8
%r205 = add i64 %r204, %r100
ret i64 %r205
}

define i64 @c1$m1(i64 %r99, i64 %r100) {
C13:
%r208 = inttoptr i64 %r99 to i64*
%r209 = load i64, i64* %r208, align 8
ret i64 %r209
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)

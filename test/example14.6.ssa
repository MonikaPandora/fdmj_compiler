define i64 @main() {
C4:
%r111 = call i64* @malloc(i64 8)
%r112 = ptrtoint i64* %r111 to i64
%r113 = inttoptr i64 %r112 to i64*
%r114 = ptrtoint i64* @c$m to i64
store i64 %r114, i64* %r113, align 8
%r115 = add i64 %r112, 0
%r116 = inttoptr i64 %r115 to i64*
%r117 = load i64, i64* %r116, align 8
%r118 = inttoptr i64 %r117 to i64*
%r119 = add i64 1, 0
%s120 = call double %r118(i64 %r115, i64 %r119)
%r121 = fptosi double %s120 to i64
ret i64 %r121
}

define i64 @c1$m1(i64 %r99, double %s100, i64 %r101) {
C7:
%s132 = sitofp i64 %r101 to double
%r133 = fcmp ogt double %s100, %s132
br i1 %r133, label %L0, label %L1
L1:
%r134 = add i64 0, 0
br label %L2
L2:
%r135 = phi i64 [%r148, %L0], [%r134, %L1]
%r136 = add i64 %r135, 0
%r137 = call i64* @malloc(i64 8)
%r138 = ptrtoint i64* %r137 to i64
%r139 = inttoptr i64 %r138 to i64*
%r140 = ptrtoint i64* @c$m to i64
store i64 %r140, i64* %r139, align 8
%r141 = add i64 %r138, 0
%r142 = inttoptr i64 %r141 to i64*
%r143 = load i64, i64* %r142, align 8
%r144 = inttoptr i64 %r143 to i64*
%r145 = add i64 1, 0
%s146 = call double %r144(i64 %r141, i64 %r145)
%r147 = fptosi double %s146 to i64
ret i64 %r147
L0:
%r148 = add i64 1, 0
br label %L2
}

define double @c$m(i64 %r99, double %s100) {
C10:
ret double %s100
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)

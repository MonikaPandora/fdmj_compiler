define i64 @main() {
C20:
%r112 = add i64 1, 0
%r113 = add i64 3, 0
br label %L0
L0:
br label %L1
L1:
br label %L3
L3:
%r114 = phi i64 [%r129, %L12], [%r128, %L15], [%r112, %L1]
%r115 = phi i64 [%r125, %L12], [%r125, %L15], [%r113, %L1]
%r116 = icmp slt i64 %r114, 10
br i1 %r116, label %L16, label %L4
L4:
%r117 = phi i64 [%r125, %L14], [%r115, %L3]
br label %L17
L17:
%r118 = sub i64 %r114, 8
%r119 = icmp ne i64 %r118, 0
br i1 %r119, label %L17, label %L18
L18:
call void @putch(i64 10)
ret i64 0
L16:
%r120 = icmp slt i64 %r114, 4
br i1 %r120, label %L6, label %L5
L5:
%r121 = icmp sgt i64 %r114, 7
br i1 %r121, label %L6, label %L8
L8:
%r122 = add i64 1, %r115
br label %L9
L9:
%r123 = phi i64 [%r132, %L7], [%r122, %L8]
%r124 = icmp eq i64 %r114, 5
br i1 %r124, label %L10, label %L11
L11:
%r125 = phi i64 [%r130, %L10], [%r123, %L9]
%r126 = icmp eq i64 %r114, 3
br i1 %r126, label %L12, label %L13
L13:
%r127 = icmp eq i64 %r114, 8
br i1 %r127, label %L14, label %L15
L15:
call void @putint(i64 %r114)
call void @putch(i64 32)
call void @putint(i64 %r125)
call void @putch(i64 10)
%r128 = add i64 %r114, 1
br label %L3
L6:
%r131 = icmp eq i64 %r114, 3
br i1 %r131, label %L8, label %L7
L7:
%r132 = mul i64 %r115, 3
br label %L9
L10:
%r130 = add 1, 0
br label %L11
L12:
%r129 = add i64 %r114, 1
br label %L3
L14:
br label %L4
}

declare void @starttime()
declare void @stoptime()
declare i64* @malloc(i64)
declare void @putch(i64)
declare void @putint(i64)
declare void @putfloat(double)
declare i64 @getint()
declare float @getfloat()
declare i64* @getarray(i64)
declare i64 @getch(i64)
declare i64* @getfarray(i64)
declare void @putarray(i64, i64*)
declare void @putfarray(i64, i64*)

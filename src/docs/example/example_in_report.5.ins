
------For function ----- main

------Basic Block Graph---------
C7 (0): 1 5 
L1 (1): 2 
L2 (2): 3 
L3 (3): 4 6 
L4 (4): 
L0 (5): 2 
L5 (6): 3 
------~Final traced LLVM instructions ---------
define i64 @main() {
C7:
%r100 = add i64 0, 0
%r101 = add i64 1, 0
%r102 = add i64 2, 0
%r103 = add i64 3, 0
%r104 = add i64 4, 0
%r105 = add i64 5, 0
%r106 = add i64 6, 0
%r107 = add i64 7, 0
%r115 = call i64* @malloc(i64 16)
%r110 = ptrtoint i64* %r115 to i64
%r116 = add i64 %r110, 8
%r117 = inttoptr i64 %r116 to i64*
%s118 = fadd double 1.000000, 0.0
store double %s118, i64* %r117, align 8
%r119 = inttoptr i64 %r110 to i64*
%r120 = add i64 0, 0
store i64 %r120, i64* %r119, align 8
%r108 = add i64 %r110, 0
%r121 = call i64* @malloc(i64 32)
%r111 = ptrtoint i64* %r121 to i64
%r122 = inttoptr i64 %r111 to i64*
%r123 = add i64 0, 0
store i64 %r123, i64* %r122, align 8
%r124 = add i64 %r111, 8
%r125 = inttoptr i64 %r124 to i64*
%s126 = fadd double 1.000000, 0.0
store double %s126, i64* %r125, align 8
%r127 = call i64* @malloc(i64 32)
%r114 = ptrtoint i64* %r127 to i64
%r112 = add i64 %r114, 8
%r128 = sub i64 %r112, 8
%r129 = inttoptr i64 %r128 to i64*
%r130 = add i64 3, 0
store i64 %r130, i64* %r129, align 8
%r131 = inttoptr i64 %r112 to i64*
%r132 = add i64 1, 0
store i64 %r132, i64* %r131, align 8
%r133 = add i64 %r112, 8
%r134 = inttoptr i64 %r133 to i64*
%r135 = add i64 2, 0
store i64 %r135, i64* %r134, align 8
%r136 = add i64 %r112, 16
%r137 = inttoptr i64 %r136 to i64*
%r138 = add i64 3, 0
store i64 %r138, i64* %r137, align 8
%r139 = add i64 %r111, 16
%r140 = inttoptr i64 %r139 to i64*
store i64 %r112, i64* %r140, align 8
%r141 = add i64 %r111, 24
%r142 = inttoptr i64 %r141 to i64*
%r143 = ptrtoint i64* @derived$b to i64
store i64 %r143, i64* %r142, align 8
%r109 = add i64 %r111, 0
%r146 = inttoptr i64 %r108 to i64*
%r145 = load i64, i64* %r146, align 8
%r148 = inttoptr i64 %r109 to i64*
%r147 = load i64, i64* %r148, align 8
%r144 = icmp eq i64 %r145, %r147
br i1 %r144, label %L0, label %L1
L1:
call void @putint(i64 0)
br label %L2
L2:
call void @putch(i64 10)
br label %L3
L3:
%r153 = add i64 %r109, 16
%r154 = inttoptr i64 %r153 to i64*
%r152 = load i64, i64* %r154, align 8
%r151 = sub i64 %r152, 8
%r155 = inttoptr i64 %r151 to i64*
%r150 = load i64, i64* %r155, align 8
%r149 = icmp slt i64 %r100, %r150
br i1 %r149, label %L5, label %L4
L4:
call void @putch(i64 10)
%r157 = add i64 %r109, 24
%r158 = inttoptr i64 %r157 to i64*
%r156 = load i64, i64* %r158, align 8
%r159 = inttoptr i64 %r156 to i64*
%r113 = call i64 %r159(i64 %r109)
call void @putint(i64 %r113)
call void @putch(i64 10)
call void @putint(i64 %r101)
call void @putch(i64 10)
call void @putint(i64 %r102)
call void @putch(i64 10)
call void @putint(i64 %r103)
call void @putch(i64 10)
call void @putint(i64 %r104)
call void @putch(i64 10)
call void @putint(i64 %r105)
call void @putch(i64 10)
call void @putint(i64 %r106)
call void @putch(i64 10)
call void @putint(i64 %r107)
call void @putch(i64 10)
ret i64 0
L0:
call void @putint(i64 1)
br label %L2
L5:
%r163 = add i64 %r109, 16
%r164 = inttoptr i64 %r163 to i64*
%r162 = load i64, i64* %r164, align 8
%r165 = mul i64 %r100, 8
%r161 = add i64 %r162, %r165
%r166 = inttoptr i64 %r161 to i64*
%r160 = load i64, i64* %r166, align 8
call void @putint(i64 %r160)
call void @putint(i64 32)
%r100 = add i64 %r100, 1
br label %L3
}

------Flow Graph------
[         C7:; d: s: ]  (0): 1 
[%r100 = add i64 0, 0; d: 100; s: ]  (1): 2 
[%r101 = add i64 1, 0; d: 101; s: ]  (2): 3 
[%r102 = add i64 2, 0; d: 102; s: ]  (3): 4 
[%r103 = add i64 3, 0; d: 103; s: ]  (4): 5 
[%r104 = add i64 4, 0; d: 104; s: ]  (5): 6 
[%r105 = add i64 5, 0; d: 105; s: ]  (6): 7 
[%r106 = add i64 6, 0; d: 106; s: ]  (7): 8 
[%r107 = add i64 7, 0; d: 107; s: ]  (8): 9 
[%r115 = call i64* @malloc(i64 16); d: 115; s: ]  (9): 10 
[%r110 = ptrtoint i64* %r115 to i64; d: 110; s: 115]  (10): 11 
[%r116 = add i64 %r110, 8; d: 116; s: 110]  (11): 12 
[%r117 = inttoptr i64 %r116 to i64*; d: 117; s: 116]  (12): 13 
[%s118 = fadd double 1.000000, 0.0; d: 118; s: ]  (13): 14 
[store double %s118, i64* %r117, align 8; d: s: 118, 117]  (14): 15 
[%r119 = inttoptr i64 %r110 to i64*; d: 119; s: 110]  (15): 16 
[%r120 = add i64 0, 0; d: 120; s: ]  (16): 17 
[store i64 %r120, i64* %r119, align 8; d: s: 120, 119]  (17): 18 
[%r108 = add i64 %r110, 0; d: 108; s: 110]  (18): 19 
[%r121 = call i64* @malloc(i64 32); d: 121; s: ]  (19): 20 
[%r111 = ptrtoint i64* %r121 to i64; d: 111; s: 121]  (20): 21 
[%r122 = inttoptr i64 %r111 to i64*; d: 122; s: 111]  (21): 22 
[%r123 = add i64 0, 0; d: 123; s: ]  (22): 23 
[store i64 %r123, i64* %r122, align 8; d: s: 123, 122]  (23): 24 
[%r124 = add i64 %r111, 8; d: 124; s: 111]  (24): 25 
[%r125 = inttoptr i64 %r124 to i64*; d: 125; s: 124]  (25): 26 
[%s126 = fadd double 1.000000, 0.0; d: 126; s: ]  (26): 27 
[store double %s126, i64* %r125, align 8; d: s: 126, 125]  (27): 28 
[%r127 = call i64* @malloc(i64 32); d: 127; s: ]  (28): 29 
[%r114 = ptrtoint i64* %r127 to i64; d: 114; s: 127]  (29): 30 
[%r112 = add i64 %r114, 8; d: 112; s: 114]  (30): 31 
[%r128 = sub i64 %r112, 8; d: 128; s: 112]  (31): 32 
[%r129 = inttoptr i64 %r128 to i64*; d: 129; s: 128]  (32): 33 
[%r130 = add i64 3, 0; d: 130; s: ]  (33): 34 
[store i64 %r130, i64* %r129, align 8; d: s: 130, 129]  (34): 35 
[%r131 = inttoptr i64 %r112 to i64*; d: 131; s: 112]  (35): 36 
[%r132 = add i64 1, 0; d: 132; s: ]  (36): 37 
[store i64 %r132, i64* %r131, align 8; d: s: 132, 131]  (37): 38 
[%r133 = add i64 %r112, 8; d: 133; s: 112]  (38): 39 
[%r134 = inttoptr i64 %r133 to i64*; d: 134; s: 133]  (39): 40 
[%r135 = add i64 2, 0; d: 135; s: ]  (40): 41 
[store i64 %r135, i64* %r134, align 8; d: s: 135, 134]  (41): 42 
[%r136 = add i64 %r112, 16; d: 136; s: 112]  (42): 43 
[%r137 = inttoptr i64 %r136 to i64*; d: 137; s: 136]  (43): 44 
[%r138 = add i64 3, 0; d: 138; s: ]  (44): 45 
[store i64 %r138, i64* %r137, align 8; d: s: 138, 137]  (45): 46 
[%r139 = add i64 %r111, 16; d: 139; s: 111]  (46): 47 
[%r140 = inttoptr i64 %r139 to i64*; d: 140; s: 139]  (47): 48 
[store i64 %r112, i64* %r140, align 8; d: s: 112, 140]  (48): 49 
[%r141 = add i64 %r111, 24; d: 141; s: 111]  (49): 50 
[%r142 = inttoptr i64 %r141 to i64*; d: 142; s: 141]  (50): 51 
[%r143 = ptrtoint i64* @derived$b to i64; d: 143; s: ]  (51): 52 
[store i64 %r143, i64* %r142, align 8; d: s: 143, 142]  (52): 53 
[%r109 = add i64 %r111, 0; d: 109; s: 111]  (53): 54 
[%r146 = inttoptr i64 %r108 to i64*; d: 146; s: 108]  (54): 55 
[%r145 = load i64, i64* %r146, align 8; d: 145; s: 146]  (55): 56 
[%r148 = inttoptr i64 %r109 to i64*; d: 148; s: 109]  (56): 57 
[%r147 = load i64, i64* %r148, align 8; d: 147; s: 148]  (57): 58 
[%r144 = icmp eq i64 %r145, %r147; d: 144; s: 145, 147]  (58): 59 
[br i1 %r144, label %L0, label %L1; d: s: 144]  (59): 60 99 
[         L1:; d: s: ]  (60): 61 
[call void @putint(i64 0); d: s: ]  (61): 62 
[br label %L2; d: s: ]  (62): 63 
[         L2:; d: s: ]  (63): 64 
[call void @putch(i64 10); d: s: ]  (64): 65 
[br label %L3; d: s: ]  (65): 66 
[         L3:; d: s: ]  (66): 67 
[%r153 = add i64 %r109, 16; d: 153; s: 109]  (67): 68 
[%r154 = inttoptr i64 %r153 to i64*; d: 154; s: 153]  (68): 69 
[%r152 = load i64, i64* %r154, align 8; d: 152; s: 154]  (69): 70 
[%r151 = sub i64 %r152, 8; d: 151; s: 152]  (70): 71 
[%r155 = inttoptr i64 %r151 to i64*; d: 155; s: 151]  (71): 72 
[%r150 = load i64, i64* %r155, align 8; d: 150; s: 155]  (72): 73 
[%r149 = icmp slt i64 %r100, %r150; d: 149; s: 100, 150]  (73): 74 
[br i1 %r149, label %L5, label %L4; d: s: 149]  (74): 75 102 
[         L4:; d: s: ]  (75): 76 
[call void @putch(i64 10); d: s: ]  (76): 77 
[%r157 = add i64 %r109, 24; d: 157; s: 109]  (77): 78 
[%r158 = inttoptr i64 %r157 to i64*; d: 158; s: 157]  (78): 79 
[%r156 = load i64, i64* %r158, align 8; d: 156; s: 158]  (79): 80 
[%r159 = inttoptr i64 %r156 to i64*; d: 159; s: 156]  (80): 81 
[%r113 = call i64 %r159(i64 %r109); d: 113; s: 159, 109]  (81): 82 
[call void @putint(i64 %r113); d: s: 113]  (82): 83 
[call void @putch(i64 10); d: s: ]  (83): 84 
[call void @putint(i64 %r101); d: s: 101]  (84): 85 
[call void @putch(i64 10); d: s: ]  (85): 86 
[call void @putint(i64 %r102); d: s: 102]  (86): 87 
[call void @putch(i64 10); d: s: ]  (87): 88 
[call void @putint(i64 %r103); d: s: 103]  (88): 89 
[call void @putch(i64 10); d: s: ]  (89): 90 
[call void @putint(i64 %r104); d: s: 104]  (90): 91 
[call void @putch(i64 10); d: s: ]  (91): 92 
[call void @putint(i64 %r105); d: s: 105]  (92): 93 
[call void @putch(i64 10); d: s: ]  (93): 94 
[call void @putint(i64 %r106); d: s: 106]  (94): 95 
[call void @putch(i64 10); d: s: ]  (95): 96 
[call void @putint(i64 %r107); d: s: 107]  (96): 97 
[call void @putch(i64 10); d: s: ]  (97): 98 
[   ret i64 0; d: s: ]  (98): 99 
[         L0:; d: s: ]  (99): 100 
[call void @putint(i64 1); d: s: ]  (100): 101 
[br label %L2; d: s: ]  (101): 63 
[         L5:; d: s: ]  (102): 103 
[%r163 = add i64 %r109, 16; d: 163; s: 109]  (103): 104 
[%r164 = inttoptr i64 %r163 to i64*; d: 164; s: 163]  (104): 105 
[%r162 = load i64, i64* %r164, align 8; d: 162; s: 164]  (105): 106 
[%r165 = mul i64 %r100, 8; d: 165; s: 100]  (106): 107 
[%r161 = add i64 %r162, %r165; d: 161; s: 162, 165]  (107): 108 
[%r166 = inttoptr i64 %r161 to i64*; d: 166; s: 161]  (108): 109 
[%r160 = load i64, i64* %r166, align 8; d: 160; s: 166]  (109): 110 
[call void @putint(i64 %r160); d: s: 160]  (110): 111 
[call void @putint(i64 32); d: s: ]  (111): 112 
[%r100 = add i64 %r100, 1; d: 100; s: 100]  (112): 113 
[br label %L3; d: s: ]  (113): 66 

/* ------Liveness Graph------*/
Number of iterations=176
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=100, 
use=
In=
Out=100, 
----------------------
 (2): 3 
def=101, 
use=
In=100, 
Out=100, 101, 
----------------------
 (3): 4 
def=102, 
use=
In=101, 100, 
Out=101, 102, 100, 
----------------------
 (4): 5 
def=103, 
use=
In=100, 102, 101, 
Out=100, 103, 102, 101, 
----------------------
 (5): 6 
def=104, 
use=
In=101, 102, 103, 100, 
Out=101, 102, 103, 104, 100, 
----------------------
 (6): 7 
def=105, 
use=
In=100, 104, 103, 102, 101, 
Out=100, 105, 104, 103, 102, 101, 
----------------------
 (7): 8 
def=106, 
use=
In=101, 102, 103, 104, 105, 100, 
Out=101, 102, 103, 104, 105, 106, 100, 
----------------------
 (8): 9 
def=107, 
use=
In=100, 106, 105, 104, 103, 102, 101, 
Out=100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (9): 10 
def=115, 
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 
Out=115, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (10): 11 
def=110, 
use=115, 
In=100, 107, 106, 105, 104, 103, 102, 101, 115, 
Out=110, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (11): 12 
def=116, 
use=110, 
In=101, 102, 103, 104, 105, 106, 107, 100, 110, 
Out=116, 101, 102, 103, 104, 105, 106, 107, 100, 110, 
----------------------
 (12): 13 
def=117, 
use=116, 
In=110, 100, 107, 106, 105, 104, 103, 102, 101, 116, 
Out=110, 100, 107, 106, 105, 104, 103, 102, 101, 117, 
----------------------
 (13): 14 
def=118, 
use=
In=117, 101, 102, 103, 104, 105, 106, 107, 100, 110, 
Out=117, 118, 101, 102, 103, 104, 105, 106, 107, 100, 110, 
----------------------
 (14): 15 
def=
use=118, 117, 
In=110, 100, 107, 106, 105, 104, 103, 102, 101, 118, 117, 
Out=110, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (15): 16 
def=119, 
use=110, 
In=101, 102, 103, 104, 105, 106, 107, 100, 110, 
Out=110, 101, 102, 103, 104, 105, 106, 107, 100, 119, 
----------------------
 (16): 17 
def=120, 
use=
In=119, 100, 107, 106, 105, 104, 103, 102, 101, 110, 
Out=119, 120, 100, 107, 106, 105, 104, 103, 102, 101, 110, 
----------------------
 (17): 18 
def=
use=120, 119, 
In=110, 101, 102, 103, 104, 105, 106, 107, 100, 120, 119, 
Out=110, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (18): 19 
def=108, 
use=110, 
In=100, 107, 106, 105, 104, 103, 102, 101, 110, 
Out=100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (19): 20 
def=121, 
use=
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 
Out=121, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (20): 21 
def=111, 
use=121, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 121, 
Out=111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (21): 22 
def=122, 
use=111, 
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 
Out=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 122, 
----------------------
 (22): 23 
def=123, 
use=
In=122, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
Out=122, 123, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
----------------------
 (23): 24 
def=
use=123, 122, 
In=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 123, 122, 
Out=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (24): 25 
def=124, 
use=111, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
Out=124, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
----------------------
 (25): 26 
def=125, 
use=124, 
In=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 124, 
Out=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 125, 
----------------------
 (26): 27 
def=126, 
use=
In=125, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
Out=125, 126, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
----------------------
 (27): 28 
def=
use=126, 125, 
In=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 126, 125, 
Out=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (28): 29 
def=127, 
use=
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
Out=127, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
----------------------
 (29): 30 
def=114, 
use=127, 
In=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 127, 
Out=114, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (30): 31 
def=112, 
use=114, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 114, 
Out=112, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
----------------------
 (31): 32 
def=128, 
use=112, 
In=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 112, 
Out=128, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 112, 
----------------------
 (32): 33 
def=129, 
use=128, 
In=112, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 128, 
Out=112, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 129, 
----------------------
 (33): 34 
def=130, 
use=
In=129, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 112, 
Out=129, 130, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 112, 
----------------------
 (34): 35 
def=
use=130, 129, 
In=112, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 130, 129, 
Out=112, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 
----------------------
 (35): 36 
def=131, 
use=112, 
In=111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 112, 
Out=112, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 131, 
----------------------
 (36): 37 
def=132, 
use=
In=131, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 112, 
Out=131, 132, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 112, 
----------------------
 (37): 38 
def=
use=132, 131, 
In=112, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 132, 131, 
Out=112, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (38): 39 
def=133, 
use=112, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 112, 
Out=133, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 112, 
----------------------
 (39): 40 
def=134, 
use=133, 
In=112, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 133, 
Out=112, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 134, 
----------------------
 (40): 41 
def=135, 
use=
In=134, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 112, 
Out=134, 135, 100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 112, 
----------------------
 (41): 42 
def=
use=135, 134, 
In=112, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 135, 134, 
Out=112, 111, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (42): 43 
def=136, 
use=112, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 111, 112, 
Out=136, 100, 107, 106, 105, 104, 103, 102, 101, 108, 112, 111, 
----------------------
 (43): 44 
def=137, 
use=136, 
In=111, 112, 108, 101, 102, 103, 104, 105, 106, 107, 100, 136, 
Out=111, 112, 108, 101, 102, 103, 104, 105, 106, 107, 100, 137, 
----------------------
 (44): 45 
def=138, 
use=
In=137, 100, 107, 106, 105, 104, 103, 102, 101, 108, 112, 111, 
Out=137, 138, 100, 107, 106, 105, 104, 103, 102, 101, 108, 112, 111, 
----------------------
 (45): 46 
def=
use=138, 137, 
In=111, 112, 108, 101, 102, 103, 104, 105, 106, 107, 100, 138, 137, 
Out=111, 112, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (46): 47 
def=139, 
use=111, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 112, 111, 
Out=139, 111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 112, 
----------------------
 (47): 48 
def=140, 
use=139, 
In=112, 108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 139, 
Out=140, 112, 108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 
----------------------
 (48): 49 
def=
use=112, 140, 
In=111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 112, 140, 
Out=111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (49): 50 
def=141, 
use=111, 
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 
Out=141, 108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 
----------------------
 (50): 51 
def=142, 
use=141, 
In=111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 141, 
Out=111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 142, 
----------------------
 (51): 52 
def=143, 
use=
In=142, 108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 
Out=142, 143, 108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 
----------------------
 (52): 53 
def=
use=143, 142, 
In=111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 143, 142, 
Out=111, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (53): 54 
def=109, 
use=111, 
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 111, 
Out=108, 109, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (54): 55 
def=146, 
use=108, 
In=100, 107, 106, 105, 104, 103, 102, 101, 109, 108, 
Out=146, 100, 107, 106, 105, 104, 103, 102, 101, 109, 
----------------------
 (55): 56 
def=145, 
use=146, 
In=109, 101, 102, 103, 104, 105, 106, 107, 100, 146, 
Out=109, 145, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (56): 57 
def=148, 
use=109, 
In=100, 107, 106, 105, 104, 103, 102, 101, 145, 109, 
Out=148, 109, 100, 107, 106, 105, 104, 103, 102, 101, 145, 
----------------------
 (57): 58 
def=147, 
use=148, 
In=145, 101, 102, 103, 104, 105, 106, 107, 100, 109, 148, 
Out=147, 145, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (58): 59 
def=144, 
use=145, 147, 
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 145, 147, 
Out=144, 109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (59): 60 99 
def=
use=144, 
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 144, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (60): 61 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (61): 62 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (62): 63 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (63): 64 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (64): 65 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (65): 66 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (66): 67 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (67): 68 
def=153, 
use=109, 
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=153, 101, 102, 103, 104, 105, 106, 107, 109, 100, 
----------------------
 (68): 69 
def=154, 
use=153, 
In=100, 109, 107, 106, 105, 104, 103, 102, 101, 153, 
Out=154, 100, 109, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (69): 70 
def=152, 
use=154, 
In=101, 102, 103, 104, 105, 106, 107, 109, 100, 154, 
Out=152, 101, 102, 103, 104, 105, 106, 107, 109, 100, 
----------------------
 (70): 71 
def=151, 
use=152, 
In=100, 109, 107, 106, 105, 104, 103, 102, 101, 152, 
Out=151, 100, 109, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (71): 72 
def=155, 
use=151, 
In=101, 102, 103, 104, 105, 106, 107, 109, 100, 151, 
Out=155, 101, 102, 103, 104, 105, 106, 107, 109, 100, 
----------------------
 (72): 73 
def=150, 
use=155, 
In=100, 109, 107, 106, 105, 104, 103, 102, 101, 155, 
Out=150, 100, 109, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (73): 74 
def=149, 
use=100, 150, 
In=101, 102, 103, 104, 105, 106, 107, 109, 100, 150, 
Out=149, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (74): 75 102 
def=
use=149, 
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 149, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (75): 76 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (76): 77 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (77): 78 
def=157, 
use=109, 
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=157, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (78): 79 
def=158, 
use=157, 
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 157, 
Out=158, 109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (79): 80 
def=156, 
use=158, 
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 158, 
Out=156, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (80): 81 
def=159, 
use=156, 
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 156, 
Out=109, 159, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (81): 82 
def=113, 
use=159, 109, 
In=101, 102, 103, 104, 105, 106, 107, 100, 159, 109, 
Out=113, 101, 102, 103, 104, 105, 106, 107, 109, 100, 
----------------------
 (82): 83 
def=
use=113, 
In=100, 109, 107, 106, 105, 104, 103, 102, 101, 113, 
Out=100, 109, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (83): 84 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 109, 100, 
Out=101, 102, 103, 104, 105, 106, 107, 109, 100, 
----------------------
 (84): 85 
def=
use=101, 
In=100, 109, 107, 106, 105, 104, 103, 102, 101, 
Out=101, 100, 109, 107, 106, 105, 104, 103, 102, 
----------------------
 (85): 86 
def=
use=
In=102, 103, 104, 105, 106, 107, 109, 100, 101, 
Out=102, 103, 104, 105, 106, 107, 109, 100, 101, 
----------------------
 (86): 87 
def=
use=102, 
In=101, 100, 109, 107, 106, 105, 104, 103, 102, 
Out=101, 102, 100, 109, 107, 106, 105, 104, 103, 
----------------------
 (87): 88 
def=
use=
In=103, 104, 105, 106, 107, 109, 100, 102, 101, 
Out=103, 104, 105, 106, 107, 109, 100, 102, 101, 
----------------------
 (88): 89 
def=
use=103, 
In=101, 102, 100, 109, 107, 106, 105, 104, 103, 
Out=101, 102, 103, 100, 109, 107, 106, 105, 104, 
----------------------
 (89): 90 
def=
use=
In=104, 105, 106, 107, 109, 100, 103, 102, 101, 
Out=104, 105, 106, 107, 109, 100, 103, 102, 101, 
----------------------
 (90): 91 
def=
use=104, 
In=101, 102, 103, 100, 109, 107, 106, 105, 104, 
Out=101, 102, 103, 104, 100, 109, 107, 106, 105, 
----------------------
 (91): 92 
def=
use=
In=105, 106, 107, 109, 100, 104, 103, 102, 101, 
Out=105, 106, 107, 109, 100, 104, 103, 102, 101, 
----------------------
 (92): 93 
def=
use=105, 
In=101, 102, 103, 104, 100, 109, 107, 106, 105, 
Out=101, 102, 103, 104, 105, 100, 109, 107, 106, 
----------------------
 (93): 94 
def=
use=
In=106, 107, 109, 100, 105, 104, 103, 102, 101, 
Out=106, 107, 109, 100, 105, 104, 103, 102, 101, 
----------------------
 (94): 95 
def=
use=106, 
In=101, 102, 103, 104, 105, 100, 109, 107, 106, 
Out=101, 102, 103, 104, 105, 106, 100, 109, 107, 
----------------------
 (95): 96 
def=
use=
In=107, 109, 100, 106, 105, 104, 103, 102, 101, 
Out=107, 109, 100, 106, 105, 104, 103, 102, 101, 
----------------------
 (96): 97 
def=
use=107, 
In=101, 102, 103, 104, 105, 106, 100, 109, 107, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (97): 98 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (98): 99 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (99): 100 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (100): 101 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (101): 63 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (102): 103 
def=
use=
In=109, 107, 106, 105, 104, 103, 102, 101, 100, 
Out=109, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (103): 104 
def=163, 
use=109, 
In=100, 101, 102, 103, 104, 105, 106, 107, 109, 
Out=163, 100, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (104): 105 
def=164, 
use=163, 
In=109, 107, 106, 105, 104, 103, 102, 101, 100, 163, 
Out=164, 109, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (105): 106 
def=162, 
use=164, 
In=100, 101, 102, 103, 104, 105, 106, 107, 109, 164, 
Out=100, 101, 102, 103, 104, 105, 106, 107, 109, 162, 
----------------------
 (106): 107 
def=165, 
use=100, 
In=162, 109, 107, 106, 105, 104, 103, 102, 101, 100, 
Out=165, 162, 109, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (107): 108 
def=161, 
use=162, 165, 
In=100, 101, 102, 103, 104, 105, 106, 107, 109, 162, 165, 
Out=161, 100, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (108): 109 
def=166, 
use=161, 
In=109, 107, 106, 105, 104, 103, 102, 101, 100, 161, 
Out=166, 109, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (109): 110 
def=160, 
use=166, 
In=100, 101, 102, 103, 104, 105, 106, 107, 109, 166, 
Out=160, 100, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (110): 111 
def=
use=160, 
In=109, 107, 106, 105, 104, 103, 102, 101, 100, 160, 
Out=109, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (111): 112 
def=
use=
In=100, 101, 102, 103, 104, 105, 106, 107, 109, 
Out=100, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (112): 113 
def=100, 
use=100, 
In=109, 107, 106, 105, 104, 103, 102, 101, 100, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (113): 66 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 109, 

------For function ----- derived$b

------Basic Block Graph---------
C10 (0): 
------~Final traced LLVM instructions ---------
define i64 @derived$b(i64 %r99) {
C10:
%r239 = add i64 %r99, 16
%r240 = inttoptr i64 %r239 to i64*
%r238 = load i64, i64* %r240, align 8
%r237 = add i64 %r238, 8
%r241 = inttoptr i64 %r237 to i64*
%r236 = load i64, i64* %r241, align 8
ret i64 %r236
}

------Flow Graph------
[        C10:; d: s: ]  (0): 1 
[%r239 = add i64 %r99, 16; d: 239; s: 99]  (1): 2 
[%r240 = inttoptr i64 %r239 to i64*; d: 240; s: 239]  (2): 3 
[%r238 = load i64, i64* %r240, align 8; d: 238; s: 240]  (3): 4 
[%r237 = add i64 %r238, 8; d: 237; s: 238]  (4): 5 
[%r241 = inttoptr i64 %r237 to i64*; d: 241; s: 237]  (5): 6 
[%r236 = load i64, i64* %r241, align 8; d: 236; s: 241]  (6): 7 
[ret i64 %r236; d: s: 236]  (7): 

/* ------Liveness Graph------*/
Number of iterations=180
----------------------
 (0): 1 
def=
use=
In=99, 
Out=99, 
----------------------
 (1): 2 
def=239, 
use=99, 
In=99, 
Out=239, 
----------------------
 (2): 3 
def=240, 
use=239, 
In=239, 
Out=240, 
----------------------
 (3): 4 
def=238, 
use=240, 
In=240, 
Out=238, 
----------------------
 (4): 5 
def=237, 
use=238, 
In=238, 
Out=237, 
----------------------
 (5): 6 
def=241, 
use=237, 
In=237, 
Out=241, 
----------------------
 (6): 7 
def=236, 
use=241, 
In=241, 
Out=236, 
----------------------
 (7): 
def=
use=236, 
In=236, 
Out=


------For function ----- main

------Basic Block Graph---------
C7 (0): 1 5 
L1 (1): 2 
L2 (2): 3 
L3 (3): 4 6 
L4 (4): 
L0 (5): 2 
L5 (6): 3 
------~Final traced LLVM instructions ---------
define i64 @main() {
C7:
%r100 = add i64 0, 0
%r101 = add i64 1, 0
%r102 = add i64 2, 0
%r103 = add i64 3, 0
%r104 = add i64 4, 0
%r105 = add i64 5, 0
%r106 = add i64 6, 0
%r107 = add i64 7, 0
%r116 = call i64* @malloc(i64 24)
%r110 = ptrtoint i64* %r116 to i64
%r117 = add i64 %r110, 8
%r118 = inttoptr i64 %r117 to i64*
%s119 = fadd double 1.000000, 0.0
store double %s119, i64* %r118, align 8
%r120 = inttoptr i64 %r110 to i64*
%r121 = add i64 0, 0
store i64 %r121, i64* %r120, align 8
%r122 = add i64 %r110, 16
%r123 = inttoptr i64 %r122 to i64*
%r124 = ptrtoint i64* @base$b to i64
store i64 %r124, i64* %r123, align 8
%r108 = add i64 %r110, 0
%r125 = call i64* @malloc(i64 32)
%r111 = ptrtoint i64* %r125 to i64
%r126 = inttoptr i64 %r111 to i64*
%r127 = add i64 0, 0
store i64 %r127, i64* %r126, align 8
%r128 = add i64 %r111, 8
%r129 = inttoptr i64 %r128 to i64*
%s130 = fadd double 1.000000, 0.0
store double %s130, i64* %r129, align 8
%r131 = call i64* @malloc(i64 32)
%r115 = ptrtoint i64* %r131 to i64
%r112 = add i64 %r115, 8
%r132 = sub i64 %r112, 8
%r133 = inttoptr i64 %r132 to i64*
%r134 = add i64 3, 0
store i64 %r134, i64* %r133, align 8
%r135 = inttoptr i64 %r112 to i64*
%r136 = add i64 1, 0
store i64 %r136, i64* %r135, align 8
%r137 = add i64 %r112, 8
%r138 = inttoptr i64 %r137 to i64*
%r139 = add i64 2, 0
store i64 %r139, i64* %r138, align 8
%r140 = add i64 %r112, 16
%r141 = inttoptr i64 %r140 to i64*
%r142 = add i64 3, 0
store i64 %r142, i64* %r141, align 8
%r143 = add i64 %r111, 24
%r144 = inttoptr i64 %r143 to i64*
store i64 %r112, i64* %r144, align 8
%r145 = add i64 %r111, 16
%r146 = inttoptr i64 %r145 to i64*
%r147 = ptrtoint i64* @derived$b to i64
store i64 %r147, i64* %r146, align 8
%r109 = add i64 %r111, 0
%r150 = inttoptr i64 %r108 to i64*
%r149 = load i64, i64* %r150, align 8
%r152 = inttoptr i64 %r109 to i64*
%r151 = load i64, i64* %r152, align 8
%r148 = icmp eq i64 %r149, %r151
br i1 %r148, label %L0, label %L1
L1:
call void @putint(i64 0)
br label %L2
L2:
call void @putch(i64 10)
br label %L3
L3:
%r157 = add i64 %r109, 24
%r158 = inttoptr i64 %r157 to i64*
%r156 = load i64, i64* %r158, align 8
%r155 = sub i64 %r156, 8
%r159 = inttoptr i64 %r155 to i64*
%r154 = load i64, i64* %r159, align 8
%r153 = icmp slt i64 %r100, %r154
br i1 %r153, label %L5, label %L4
L4:
call void @putch(i64 10)
%r161 = add i64 %r108, 16
%r162 = inttoptr i64 %r161 to i64*
%r160 = load i64, i64* %r162, align 8
%r163 = inttoptr i64 %r160 to i64*
%r113 = call i64 %r163(i64 %r108)
call void @putint(i64 %r113)
call void @putch(i64 10)
%r165 = add i64 %r109, 16
%r166 = inttoptr i64 %r165 to i64*
%r164 = load i64, i64* %r166, align 8
%r167 = inttoptr i64 %r164 to i64*
%r114 = call i64 %r167(i64 %r109)
call void @putint(i64 %r114)
call void @putch(i64 10)
call void @putint(i64 %r101)
call void @putch(i64 10)
call void @putint(i64 %r102)
call void @putch(i64 10)
call void @putint(i64 %r103)
call void @putch(i64 10)
call void @putint(i64 %r104)
call void @putch(i64 10)
call void @putint(i64 %r105)
call void @putch(i64 10)
call void @putint(i64 %r106)
call void @putch(i64 10)
call void @putint(i64 %r107)
call void @putch(i64 10)
ret i64 0
L0:
call void @putint(i64 1)
br label %L2
L5:
%r171 = add i64 %r109, 24
%r172 = inttoptr i64 %r171 to i64*
%r170 = load i64, i64* %r172, align 8
%r173 = mul i64 %r100, 8
%r169 = add i64 %r170, %r173
%r174 = inttoptr i64 %r169 to i64*
%r168 = load i64, i64* %r174, align 8
call void @putint(i64 %r168)
call void @putint(i64 32)
%r100 = add i64 %r100, 1
br label %L3
}

------Flow Graph------
[         C7:; d: s: ]  (0): 1 
[%r100 = add i64 0, 0; d: 100; s: ]  (1): 2 
[%r101 = add i64 1, 0; d: 101; s: ]  (2): 3 
[%r102 = add i64 2, 0; d: 102; s: ]  (3): 4 
[%r103 = add i64 3, 0; d: 103; s: ]  (4): 5 
[%r104 = add i64 4, 0; d: 104; s: ]  (5): 6 
[%r105 = add i64 5, 0; d: 105; s: ]  (6): 7 
[%r106 = add i64 6, 0; d: 106; s: ]  (7): 8 
[%r107 = add i64 7, 0; d: 107; s: ]  (8): 9 
[%r116 = call i64* @malloc(i64 24); d: 116; s: ]  (9): 10 
[%r110 = ptrtoint i64* %r116 to i64; d: 110; s: 116]  (10): 11 
[%r117 = add i64 %r110, 8; d: 117; s: 110]  (11): 12 
[%r118 = inttoptr i64 %r117 to i64*; d: 118; s: 117]  (12): 13 
[%s119 = fadd double 1.000000, 0.0; d: 119; s: ]  (13): 14 
[store double %s119, i64* %r118, align 8; d: s: 119, 118]  (14): 15 
[%r120 = inttoptr i64 %r110 to i64*; d: 120; s: 110]  (15): 16 
[%r121 = add i64 0, 0; d: 121; s: ]  (16): 17 
[store i64 %r121, i64* %r120, align 8; d: s: 121, 120]  (17): 18 
[%r122 = add i64 %r110, 16; d: 122; s: 110]  (18): 19 
[%r123 = inttoptr i64 %r122 to i64*; d: 123; s: 122]  (19): 20 
[%r124 = ptrtoint i64* @base$b to i64; d: 124; s: ]  (20): 21 
[store i64 %r124, i64* %r123, align 8; d: s: 124, 123]  (21): 22 
[%r108 = add i64 %r110, 0; d: 108; s: 110]  (22): 23 
[%r125 = call i64* @malloc(i64 32); d: 125; s: ]  (23): 24 
[%r111 = ptrtoint i64* %r125 to i64; d: 111; s: 125]  (24): 25 
[%r126 = inttoptr i64 %r111 to i64*; d: 126; s: 111]  (25): 26 
[%r127 = add i64 0, 0; d: 127; s: ]  (26): 27 
[store i64 %r127, i64* %r126, align 8; d: s: 127, 126]  (27): 28 
[%r128 = add i64 %r111, 8; d: 128; s: 111]  (28): 29 
[%r129 = inttoptr i64 %r128 to i64*; d: 129; s: 128]  (29): 30 
[%s130 = fadd double 1.000000, 0.0; d: 130; s: ]  (30): 31 
[store double %s130, i64* %r129, align 8; d: s: 130, 129]  (31): 32 
[%r131 = call i64* @malloc(i64 32); d: 131; s: ]  (32): 33 
[%r115 = ptrtoint i64* %r131 to i64; d: 115; s: 131]  (33): 34 
[%r112 = add i64 %r115, 8; d: 112; s: 115]  (34): 35 
[%r132 = sub i64 %r112, 8; d: 132; s: 112]  (35): 36 
[%r133 = inttoptr i64 %r132 to i64*; d: 133; s: 132]  (36): 37 
[%r134 = add i64 3, 0; d: 134; s: ]  (37): 38 
[store i64 %r134, i64* %r133, align 8; d: s: 134, 133]  (38): 39 
[%r135 = inttoptr i64 %r112 to i64*; d: 135; s: 112]  (39): 40 
[%r136 = add i64 1, 0; d: 136; s: ]  (40): 41 
[store i64 %r136, i64* %r135, align 8; d: s: 136, 135]  (41): 42 
[%r137 = add i64 %r112, 8; d: 137; s: 112]  (42): 43 
[%r138 = inttoptr i64 %r137 to i64*; d: 138; s: 137]  (43): 44 
[%r139 = add i64 2, 0; d: 139; s: ]  (44): 45 
[store i64 %r139, i64* %r138, align 8; d: s: 139, 138]  (45): 46 
[%r140 = add i64 %r112, 16; d: 140; s: 112]  (46): 47 
[%r141 = inttoptr i64 %r140 to i64*; d: 141; s: 140]  (47): 48 
[%r142 = add i64 3, 0; d: 142; s: ]  (48): 49 
[store i64 %r142, i64* %r141, align 8; d: s: 142, 141]  (49): 50 
[%r143 = add i64 %r111, 24; d: 143; s: 111]  (50): 51 
[%r144 = inttoptr i64 %r143 to i64*; d: 144; s: 143]  (51): 52 
[store i64 %r112, i64* %r144, align 8; d: s: 112, 144]  (52): 53 
[%r145 = add i64 %r111, 16; d: 145; s: 111]  (53): 54 
[%r146 = inttoptr i64 %r145 to i64*; d: 146; s: 145]  (54): 55 
[%r147 = ptrtoint i64* @derived$b to i64; d: 147; s: ]  (55): 56 
[store i64 %r147, i64* %r146, align 8; d: s: 147, 146]  (56): 57 
[%r109 = add i64 %r111, 0; d: 109; s: 111]  (57): 58 
[%r150 = inttoptr i64 %r108 to i64*; d: 150; s: 108]  (58): 59 
[%r149 = load i64, i64* %r150, align 8; d: 149; s: 150]  (59): 60 
[%r152 = inttoptr i64 %r109 to i64*; d: 152; s: 109]  (60): 61 
[%r151 = load i64, i64* %r152, align 8; d: 151; s: 152]  (61): 62 
[%r148 = icmp eq i64 %r149, %r151; d: 148; s: 149, 151]  (62): 63 
[br i1 %r148, label %L0, label %L1; d: s: 148]  (63): 64 110 
[         L1:; d: s: ]  (64): 65 
[call void @putint(i64 0); d: s: ]  (65): 66 
[br label %L2; d: s: ]  (66): 67 
[         L2:; d: s: ]  (67): 68 
[call void @putch(i64 10); d: s: ]  (68): 69 
[br label %L3; d: s: ]  (69): 70 
[         L3:; d: s: ]  (70): 71 
[%r157 = add i64 %r109, 24; d: 157; s: 109]  (71): 72 
[%r158 = inttoptr i64 %r157 to i64*; d: 158; s: 157]  (72): 73 
[%r156 = load i64, i64* %r158, align 8; d: 156; s: 158]  (73): 74 
[%r155 = sub i64 %r156, 8; d: 155; s: 156]  (74): 75 
[%r159 = inttoptr i64 %r155 to i64*; d: 159; s: 155]  (75): 76 
[%r154 = load i64, i64* %r159, align 8; d: 154; s: 159]  (76): 77 
[%r153 = icmp slt i64 %r100, %r154; d: 153; s: 100, 154]  (77): 78 
[br i1 %r153, label %L5, label %L4; d: s: 153]  (78): 79 113 
[         L4:; d: s: ]  (79): 80 
[call void @putch(i64 10); d: s: ]  (80): 81 
[%r161 = add i64 %r108, 16; d: 161; s: 108]  (81): 82 
[%r162 = inttoptr i64 %r161 to i64*; d: 162; s: 161]  (82): 83 
[%r160 = load i64, i64* %r162, align 8; d: 160; s: 162]  (83): 84 
[%r163 = inttoptr i64 %r160 to i64*; d: 163; s: 160]  (84): 85 
[%r113 = call i64 %r163(i64 %r108); d: 113; s: 163, 108]  (85): 86 
[call void @putint(i64 %r113); d: s: 113]  (86): 87 
[call void @putch(i64 10); d: s: ]  (87): 88 
[%r165 = add i64 %r109, 16; d: 165; s: 109]  (88): 89 
[%r166 = inttoptr i64 %r165 to i64*; d: 166; s: 165]  (89): 90 
[%r164 = load i64, i64* %r166, align 8; d: 164; s: 166]  (90): 91 
[%r167 = inttoptr i64 %r164 to i64*; d: 167; s: 164]  (91): 92 
[%r114 = call i64 %r167(i64 %r109); d: 114; s: 167, 109]  (92): 93 
[call void @putint(i64 %r114); d: s: 114]  (93): 94 
[call void @putch(i64 10); d: s: ]  (94): 95 
[call void @putint(i64 %r101); d: s: 101]  (95): 96 
[call void @putch(i64 10); d: s: ]  (96): 97 
[call void @putint(i64 %r102); d: s: 102]  (97): 98 
[call void @putch(i64 10); d: s: ]  (98): 99 
[call void @putint(i64 %r103); d: s: 103]  (99): 100 
[call void @putch(i64 10); d: s: ]  (100): 101 
[call void @putint(i64 %r104); d: s: 104]  (101): 102 
[call void @putch(i64 10); d: s: ]  (102): 103 
[call void @putint(i64 %r105); d: s: 105]  (103): 104 
[call void @putch(i64 10); d: s: ]  (104): 105 
[call void @putint(i64 %r106); d: s: 106]  (105): 106 
[call void @putch(i64 10); d: s: ]  (106): 107 
[call void @putint(i64 %r107); d: s: 107]  (107): 108 
[call void @putch(i64 10); d: s: ]  (108): 109 
[   ret i64 0; d: s: ]  (109): 110 
[         L0:; d: s: ]  (110): 111 
[call void @putint(i64 1); d: s: ]  (111): 112 
[br label %L2; d: s: ]  (112): 67 
[         L5:; d: s: ]  (113): 114 
[%r171 = add i64 %r109, 24; d: 171; s: 109]  (114): 115 
[%r172 = inttoptr i64 %r171 to i64*; d: 172; s: 171]  (115): 116 
[%r170 = load i64, i64* %r172, align 8; d: 170; s: 172]  (116): 117 
[%r173 = mul i64 %r100, 8; d: 173; s: 100]  (117): 118 
[%r169 = add i64 %r170, %r173; d: 169; s: 170, 173]  (118): 119 
[%r174 = inttoptr i64 %r169 to i64*; d: 174; s: 169]  (119): 120 
[%r168 = load i64, i64* %r174, align 8; d: 168; s: 174]  (120): 121 
[call void @putint(i64 %r168); d: s: 168]  (121): 122 
[call void @putint(i64 32); d: s: ]  (122): 123 
[%r100 = add i64 %r100, 1; d: 100; s: 100]  (123): 124 
[br label %L3; d: s: ]  (124): 70 

/* ------Liveness Graph------*/
Number of iterations=198
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 2 
def=100, 
use=
In=
Out=100, 
----------------------
 (2): 3 
def=101, 
use=
In=100, 
Out=100, 101, 
----------------------
 (3): 4 
def=102, 
use=
In=101, 100, 
Out=102, 101, 100, 
----------------------
 (4): 5 
def=103, 
use=
In=100, 101, 102, 
Out=100, 101, 102, 103, 
----------------------
 (5): 6 
def=104, 
use=
In=103, 102, 101, 100, 
Out=104, 103, 102, 101, 100, 
----------------------
 (6): 7 
def=105, 
use=
In=100, 101, 102, 103, 104, 
Out=100, 101, 102, 103, 104, 105, 
----------------------
 (7): 8 
def=106, 
use=
In=105, 104, 103, 102, 101, 100, 
Out=106, 105, 104, 103, 102, 101, 100, 
----------------------
 (8): 9 
def=107, 
use=
In=100, 101, 102, 103, 104, 105, 106, 
Out=100, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (9): 10 
def=116, 
use=
In=107, 106, 105, 104, 103, 102, 101, 100, 
Out=116, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (10): 11 
def=110, 
use=116, 
In=100, 101, 102, 103, 104, 105, 106, 107, 116, 
Out=110, 100, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (11): 12 
def=117, 
use=110, 
In=107, 106, 105, 104, 103, 102, 101, 100, 110, 
Out=117, 107, 106, 105, 104, 103, 102, 101, 100, 110, 
----------------------
 (12): 13 
def=118, 
use=117, 
In=110, 100, 101, 102, 103, 104, 105, 106, 107, 117, 
Out=110, 100, 101, 102, 103, 104, 105, 106, 107, 118, 
----------------------
 (13): 14 
def=119, 
use=
In=118, 107, 106, 105, 104, 103, 102, 101, 100, 110, 
Out=118, 119, 107, 106, 105, 104, 103, 102, 101, 100, 110, 
----------------------
 (14): 15 
def=
use=119, 118, 
In=110, 100, 101, 102, 103, 104, 105, 106, 107, 119, 118, 
Out=110, 100, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (15): 16 
def=120, 
use=110, 
In=107, 106, 105, 104, 103, 102, 101, 100, 110, 
Out=110, 107, 106, 105, 104, 103, 102, 101, 100, 120, 
----------------------
 (16): 17 
def=121, 
use=
In=120, 100, 101, 102, 103, 104, 105, 106, 107, 110, 
Out=120, 121, 100, 101, 102, 103, 104, 105, 106, 107, 110, 
----------------------
 (17): 18 
def=
use=121, 120, 
In=110, 107, 106, 105, 104, 103, 102, 101, 100, 121, 120, 
Out=110, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (18): 19 
def=122, 
use=110, 
In=100, 101, 102, 103, 104, 105, 106, 107, 110, 
Out=122, 100, 101, 102, 103, 104, 105, 106, 107, 110, 
----------------------
 (19): 20 
def=123, 
use=122, 
In=110, 107, 106, 105, 104, 103, 102, 101, 100, 122, 
Out=110, 107, 106, 105, 104, 103, 102, 101, 100, 123, 
----------------------
 (20): 21 
def=124, 
use=
In=123, 100, 101, 102, 103, 104, 105, 106, 107, 110, 
Out=123, 124, 100, 101, 102, 103, 104, 105, 106, 107, 110, 
----------------------
 (21): 22 
def=
use=124, 123, 
In=110, 107, 106, 105, 104, 103, 102, 101, 100, 124, 123, 
Out=110, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (22): 23 
def=108, 
use=110, 
In=100, 101, 102, 103, 104, 105, 106, 107, 110, 
Out=100, 101, 102, 103, 104, 105, 106, 107, 108, 
----------------------
 (23): 24 
def=125, 
use=
In=108, 107, 106, 105, 104, 103, 102, 101, 100, 
Out=125, 108, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (24): 25 
def=111, 
use=125, 
In=100, 101, 102, 103, 104, 105, 106, 107, 108, 125, 
Out=111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 
----------------------
 (25): 26 
def=126, 
use=111, 
In=108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 
Out=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 126, 
----------------------
 (26): 27 
def=127, 
use=
In=126, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
Out=126, 127, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
----------------------
 (27): 28 
def=
use=127, 126, 
In=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 127, 126, 
Out=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (28): 29 
def=128, 
use=111, 
In=100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
Out=128, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
----------------------
 (29): 30 
def=129, 
use=128, 
In=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 128, 
Out=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 129, 
----------------------
 (30): 31 
def=130, 
use=
In=129, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
Out=129, 130, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
----------------------
 (31): 32 
def=
use=130, 129, 
In=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 130, 129, 
Out=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (32): 33 
def=131, 
use=
In=100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
Out=131, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
----------------------
 (33): 34 
def=115, 
use=131, 
In=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 131, 
Out=115, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (34): 35 
def=112, 
use=115, 
In=100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 115, 
Out=112, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
----------------------
 (35): 36 
def=132, 
use=112, 
In=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 112, 
Out=132, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 112, 
----------------------
 (36): 37 
def=133, 
use=132, 
In=112, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 132, 
Out=112, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 133, 
----------------------
 (37): 38 
def=134, 
use=
In=133, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 112, 
Out=133, 134, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 112, 
----------------------
 (38): 39 
def=
use=134, 133, 
In=112, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 134, 133, 
Out=112, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 
----------------------
 (39): 40 
def=135, 
use=112, 
In=111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 112, 
Out=112, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 135, 
----------------------
 (40): 41 
def=136, 
use=
In=135, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 
Out=135, 136, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 
----------------------
 (41): 42 
def=
use=136, 135, 
In=112, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 136, 135, 
Out=112, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (42): 43 
def=137, 
use=112, 
In=100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 
Out=137, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 
----------------------
 (43): 44 
def=138, 
use=137, 
In=112, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 137, 
Out=112, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 138, 
----------------------
 (44): 45 
def=139, 
use=
In=138, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 
Out=138, 139, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 
----------------------
 (45): 46 
def=
use=139, 138, 
In=112, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 139, 138, 
Out=112, 111, 108, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (46): 47 
def=140, 
use=112, 
In=100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 
Out=140, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 111, 
----------------------
 (47): 48 
def=141, 
use=140, 
In=111, 112, 108, 107, 106, 105, 104, 103, 102, 101, 100, 140, 
Out=111, 112, 108, 107, 106, 105, 104, 103, 102, 101, 100, 141, 
----------------------
 (48): 49 
def=142, 
use=
In=141, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 111, 
Out=141, 142, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 111, 
----------------------
 (49): 50 
def=
use=142, 141, 
In=111, 112, 108, 107, 106, 105, 104, 103, 102, 101, 100, 142, 141, 
Out=111, 112, 108, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (50): 51 
def=143, 
use=111, 
In=100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 111, 
Out=143, 111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 
----------------------
 (51): 52 
def=144, 
use=143, 
In=112, 108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 143, 
Out=144, 112, 108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 
----------------------
 (52): 53 
def=
use=112, 144, 
In=111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 144, 
Out=111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 
----------------------
 (53): 54 
def=145, 
use=111, 
In=108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 
Out=145, 108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 
----------------------
 (54): 55 
def=146, 
use=145, 
In=111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 145, 
Out=111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 146, 
----------------------
 (55): 56 
def=147, 
use=
In=146, 108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 
Out=146, 147, 108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 
----------------------
 (56): 57 
def=
use=147, 146, 
In=111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 147, 146, 
Out=111, 100, 101, 102, 103, 104, 105, 106, 107, 108, 
----------------------
 (57): 58 
def=109, 
use=111, 
In=108, 107, 106, 105, 104, 103, 102, 101, 100, 111, 
Out=108, 109, 107, 106, 105, 104, 103, 102, 101, 100, 
----------------------
 (58): 59 
def=150, 
use=108, 
In=100, 101, 102, 103, 104, 105, 106, 107, 109, 108, 
Out=150, 100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (59): 60 
def=149, 
use=150, 
In=109, 107, 106, 105, 104, 103, 102, 101, 108, 100, 150, 
Out=109, 149, 107, 106, 105, 104, 103, 102, 101, 108, 100, 
----------------------
 (60): 61 
def=152, 
use=109, 
In=100, 108, 101, 102, 103, 104, 105, 106, 107, 149, 109, 
Out=152, 109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 149, 
----------------------
 (61): 62 
def=151, 
use=152, 
In=149, 107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 152, 
Out=151, 149, 107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (62): 63 
def=148, 
use=149, 151, 
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 149, 151, 
Out=148, 109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (63): 64 110 
def=
use=148, 
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 148, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (64): 65 
def=
use=
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (65): 66 
def=
use=
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (66): 67 
def=
use=
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (67): 68 
def=
use=
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (68): 69 
def=
use=
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (69): 70 
def=
use=
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (70): 71 
def=
use=
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (71): 72 
def=157, 
use=109, 
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
Out=157, 109, 107, 106, 105, 104, 103, 102, 101, 108, 100, 
----------------------
 (72): 73 
def=158, 
use=157, 
In=100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 157, 
Out=158, 100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (73): 74 
def=156, 
use=158, 
In=109, 107, 106, 105, 104, 103, 102, 101, 108, 100, 158, 
Out=156, 109, 107, 106, 105, 104, 103, 102, 101, 108, 100, 
----------------------
 (74): 75 
def=155, 
use=156, 
In=100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 156, 
Out=155, 100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (75): 76 
def=159, 
use=155, 
In=109, 107, 106, 105, 104, 103, 102, 101, 108, 100, 155, 
Out=159, 109, 107, 106, 105, 104, 103, 102, 101, 108, 100, 
----------------------
 (76): 77 
def=154, 
use=159, 
In=100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 159, 
Out=154, 100, 108, 101, 102, 103, 104, 105, 106, 107, 109, 
----------------------
 (77): 78 
def=153, 
use=100, 154, 
In=109, 107, 106, 105, 104, 103, 102, 101, 108, 100, 154, 
Out=153, 109, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (78): 79 113 
def=
use=153, 
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 109, 153, 
Out=108, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (79): 80 
def=
use=
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
Out=109, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (80): 81 
def=
use=
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
Out=108, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (81): 82 
def=161, 
use=108, 
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
Out=161, 109, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (82): 83 
def=162, 
use=161, 
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 109, 161, 
Out=162, 108, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (83): 84 
def=160, 
use=162, 
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 108, 162, 
Out=160, 109, 100, 107, 106, 105, 104, 103, 102, 101, 108, 
----------------------
 (84): 85 
def=163, 
use=160, 
In=108, 101, 102, 103, 104, 105, 106, 107, 100, 109, 160, 
Out=108, 163, 101, 102, 103, 104, 105, 106, 107, 100, 109, 
----------------------
 (85): 86 
def=113, 
use=163, 108, 
In=109, 100, 107, 106, 105, 104, 103, 102, 101, 163, 108, 
Out=113, 109, 108, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (86): 87 
def=
use=113, 
In=101, 102, 103, 104, 105, 106, 107, 100, 108, 109, 113, 
Out=101, 102, 103, 104, 105, 106, 107, 100, 108, 109, 
----------------------
 (87): 88 
def=
use=
In=109, 108, 100, 107, 106, 105, 104, 103, 102, 101, 
Out=109, 108, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (88): 89 
def=165, 
use=109, 
In=101, 102, 103, 104, 105, 106, 107, 100, 108, 109, 
Out=165, 101, 102, 103, 104, 105, 106, 107, 100, 108, 109, 
----------------------
 (89): 90 
def=166, 
use=165, 
In=109, 108, 100, 107, 106, 105, 104, 103, 102, 101, 165, 
Out=166, 109, 108, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (90): 91 
def=164, 
use=166, 
In=101, 102, 103, 104, 105, 106, 107, 100, 108, 109, 166, 
Out=164, 101, 102, 103, 104, 105, 106, 107, 100, 108, 109, 
----------------------
 (91): 92 
def=167, 
use=164, 
In=109, 108, 100, 107, 106, 105, 104, 103, 102, 101, 164, 
Out=109, 167, 108, 100, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (92): 93 
def=114, 
use=167, 109, 
In=101, 102, 103, 104, 105, 106, 107, 100, 108, 167, 109, 
Out=114, 101, 102, 103, 104, 105, 106, 107, 109, 100, 108, 
----------------------
 (93): 94 
def=
use=114, 
In=108, 100, 109, 107, 106, 105, 104, 103, 102, 101, 114, 
Out=108, 100, 109, 107, 106, 105, 104, 103, 102, 101, 
----------------------
 (94): 95 
def=
use=
In=101, 102, 103, 104, 105, 106, 107, 109, 100, 108, 
Out=101, 102, 103, 104, 105, 106, 107, 109, 100, 108, 
----------------------
 (95): 96 
def=
use=101, 
In=108, 100, 109, 107, 106, 105, 104, 103, 102, 101, 
Out=101, 108, 100, 109, 107, 106, 105, 104, 103, 102, 
----------------------
 (96): 97 
def=
use=
In=102, 103, 104, 105, 106, 107, 109, 100, 108, 101, 
Out=102, 103, 104, 105, 106, 107, 109, 100, 108, 101, 
----------------------
 (97): 98 
def=
use=102, 
In=101, 108, 100, 109, 107, 106, 105, 104, 103, 102, 
Out=102, 101, 108, 100, 109, 107, 106, 105, 104, 103, 
----------------------
 (98): 99 
def=
use=
In=103, 104, 105, 106, 107, 109, 100, 108, 101, 102, 
Out=103, 104, 105, 106, 107, 109, 100, 108, 101, 102, 
----------------------
 (99): 100 
def=
use=103, 
In=102, 101, 108, 100, 109, 107, 106, 105, 104, 103, 
Out=103, 102, 101, 108, 100, 109, 107, 106, 105, 104, 
----------------------
 (100): 101 
def=
use=
In=104, 105, 106, 107, 109, 100, 108, 101, 102, 103, 
Out=104, 105, 106, 107, 109, 100, 108, 101, 102, 103, 
----------------------
 (101): 102 
def=
use=104, 
In=103, 102, 101, 108, 100, 109, 107, 106, 105, 104, 
Out=104, 103, 102, 101, 108, 100, 109, 107, 106, 105, 
----------------------
 (102): 103 
def=
use=
In=105, 106, 107, 109, 100, 108, 101, 102, 103, 104, 
Out=105, 106, 107, 109, 100, 108, 101, 102, 103, 104, 
----------------------
 (103): 104 
def=
use=105, 
In=104, 103, 102, 101, 108, 100, 109, 107, 106, 105, 
Out=105, 104, 103, 102, 101, 108, 100, 109, 107, 106, 
----------------------
 (104): 105 
def=
use=
In=106, 107, 109, 100, 108, 101, 102, 103, 104, 105, 
Out=106, 107, 109, 100, 108, 101, 102, 103, 104, 105, 
----------------------
 (105): 106 
def=
use=106, 
In=105, 104, 103, 102, 101, 108, 100, 109, 107, 106, 
Out=106, 105, 104, 103, 102, 101, 108, 100, 109, 107, 
----------------------
 (106): 107 
def=
use=
In=107, 109, 100, 108, 101, 102, 103, 104, 105, 106, 
Out=107, 109, 100, 108, 101, 102, 103, 104, 105, 106, 
----------------------
 (107): 108 
def=
use=107, 
In=106, 105, 104, 103, 102, 101, 108, 100, 109, 107, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (108): 109 
def=
use=
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (109): 110 
def=
use=
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (110): 111 
def=
use=
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (111): 112 
def=
use=
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
----------------------
 (112): 67 
def=
use=
In=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (113): 114 
def=
use=
In=109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
Out=109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (114): 115 
def=171, 
use=109, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 
Out=171, 100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 
----------------------
 (115): 116 
def=172, 
use=171, 
In=109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 171, 
Out=172, 109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (116): 117 
def=170, 
use=172, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 172, 
Out=100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 170, 
----------------------
 (117): 118 
def=173, 
use=100, 
In=170, 109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
Out=173, 170, 109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (118): 119 
def=169, 
use=170, 173, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 170, 173, 
Out=169, 100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 
----------------------
 (119): 120 
def=174, 
use=169, 
In=109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 169, 
Out=174, 109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (120): 121 
def=168, 
use=174, 
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 174, 
Out=168, 100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 
----------------------
 (121): 122 
def=
use=168, 
In=109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 168, 
Out=109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
----------------------
 (122): 123 
def=
use=
In=100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 
Out=100, 107, 106, 105, 104, 103, 102, 101, 108, 109, 
----------------------
 (123): 124 
def=100, 
use=100, 
In=109, 108, 101, 102, 103, 104, 105, 106, 107, 100, 
Out=109, 100, 108, 101, 102, 103, 104, 105, 106, 107, 
----------------------
 (124): 70 
def=
use=
In=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 
Out=107, 106, 105, 104, 103, 102, 101, 108, 100, 109, 

------For function ----- derived$b

------Basic Block Graph---------
C10 (0): 
------~Final traced LLVM instructions ---------
define i64 @derived$b(i64 %r99) {
C10:
%r255 = add i64 %r99, 24
%r256 = inttoptr i64 %r255 to i64*
%r254 = load i64, i64* %r256, align 8
%r253 = add i64 %r254, 8
%r257 = inttoptr i64 %r253 to i64*
%r252 = load i64, i64* %r257, align 8
ret i64 %r252
}

------Flow Graph------
[        C10:; d: s: ]  (0): 1 
[%r255 = add i64 %r99, 24; d: 255; s: 99]  (1): 2 
[%r256 = inttoptr i64 %r255 to i64*; d: 256; s: 255]  (2): 3 
[%r254 = load i64, i64* %r256, align 8; d: 254; s: 256]  (3): 4 
[%r253 = add i64 %r254, 8; d: 253; s: 254]  (4): 5 
[%r257 = inttoptr i64 %r253 to i64*; d: 257; s: 253]  (5): 6 
[%r252 = load i64, i64* %r257, align 8; d: 252; s: 257]  (6): 7 
[ret i64 %r252; d: s: 252]  (7): 

/* ------Liveness Graph------*/
Number of iterations=202
----------------------
 (0): 1 
def=
use=
In=99, 
Out=99, 
----------------------
 (1): 2 
def=255, 
use=99, 
In=99, 
Out=255, 
----------------------
 (2): 3 
def=256, 
use=255, 
In=255, 
Out=256, 
----------------------
 (3): 4 
def=254, 
use=256, 
In=256, 
Out=254, 
----------------------
 (4): 5 
def=253, 
use=254, 
In=254, 
Out=253, 
----------------------
 (5): 6 
def=257, 
use=253, 
In=253, 
Out=257, 
----------------------
 (6): 7 
def=252, 
use=257, 
In=257, 
Out=252, 
----------------------
 (7): 
def=
use=252, 
In=252, 
Out=

------For function ----- base$b

------Basic Block Graph---------
C13 (0): 
------~Final traced LLVM instructions ---------
define i64 @base$b(i64 %r99) {
C13:
ret i64 1
}

------Flow Graph------
[        C13:; d: s: ]  (0): 1 
[   ret i64 1; d: s: ]  (1): 

/* ------Liveness Graph------*/
Number of iterations=203
----------------------
 (0): 1 
def=
use=
In=
Out=
----------------------
 (1): 
def=
use=
In=
Out=
